//------------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by cswinrt.exe version 2.0.3.230608.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using WinRT;
using WinRT.Interop;


#pragma warning disable 0169 // warning CS0169: The field '...' is never used
#pragma warning disable 0649 // warning CS0169: Field '...' is never assigned to
#pragma warning disable CA2207, CA1063, CA1033, CA1001, CA2213

namespace Telegram.Native.Calls
{
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.BroadcastPartRequestedDeferral))]public delegate void BroadcastPartRequestedDeferral(long time, long response, global::Telegram.Td.Api.FilePart filePart);
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.BroadcastPartRequestedEventArgs))]
    [global::WinRT.ProjectedRuntimeClass(typeof(IBroadcastPartRequestedEventArgs))]
    [global::WinRT.ObjectReferenceWrapper(nameof(_inner))]
    public sealed class BroadcastPartRequestedEventArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<BroadcastPartRequestedEventArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private IObjectReference _inner = null;



        private IObjectReference _objRef_global__Telegram_Native_Calls_IBroadcastPartRequestedEventArgs => _inner;
        private IBroadcastPartRequestedEventArgs _default => null;

        public static BroadcastPartRequestedEventArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<BroadcastPartRequestedEventArgs>.FromAbi(thisPtr);
        }

        internal BroadcastPartRequestedEventArgs(IObjectReference objRef)
        {
            _inner = objRef.As(GuidGenerator.GetIID(typeof(IBroadcastPartRequestedEventArgs).GetHelperType()));

        }

        public static bool operator ==(BroadcastPartRequestedEventArgs x, BroadcastPartRequestedEventArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(BroadcastPartRequestedEventArgs x, BroadcastPartRequestedEventArgs y) => !(x == y);
        public bool Equals(BroadcastPartRequestedEventArgs other) => this == other;
        public override bool Equals(object obj) => obj is BroadcastPartRequestedEventArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public int ChannelId => global::ABI.Telegram.Native.Calls.IBroadcastPartRequestedEventArgsMethods.get_ChannelId(_objRef_global__Telegram_Native_Calls_IBroadcastPartRequestedEventArgs);

        public BroadcastPartRequestedDeferral Deferral => global::ABI.Telegram.Native.Calls.IBroadcastPartRequestedEventArgsMethods.get_Deferral(_objRef_global__Telegram_Native_Calls_IBroadcastPartRequestedEventArgs);

        public int Scale => global::ABI.Telegram.Native.Calls.IBroadcastPartRequestedEventArgsMethods.get_Scale(_objRef_global__Telegram_Native_Calls_IBroadcastPartRequestedEventArgs);

        public long Time => global::ABI.Telegram.Native.Calls.IBroadcastPartRequestedEventArgsMethods.get_Time(_objRef_global__Telegram_Native_Calls_IBroadcastPartRequestedEventArgs);

        public global::Telegram.Td.Api.GroupCallVideoQuality VideoQuality => global::ABI.Telegram.Native.Calls.IBroadcastPartRequestedEventArgsMethods.get_VideoQuality(_objRef_global__Telegram_Native_Calls_IBroadcastPartRequestedEventArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.InterfaceIIDs.IInspectable_IID == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.BroadcastTimeRequestedDeferral))]public delegate void BroadcastTimeRequestedDeferral(long time);
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.BroadcastTimeRequestedEventArgs))]
    [global::WinRT.ProjectedRuntimeClass(typeof(IBroadcastTimeRequestedEventArgs))]
    [global::WinRT.ObjectReferenceWrapper(nameof(_inner))]
    public sealed class BroadcastTimeRequestedEventArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<BroadcastTimeRequestedEventArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private IObjectReference _inner = null;



        private IObjectReference _objRef_global__Telegram_Native_Calls_IBroadcastTimeRequestedEventArgs => _inner;
        private IBroadcastTimeRequestedEventArgs _default => null;

        public static BroadcastTimeRequestedEventArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<BroadcastTimeRequestedEventArgs>.FromAbi(thisPtr);
        }

        internal BroadcastTimeRequestedEventArgs(IObjectReference objRef)
        {
            _inner = objRef.As(GuidGenerator.GetIID(typeof(IBroadcastTimeRequestedEventArgs).GetHelperType()));

        }

        public static bool operator ==(BroadcastTimeRequestedEventArgs x, BroadcastTimeRequestedEventArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(BroadcastTimeRequestedEventArgs x, BroadcastTimeRequestedEventArgs y) => !(x == y);
        public bool Equals(BroadcastTimeRequestedEventArgs other) => this == other;
        public override bool Equals(object obj) => obj is BroadcastTimeRequestedEventArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public BroadcastTimeRequestedDeferral Deferral => global::ABI.Telegram.Native.Calls.IBroadcastTimeRequestedEventArgsMethods.get_Deferral(_objRef_global__Telegram_Native_Calls_IBroadcastTimeRequestedEventArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.InterfaceIIDs.IInspectable_IID == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.EmitJsonPayloadDelegate))]public delegate void EmitJsonPayloadDelegate(int ssrc, string payload);
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.GroupNetworkStateChangedEventArgs))]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGroupNetworkStateChangedEventArgs))]
    [global::WinRT.ObjectReferenceWrapper(nameof(_inner))]
    public sealed class GroupNetworkStateChangedEventArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GroupNetworkStateChangedEventArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private IObjectReference _inner = null;



        private IObjectReference _objRef_global__Telegram_Native_Calls_IGroupNetworkStateChangedEventArgs => _inner;
        private IGroupNetworkStateChangedEventArgs _default => null;

        public static GroupNetworkStateChangedEventArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GroupNetworkStateChangedEventArgs>.FromAbi(thisPtr);
        }

        internal GroupNetworkStateChangedEventArgs(IObjectReference objRef)
        {
            _inner = objRef.As(GuidGenerator.GetIID(typeof(IGroupNetworkStateChangedEventArgs).GetHelperType()));

        }

        public static bool operator ==(GroupNetworkStateChangedEventArgs x, GroupNetworkStateChangedEventArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GroupNetworkStateChangedEventArgs x, GroupNetworkStateChangedEventArgs y) => !(x == y);
        public bool Equals(GroupNetworkStateChangedEventArgs other) => this == other;
        public override bool Equals(object obj) => obj is GroupNetworkStateChangedEventArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public bool IsConnected => global::ABI.Telegram.Native.Calls.IGroupNetworkStateChangedEventArgsMethods.get_IsConnected(_objRef_global__Telegram_Native_Calls_IGroupNetworkStateChangedEventArgs);

        public bool IsTransitioningFromBroadcastToRtc => global::ABI.Telegram.Native.Calls.IGroupNetworkStateChangedEventArgsMethods.get_IsTransitioningFromBroadcastToRtc(_objRef_global__Telegram_Native_Calls_IGroupNetworkStateChangedEventArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.InterfaceIIDs.IInspectable_IID == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][Guid("11387870-7248-51F3-B070-0EC3C53FEBCB")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.IBroadcastPartRequestedEventArgs))]
    internal interface IBroadcastPartRequestedEventArgs
    {
        int ChannelId { get; }
        BroadcastPartRequestedDeferral Deferral { get; }
        int Scale { get; }
        long Time { get; }
        global::Telegram.Td.Api.GroupCallVideoQuality VideoQuality { get; }
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][Guid("0B76823D-41E0-5DDD-8BBC-786AE83759F1")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.IBroadcastTimeRequestedEventArgs))]
    internal interface IBroadcastTimeRequestedEventArgs
    {
        BroadcastTimeRequestedDeferral Deferral { get; }
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][Guid("BD0146A5-4000-5A30-87F3-7EA31D1F25E3")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.IGroupNetworkStateChangedEventArgs))]
    internal interface IGroupNetworkStateChangedEventArgs
    {
        bool IsConnected { get; }
        bool IsTransitioningFromBroadcastToRtc { get; }
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][Guid("E5BB29D9-A7A1-5594-A06B-BEB3B5065FF5")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.IRemoteMediaStateUpdatedEventArgs))]
    internal interface IRemoteMediaStateUpdatedEventArgs
    {
        VoipAudioState Audio { get; }
        VoipVideoState Video { get; }
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][Guid("28FC6414-8A99-54E8-9007-DD5654B8E226")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.ISignalingDataEmittedEventArgs))]
    internal interface ISignalingDataEmittedEventArgs
    {
        global::System.Collections.Generic.IList<byte> Data { get; }
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][Guid("07EF2498-0E01-52E7-822F-300866DBC3C5")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.IVoipCaptureBase))]
    internal interface IVoipCaptureBase
    {
        void SetState(VoipVideoState state);
        [global::Windows.Foundation.Metadata.Overload(@"SetOutput")]
        VoipVideoRendererToken SetOutput(global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl canvas);
        [global::Windows.Foundation.Metadata.Overload(@"SetOutput2")]
        VoipVideoRendererToken SetOutput(global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl canvas, bool enableBlur);
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][Guid("0D10D4C5-C79B-52FC-8BBC-A8D1E6443BAE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.IVoipCaptureBaseFactory))]
    internal interface IVoipCaptureBaseFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][Guid("E59055F1-4062-5A80-A938-D3F41B2AB517")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.IVoipDescriptor))]
    internal interface IVoipDescriptor
    {
        string AudioInputId { get; set; }
        string AudioOutputId { get; set; }
        string CustomParameters { get; set; }
        bool EnableP2p { get; set; }
        global::System.Collections.Generic.IList<byte> EncryptionKey { get; set; }
        double InitializationTimeout { get; set; }
        bool IsOutgoing { get; set; }
        global::System.Collections.Generic.IList<byte> PersistentState { get; set; }
        double ReceiveTimeout { get; set; }
        global::System.Collections.Generic.IList<global::Telegram.Td.Api.CallServer> Servers { get; set; }
        VoipCaptureBase VideoCapture { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][Guid("3F259B6B-9D92-5727-8B55-55EB7ED04D4F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.IVoipGroupDescriptor))]
    internal interface IVoipGroupDescriptor
    {
        string AudioInputId { get; set; }
        string AudioOutputId { get; set; }
        bool IsNoiseSuppressionEnabled { get; set; }
        VoipCaptureBase VideoCapture { get; set; }
        VoipVideoContentType VideoContentType { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][Guid("5D21933E-CD18-5EFF-81FF-3A84DE5968CE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.IVoipGroupManager))]
    internal interface IVoipGroupManager
    {
        void SetConnectionMode(VoipGroupConnectionMode connectionMode, bool keepBroadcastIfWasEnabled, bool isUnifiedBroadcast);
        void EmitJoinPayload(EmitJsonPayloadDelegate completion);
        void SetJoinResponsePayload(string payload);
        void RemoveSsrcs(global::System.Collections.Generic.IList<int> ssrcs);
        VoipVideoRendererToken AddIncomingVideoOutput(int audioSource, global::Telegram.Td.Api.GroupCallParticipantVideoInfo videoInfo, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl canvas);
        void AddUnifiedVideoOutput(global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl canvas);
        void SetAudioOutputDevice(string id);
        void SetAudioInputDevice(string id);
        void SetVideoCapture(VoipCaptureBase videoCapture);
        void SetVolume(int ssrc, double volume);
        void SetRequestedVideoChannels(global::System.Collections.Generic.IList<VoipVideoChannelInfo> descriptions);
        bool IsMuted { get; set; }
        bool IsNoiseSuppressionEnabled { get; set; }
        event global::Windows.Foundation.TypedEventHandler<VoipGroupManager, global::System.Collections.Generic.IList<VoipGroupParticipant>> AudioLevelsUpdated;
        event global::Windows.Foundation.TypedEventHandler<VoipGroupManager, BroadcastPartRequestedEventArgs> BroadcastPartRequested;
        event global::Windows.Foundation.TypedEventHandler<VoipGroupManager, BroadcastTimeRequestedEventArgs> BroadcastTimeRequested;
        event global::Windows.Foundation.TypedEventHandler<VoipGroupManager, GroupNetworkStateChangedEventArgs> NetworkStateUpdated;
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][Guid("0CCF1561-0C5E-5F12-AE67-08521B193A76")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.IVoipGroupManagerFactory))]
    internal interface IVoipGroupManagerFactory
    {
        VoipGroupManager CreateInstance(VoipGroupDescriptor descriptor);
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][Guid("F2769AB3-B2BB-5C10-BBB9-A5286483BFEA")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.IVoipManager))]
    internal interface IVoipManager
    {
        void Start();
        void SetAudioOutputGainControlEnabled(bool enabled);
        void SetEchoCancellationStrength(int strength);
        VoipVideoRendererToken SetIncomingVideoOutput(global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl canvas);
        void SetAudioInputDevice(string id);
        void SetAudioOutputDevice(string id);
        void SetAudioOutputDuckingEnabled(bool enabled);
        void SetIsLowBatteryLevel(bool isLowBatteryLevel);
        string GetDebugInfo();
        long GetPreferredRelayId();
        void ReceiveSignalingData(global::System.Collections.Generic.IList<byte> data);
        void SetVideoCapture(VoipCaptureBase videoCapture);
        void SetRequestedVideoAspect(float aspect);
        bool IsMuted { get; set; }
        bool SupportsVideo { get; }
        event global::Windows.Foundation.TypedEventHandler<VoipManager, float> AudioLevelUpdated;
        event global::Windows.Foundation.TypedEventHandler<VoipManager, bool> RemoteBatteryLevelIsLowUpdated;
        event global::Windows.Foundation.TypedEventHandler<VoipManager, RemoteMediaStateUpdatedEventArgs> RemoteMediaStateUpdated;
        event global::Windows.Foundation.TypedEventHandler<VoipManager, float> RemotePrefferedAspectRatioUpdated;
        event global::Windows.Foundation.TypedEventHandler<VoipManager, int> SignalBarsUpdated;
        event global::Windows.Foundation.TypedEventHandler<VoipManager, SignalingDataEmittedEventArgs> SignalingDataEmitted;
        event global::Windows.Foundation.TypedEventHandler<VoipManager, VoipState> StateUpdated;
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][Guid("78B38B82-3044-5C2A-AE67-30D55BE0869F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.IVoipManagerFactory))]
    internal interface IVoipManagerFactory
    {
        VoipManager CreateInstance(string version, VoipDescriptor descriptor);
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][Guid("57DBD681-D3D1-5E94-B32D-BA15753C6611")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.IVoipManagerStatics))]
    internal interface IVoipManagerStatics
    {
        global::Telegram.Td.Api.CallProtocol Protocol { get; }
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][Guid("818A0058-CA5E-5859-B2BA-A0FC6EB9111A")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.IVoipScreenCapture))]
    internal interface IVoipScreenCapture
    {
        event global::Windows.Foundation.TypedEventHandler<VoipScreenCapture, object> FatalErrorOccurred;
        event global::Windows.Foundation.TypedEventHandler<VoipScreenCapture, bool> Paused;
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][Guid("258E2794-9166-5238-8BC6-C35A3F39AB0D")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.IVoipScreenCaptureFactory))]
    internal interface IVoipScreenCaptureFactory
    {
        VoipScreenCapture CreateInstance(global::Windows.Graphics.Capture.GraphicsCaptureItem item);
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][Guid("D231D584-6AEB-542F-B78C-F4B91E685F93")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.IVoipScreenCaptureStatics))]
    internal interface IVoipScreenCaptureStatics
    {
        bool IsSupported();
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][Guid("D853281C-39C1-5E7C-9835-93AD18471ED5")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.IVoipVideoCapture))]
    internal interface IVoipVideoCapture
    {
        void SwitchToDevice(string deviceId);
        void SetPreferredAspectRatio(float aspectRatio);
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][Guid("7D44A034-ED4C-5398-BF0E-3FE1AC6B7998")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.IVoipVideoCaptureFactory))]
    internal interface IVoipVideoCaptureFactory
    {
        VoipVideoCapture CreateInstance(string id);
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][Guid("AE59C23F-D6FB-56CA-882F-DA846BFF98D5")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.IVoipVideoChannelInfo))]
    internal interface IVoipVideoChannelInfo
    {
        int AudioSource { get; set; }
        string EndpointId { get; set; }
        VoipVideoChannelQuality MaxQuality { get; set; }
        VoipVideoChannelQuality MinQuality { get; set; }
        global::System.Collections.Generic.IList<global::Telegram.Td.Api.GroupCallVideoSourceGroup> SourceGroups { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][Guid("C7135A80-0166-5BCA-B00E-1766C67E5566")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.IVoipVideoChannelInfoFactory))]
    internal interface IVoipVideoChannelInfoFactory
    {
        VoipVideoChannelInfo CreateInstance(int audioSource, string endpointId, global::System.Collections.Generic.IList<global::Telegram.Td.Api.GroupCallVideoSourceGroup> sourceGroups, VoipVideoChannelQuality minQuality, VoipVideoChannelQuality maxQuality);
        VoipVideoChannelInfo CreateInstance2(VoipVideoRendererToken token, VoipVideoChannelQuality minQuality, VoipVideoChannelQuality maxQuality);
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][Guid("228AE1A1-33CB-5C54-B4D3-CDFC0A56B4D8")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.IVoipVideoRendererToken))]
    internal interface IVoipVideoRendererToken
    {
        bool IsMatch(string endpointId, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl canvasControl);
        void Stop();
        int AudioSource { get; }
        string EndpointId { get; }
        bool IsMirrored { get; set; }
        global::System.Collections.Generic.IList<global::Telegram.Td.Api.GroupCallVideoSourceGroup> SourceGroups { get; }
        global::Microsoft.UI.Xaml.Media.Stretch Stretch { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.RemoteMediaStateUpdatedEventArgs))]
    [global::WinRT.ProjectedRuntimeClass(typeof(IRemoteMediaStateUpdatedEventArgs))]
    [global::WinRT.ObjectReferenceWrapper(nameof(_inner))]
    public sealed class RemoteMediaStateUpdatedEventArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<RemoteMediaStateUpdatedEventArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private IObjectReference _inner = null;



        private IObjectReference _objRef_global__Telegram_Native_Calls_IRemoteMediaStateUpdatedEventArgs => _inner;
        private IRemoteMediaStateUpdatedEventArgs _default => null;

        public static RemoteMediaStateUpdatedEventArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<RemoteMediaStateUpdatedEventArgs>.FromAbi(thisPtr);
        }

        internal RemoteMediaStateUpdatedEventArgs(IObjectReference objRef)
        {
            _inner = objRef.As(GuidGenerator.GetIID(typeof(IRemoteMediaStateUpdatedEventArgs).GetHelperType()));

        }

        public static bool operator ==(RemoteMediaStateUpdatedEventArgs x, RemoteMediaStateUpdatedEventArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(RemoteMediaStateUpdatedEventArgs x, RemoteMediaStateUpdatedEventArgs y) => !(x == y);
        public bool Equals(RemoteMediaStateUpdatedEventArgs other) => this == other;
        public override bool Equals(object obj) => obj is RemoteMediaStateUpdatedEventArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public VoipAudioState Audio => global::ABI.Telegram.Native.Calls.IRemoteMediaStateUpdatedEventArgsMethods.get_Audio(_objRef_global__Telegram_Native_Calls_IRemoteMediaStateUpdatedEventArgs);

        public VoipVideoState Video => global::ABI.Telegram.Native.Calls.IRemoteMediaStateUpdatedEventArgsMethods.get_Video(_objRef_global__Telegram_Native_Calls_IRemoteMediaStateUpdatedEventArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.InterfaceIIDs.IInspectable_IID == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.SignalingDataEmittedEventArgs))]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISignalingDataEmittedEventArgs))]
    [global::WinRT.ObjectReferenceWrapper(nameof(_inner))]
    public sealed class SignalingDataEmittedEventArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SignalingDataEmittedEventArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private IObjectReference _inner = null;



        private IObjectReference _objRef_global__Telegram_Native_Calls_ISignalingDataEmittedEventArgs => _inner;
        private ISignalingDataEmittedEventArgs _default => null;

        public static SignalingDataEmittedEventArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SignalingDataEmittedEventArgs>.FromAbi(thisPtr);
        }

        internal SignalingDataEmittedEventArgs(IObjectReference objRef)
        {
            _inner = objRef.As(GuidGenerator.GetIID(typeof(ISignalingDataEmittedEventArgs).GetHelperType()));

        }

        public static bool operator ==(SignalingDataEmittedEventArgs x, SignalingDataEmittedEventArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SignalingDataEmittedEventArgs x, SignalingDataEmittedEventArgs y) => !(x == y);
        public bool Equals(SignalingDataEmittedEventArgs other) => this == other;
        public override bool Equals(object obj) => obj is SignalingDataEmittedEventArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::System.Collections.Generic.IList<byte> Data => global::ABI.Telegram.Native.Calls.ISignalingDataEmittedEventArgsMethods.get_Data(_objRef_global__Telegram_Native_Calls_ISignalingDataEmittedEventArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.InterfaceIIDs.IInspectable_IID == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")]public enum VoipAudioState : int
    {
        Muted = unchecked((int)0),
        Active = unchecked((int)0x1),
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.VoipCaptureBase))]
    [global::WinRT.ProjectedRuntimeClass(typeof(IVoipCaptureBase))]
    [global::WinRT.ObjectReferenceWrapper(nameof(_inner))]
    public class VoipCaptureBase : global::System.IDisposable, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<VoipCaptureBase>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private IObjectReference _inner = null;

        private volatile global::System.IDisposable _lazy_global__System_IDisposable;
        private global::System.IDisposable Make__lazy_global__System_IDisposable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _lazy_global__System_IDisposable, (global::System.IDisposable)(object)new SingleInterfaceOptimizedObject(typeof(global::System.IDisposable), _inner ?? ((IWinRTObject)this).NativeObject), null);
            return _lazy_global__System_IDisposable;
        }




        private volatile IObjectReference ___objRef_global__Telegram_Native_Calls_IVoipCaptureBase;
        private IObjectReference Make___objRef_global__Telegram_Native_Calls_IVoipCaptureBase()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Telegram_Native_Calls_IVoipCaptureBase, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(GuidGenerator.GetIID(typeof(IVoipCaptureBase).GetHelperType())), null);
            return ___objRef_global__Telegram_Native_Calls_IVoipCaptureBase;
        }
        private IObjectReference _objRef_global__Telegram_Native_Calls_IVoipCaptureBase => ___objRef_global__Telegram_Native_Calls_IVoipCaptureBase ?? Make___objRef_global__Telegram_Native_Calls_IVoipCaptureBase();

        private IVoipCaptureBase _default => null;

        internal sealed class _IVoipCaptureBaseFactory : IWinRTObject
        {
            private IObjectReference _obj;
            private IntPtr ThisPtr => _obj.ThisPtr;
            public _IVoipCaptureBaseFactory()
            {
                _obj = ActivationFactory<VoipCaptureBase>.As(GuidGenerator.GetIID(typeof(Telegram.Native.Calls.IVoipCaptureBaseFactory).GetHelperType()));
            }

            private static _IVoipCaptureBaseFactory _instance = new _IVoipCaptureBaseFactory();
            internal static _IVoipCaptureBaseFactory Instance => _instance;

            IObjectReference IWinRTObject.NativeObject => _obj;
            bool IWinRTObject.HasUnwrappableNativeObject => false;
            private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
            private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
            {
                global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
                return _queryInterfaceCache;
            }
            global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
            private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
            private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
            {
                global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
                return _additionalTypeData;
            }
            global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();


        }

        public static VoipCaptureBase FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<VoipCaptureBase>.FromAbi(thisPtr);
        }

        protected internal VoipCaptureBase(IObjectReference objRef)
        {
            _inner = objRef.As(GuidGenerator.GetIID(typeof(IVoipCaptureBase).GetHelperType()));

        }

        public static bool operator ==(VoipCaptureBase x, VoipCaptureBase y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(VoipCaptureBase x, VoipCaptureBase y) => !(x == y);
        public bool Equals(VoipCaptureBase other) => this == other;
        public override bool Equals(object obj) => obj is VoipCaptureBase that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected VoipCaptureBase(global::WinRT.DerivedComposed _)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(VoipCaptureBase);
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public void SetState(VoipVideoState state) => global::ABI.Telegram.Native.Calls.IVoipCaptureBaseMethods.SetState(_objRef_global__Telegram_Native_Calls_IVoipCaptureBase, state);

        public VoipVideoRendererToken SetOutput(global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl canvas) => global::ABI.Telegram.Native.Calls.IVoipCaptureBaseMethods.SetOutput(_objRef_global__Telegram_Native_Calls_IVoipCaptureBase, canvas);

        public VoipVideoRendererToken SetOutput(global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl canvas, bool enableBlur) => global::ABI.Telegram.Native.Calls.IVoipCaptureBaseMethods.SetOutput(_objRef_global__Telegram_Native_Calls_IVoipCaptureBase, canvas, enableBlur);

        private global::System.IDisposable AsInternal(InterfaceTag<global::System.IDisposable> _) => _lazy_global__System_IDisposable ?? Make__lazy_global__System_IDisposable();

        public void Dispose() => AsInternal(new InterfaceTag<global::System.IDisposable>()).Dispose();

        protected virtual bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.InterfaceIIDs.IInspectable_IID == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")]public enum VoipDataSaving : int
    {
        Never = unchecked((int)0),
        Mobile = unchecked((int)0x1),
        Always = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.VoipDescriptor))]
    [global::WinRT.ProjectedRuntimeClass(typeof(IVoipDescriptor))]
    [global::WinRT.ObjectReferenceWrapper(nameof(_inner))]
    public sealed class VoipDescriptor : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<VoipDescriptor>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private IObjectReference _inner = null;



        private IObjectReference _objRef_global__Telegram_Native_Calls_IVoipDescriptor => _inner;
        private IVoipDescriptor _default => null;

        public VoipDescriptor() : this((ActivationFactory<VoipDescriptor>.ActivateInstance<IUnknownVftbl>()))
        {
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);
        }

        public static VoipDescriptor FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<VoipDescriptor>.FromAbi(thisPtr);
        }

        internal VoipDescriptor(IObjectReference objRef)
        {
            _inner = objRef.As(GuidGenerator.GetIID(typeof(IVoipDescriptor).GetHelperType()));

        }

        public static bool operator ==(VoipDescriptor x, VoipDescriptor y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(VoipDescriptor x, VoipDescriptor y) => !(x == y);
        public bool Equals(VoipDescriptor other) => this == other;
        public override bool Equals(object obj) => obj is VoipDescriptor that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public string AudioInputId
        {
            get => global::ABI.Telegram.Native.Calls.IVoipDescriptorMethods.get_AudioInputId(_objRef_global__Telegram_Native_Calls_IVoipDescriptor);
            set => global::ABI.Telegram.Native.Calls.IVoipDescriptorMethods.set_AudioInputId(_objRef_global__Telegram_Native_Calls_IVoipDescriptor, value);
        }

        public string AudioOutputId
        {
            get => global::ABI.Telegram.Native.Calls.IVoipDescriptorMethods.get_AudioOutputId(_objRef_global__Telegram_Native_Calls_IVoipDescriptor);
            set => global::ABI.Telegram.Native.Calls.IVoipDescriptorMethods.set_AudioOutputId(_objRef_global__Telegram_Native_Calls_IVoipDescriptor, value);
        }

        public string CustomParameters
        {
            get => global::ABI.Telegram.Native.Calls.IVoipDescriptorMethods.get_CustomParameters(_objRef_global__Telegram_Native_Calls_IVoipDescriptor);
            set => global::ABI.Telegram.Native.Calls.IVoipDescriptorMethods.set_CustomParameters(_objRef_global__Telegram_Native_Calls_IVoipDescriptor, value);
        }

        public bool EnableP2p
        {
            get => global::ABI.Telegram.Native.Calls.IVoipDescriptorMethods.get_EnableP2p(_objRef_global__Telegram_Native_Calls_IVoipDescriptor);
            set => global::ABI.Telegram.Native.Calls.IVoipDescriptorMethods.set_EnableP2p(_objRef_global__Telegram_Native_Calls_IVoipDescriptor, value);
        }

        public global::System.Collections.Generic.IList<byte> EncryptionKey
        {
            get => global::ABI.Telegram.Native.Calls.IVoipDescriptorMethods.get_EncryptionKey(_objRef_global__Telegram_Native_Calls_IVoipDescriptor);
            set => global::ABI.Telegram.Native.Calls.IVoipDescriptorMethods.set_EncryptionKey(_objRef_global__Telegram_Native_Calls_IVoipDescriptor, value);
        }

        public double InitializationTimeout
        {
            get => global::ABI.Telegram.Native.Calls.IVoipDescriptorMethods.get_InitializationTimeout(_objRef_global__Telegram_Native_Calls_IVoipDescriptor);
            set => global::ABI.Telegram.Native.Calls.IVoipDescriptorMethods.set_InitializationTimeout(_objRef_global__Telegram_Native_Calls_IVoipDescriptor, value);
        }

        public bool IsOutgoing
        {
            get => global::ABI.Telegram.Native.Calls.IVoipDescriptorMethods.get_IsOutgoing(_objRef_global__Telegram_Native_Calls_IVoipDescriptor);
            set => global::ABI.Telegram.Native.Calls.IVoipDescriptorMethods.set_IsOutgoing(_objRef_global__Telegram_Native_Calls_IVoipDescriptor, value);
        }

        public global::System.Collections.Generic.IList<byte> PersistentState
        {
            get => global::ABI.Telegram.Native.Calls.IVoipDescriptorMethods.get_PersistentState(_objRef_global__Telegram_Native_Calls_IVoipDescriptor);
            set => global::ABI.Telegram.Native.Calls.IVoipDescriptorMethods.set_PersistentState(_objRef_global__Telegram_Native_Calls_IVoipDescriptor, value);
        }

        public double ReceiveTimeout
        {
            get => global::ABI.Telegram.Native.Calls.IVoipDescriptorMethods.get_ReceiveTimeout(_objRef_global__Telegram_Native_Calls_IVoipDescriptor);
            set => global::ABI.Telegram.Native.Calls.IVoipDescriptorMethods.set_ReceiveTimeout(_objRef_global__Telegram_Native_Calls_IVoipDescriptor, value);
        }

        public global::System.Collections.Generic.IList<global::Telegram.Td.Api.CallServer> Servers
        {
            get => global::ABI.Telegram.Native.Calls.IVoipDescriptorMethods.get_Servers(_objRef_global__Telegram_Native_Calls_IVoipDescriptor);
            set => global::ABI.Telegram.Native.Calls.IVoipDescriptorMethods.set_Servers(_objRef_global__Telegram_Native_Calls_IVoipDescriptor, value);
        }

        public VoipCaptureBase VideoCapture
        {
            get => global::ABI.Telegram.Native.Calls.IVoipDescriptorMethods.get_VideoCapture(_objRef_global__Telegram_Native_Calls_IVoipDescriptor);
            set => global::ABI.Telegram.Native.Calls.IVoipDescriptorMethods.set_VideoCapture(_objRef_global__Telegram_Native_Calls_IVoipDescriptor, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.InterfaceIIDs.IInspectable_IID == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")]public enum VoipGroupConnectionMode : int
    {
        None = unchecked((int)0),
        Rtc = unchecked((int)0x1),
        Broadcast = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.VoipGroupDescriptor))]
    [global::WinRT.ProjectedRuntimeClass(typeof(IVoipGroupDescriptor))]
    [global::WinRT.ObjectReferenceWrapper(nameof(_inner))]
    public sealed class VoipGroupDescriptor : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<VoipGroupDescriptor>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private IObjectReference _inner = null;



        private IObjectReference _objRef_global__Telegram_Native_Calls_IVoipGroupDescriptor => _inner;
        private IVoipGroupDescriptor _default => null;

        public VoipGroupDescriptor() : this((ActivationFactory<VoipGroupDescriptor>.ActivateInstance<IUnknownVftbl>()))
        {
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);
        }

        public static VoipGroupDescriptor FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<VoipGroupDescriptor>.FromAbi(thisPtr);
        }

        internal VoipGroupDescriptor(IObjectReference objRef)
        {
            _inner = objRef.As(GuidGenerator.GetIID(typeof(IVoipGroupDescriptor).GetHelperType()));

        }

        public static bool operator ==(VoipGroupDescriptor x, VoipGroupDescriptor y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(VoipGroupDescriptor x, VoipGroupDescriptor y) => !(x == y);
        public bool Equals(VoipGroupDescriptor other) => this == other;
        public override bool Equals(object obj) => obj is VoipGroupDescriptor that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public string AudioInputId
        {
            get => global::ABI.Telegram.Native.Calls.IVoipGroupDescriptorMethods.get_AudioInputId(_objRef_global__Telegram_Native_Calls_IVoipGroupDescriptor);
            set => global::ABI.Telegram.Native.Calls.IVoipGroupDescriptorMethods.set_AudioInputId(_objRef_global__Telegram_Native_Calls_IVoipGroupDescriptor, value);
        }

        public string AudioOutputId
        {
            get => global::ABI.Telegram.Native.Calls.IVoipGroupDescriptorMethods.get_AudioOutputId(_objRef_global__Telegram_Native_Calls_IVoipGroupDescriptor);
            set => global::ABI.Telegram.Native.Calls.IVoipGroupDescriptorMethods.set_AudioOutputId(_objRef_global__Telegram_Native_Calls_IVoipGroupDescriptor, value);
        }

        public bool IsNoiseSuppressionEnabled
        {
            get => global::ABI.Telegram.Native.Calls.IVoipGroupDescriptorMethods.get_IsNoiseSuppressionEnabled(_objRef_global__Telegram_Native_Calls_IVoipGroupDescriptor);
            set => global::ABI.Telegram.Native.Calls.IVoipGroupDescriptorMethods.set_IsNoiseSuppressionEnabled(_objRef_global__Telegram_Native_Calls_IVoipGroupDescriptor, value);
        }

        public VoipCaptureBase VideoCapture
        {
            get => global::ABI.Telegram.Native.Calls.IVoipGroupDescriptorMethods.get_VideoCapture(_objRef_global__Telegram_Native_Calls_IVoipGroupDescriptor);
            set => global::ABI.Telegram.Native.Calls.IVoipGroupDescriptorMethods.set_VideoCapture(_objRef_global__Telegram_Native_Calls_IVoipGroupDescriptor, value);
        }

        public VoipVideoContentType VideoContentType
        {
            get => global::ABI.Telegram.Native.Calls.IVoipGroupDescriptorMethods.get_VideoContentType(_objRef_global__Telegram_Native_Calls_IVoipGroupDescriptor);
            set => global::ABI.Telegram.Native.Calls.IVoipGroupDescriptorMethods.set_VideoContentType(_objRef_global__Telegram_Native_Calls_IVoipGroupDescriptor, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.InterfaceIIDs.IInspectable_IID == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.VoipGroupManager))]
    [global::WinRT.ProjectedRuntimeClass(typeof(IVoipGroupManager))]
    [global::WinRT.ObjectReferenceWrapper(nameof(_inner))]
    public sealed class VoipGroupManager : global::System.IDisposable, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<VoipGroupManager>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private IObjectReference _inner = null;

        private volatile global::System.IDisposable _lazy_global__System_IDisposable;
        private global::System.IDisposable Make__lazy_global__System_IDisposable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _lazy_global__System_IDisposable, (global::System.IDisposable)(object)new SingleInterfaceOptimizedObject(typeof(global::System.IDisposable), _inner ?? ((IWinRTObject)this).NativeObject), null);
            return _lazy_global__System_IDisposable;
        }



        private IObjectReference _objRef_global__Telegram_Native_Calls_IVoipGroupManager => _inner;
        private IVoipGroupManager _default => null;

        internal sealed class _IVoipGroupManagerFactory : IWinRTObject
        {
            private IObjectReference _obj;
            private IntPtr ThisPtr => _obj.ThisPtr;
            public _IVoipGroupManagerFactory()
            {
                _obj = ActivationFactory<VoipGroupManager>.As(GuidGenerator.GetIID(typeof(Telegram.Native.Calls.IVoipGroupManagerFactory).GetHelperType()));
            }

            private static _IVoipGroupManagerFactory _instance = new _IVoipGroupManagerFactory();
            internal static _IVoipGroupManagerFactory Instance => _instance;

            IObjectReference IWinRTObject.NativeObject => _obj;
            bool IWinRTObject.HasUnwrappableNativeObject => false;
            private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
            private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
            {
                global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
                return _queryInterfaceCache;
            }
            global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
            private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
            private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
            {
                global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
                return _additionalTypeData;
            }
            global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();


            public unsafe IntPtr CreateInstance(VoipGroupDescriptor descriptor)
            {
                ObjectReferenceValue __descriptor = default;
                IntPtr __retval = default;
                try
                {
                    __descriptor = global::ABI.Telegram.Native.Calls.VoipGroupDescriptor.CreateMarshaler2(descriptor);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__descriptor), out __retval));
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__descriptor);
                }
            }

        }

        public VoipGroupManager(VoipGroupDescriptor descriptor) 
        { 
        IntPtr ptr = (_IVoipGroupManagerFactory.Instance.CreateInstance(descriptor)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public static VoipGroupManager FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<VoipGroupManager>.FromAbi(thisPtr);
        }

        internal VoipGroupManager(IObjectReference objRef)
        {
            _inner = objRef.As(GuidGenerator.GetIID(typeof(IVoipGroupManager).GetHelperType()));

        }

        public static bool operator ==(VoipGroupManager x, VoipGroupManager y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(VoipGroupManager x, VoipGroupManager y) => !(x == y);
        public bool Equals(VoipGroupManager other) => this == other;
        public override bool Equals(object obj) => obj is VoipGroupManager that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public void SetConnectionMode(VoipGroupConnectionMode connectionMode, bool keepBroadcastIfWasEnabled, bool isUnifiedBroadcast) => global::ABI.Telegram.Native.Calls.IVoipGroupManagerMethods.SetConnectionMode(_objRef_global__Telegram_Native_Calls_IVoipGroupManager, connectionMode, keepBroadcastIfWasEnabled, isUnifiedBroadcast);

        public void EmitJoinPayload(EmitJsonPayloadDelegate completion) => global::ABI.Telegram.Native.Calls.IVoipGroupManagerMethods.EmitJoinPayload(_objRef_global__Telegram_Native_Calls_IVoipGroupManager, completion);

        public void SetJoinResponsePayload(string payload) => global::ABI.Telegram.Native.Calls.IVoipGroupManagerMethods.SetJoinResponsePayload(_objRef_global__Telegram_Native_Calls_IVoipGroupManager, payload);

        public void RemoveSsrcs(global::System.Collections.Generic.IList<int> ssrcs) => global::ABI.Telegram.Native.Calls.IVoipGroupManagerMethods.RemoveSsrcs(_objRef_global__Telegram_Native_Calls_IVoipGroupManager, ssrcs);

        public VoipVideoRendererToken AddIncomingVideoOutput(int audioSource, global::Telegram.Td.Api.GroupCallParticipantVideoInfo videoInfo, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl canvas) => global::ABI.Telegram.Native.Calls.IVoipGroupManagerMethods.AddIncomingVideoOutput(_objRef_global__Telegram_Native_Calls_IVoipGroupManager, audioSource, videoInfo, canvas);

        public void AddUnifiedVideoOutput(global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl canvas) => global::ABI.Telegram.Native.Calls.IVoipGroupManagerMethods.AddUnifiedVideoOutput(_objRef_global__Telegram_Native_Calls_IVoipGroupManager, canvas);

        public void SetAudioOutputDevice(string id) => global::ABI.Telegram.Native.Calls.IVoipGroupManagerMethods.SetAudioOutputDevice(_objRef_global__Telegram_Native_Calls_IVoipGroupManager, id);

        public void SetAudioInputDevice(string id) => global::ABI.Telegram.Native.Calls.IVoipGroupManagerMethods.SetAudioInputDevice(_objRef_global__Telegram_Native_Calls_IVoipGroupManager, id);

        public void SetVideoCapture(VoipCaptureBase videoCapture) => global::ABI.Telegram.Native.Calls.IVoipGroupManagerMethods.SetVideoCapture(_objRef_global__Telegram_Native_Calls_IVoipGroupManager, videoCapture);

        public void SetVolume(int ssrc, double volume) => global::ABI.Telegram.Native.Calls.IVoipGroupManagerMethods.SetVolume(_objRef_global__Telegram_Native_Calls_IVoipGroupManager, ssrc, volume);

        public void SetRequestedVideoChannels(global::System.Collections.Generic.IList<VoipVideoChannelInfo> descriptions) => global::ABI.Telegram.Native.Calls.IVoipGroupManagerMethods.SetRequestedVideoChannels(_objRef_global__Telegram_Native_Calls_IVoipGroupManager, descriptions);

        public event global::Windows.Foundation.TypedEventHandler<VoipGroupManager, global::System.Collections.Generic.IList<VoipGroupParticipant>> AudioLevelsUpdated
        {
            add => global::ABI.Telegram.Native.Calls.IVoipGroupManagerMethods.Get_AudioLevelsUpdated(_objRef_global__Telegram_Native_Calls_IVoipGroupManager, (IWinRTObject)this).Item1(value);
            remove => global::ABI.Telegram.Native.Calls.IVoipGroupManagerMethods.Get_AudioLevelsUpdated(_objRef_global__Telegram_Native_Calls_IVoipGroupManager, (IWinRTObject)this).Item2(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<VoipGroupManager, BroadcastPartRequestedEventArgs> BroadcastPartRequested
        {
            add => global::ABI.Telegram.Native.Calls.IVoipGroupManagerMethods.Get_BroadcastPartRequested(_objRef_global__Telegram_Native_Calls_IVoipGroupManager, (IWinRTObject)this).Item1(value);
            remove => global::ABI.Telegram.Native.Calls.IVoipGroupManagerMethods.Get_BroadcastPartRequested(_objRef_global__Telegram_Native_Calls_IVoipGroupManager, (IWinRTObject)this).Item2(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<VoipGroupManager, BroadcastTimeRequestedEventArgs> BroadcastTimeRequested
        {
            add => global::ABI.Telegram.Native.Calls.IVoipGroupManagerMethods.Get_BroadcastTimeRequested(_objRef_global__Telegram_Native_Calls_IVoipGroupManager, (IWinRTObject)this).Item1(value);
            remove => global::ABI.Telegram.Native.Calls.IVoipGroupManagerMethods.Get_BroadcastTimeRequested(_objRef_global__Telegram_Native_Calls_IVoipGroupManager, (IWinRTObject)this).Item2(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<VoipGroupManager, GroupNetworkStateChangedEventArgs> NetworkStateUpdated
        {
            add => global::ABI.Telegram.Native.Calls.IVoipGroupManagerMethods.Get_NetworkStateUpdated(_objRef_global__Telegram_Native_Calls_IVoipGroupManager, (IWinRTObject)this).Item1(value);
            remove => global::ABI.Telegram.Native.Calls.IVoipGroupManagerMethods.Get_NetworkStateUpdated(_objRef_global__Telegram_Native_Calls_IVoipGroupManager, (IWinRTObject)this).Item2(value);
        }

        private global::System.IDisposable AsInternal(InterfaceTag<global::System.IDisposable> _) => _lazy_global__System_IDisposable ?? Make__lazy_global__System_IDisposable();

        public void Dispose() => AsInternal(new InterfaceTag<global::System.IDisposable>()).Dispose();

        public bool IsMuted
        {
            get => global::ABI.Telegram.Native.Calls.IVoipGroupManagerMethods.get_IsMuted(_objRef_global__Telegram_Native_Calls_IVoipGroupManager);
            set => global::ABI.Telegram.Native.Calls.IVoipGroupManagerMethods.set_IsMuted(_objRef_global__Telegram_Native_Calls_IVoipGroupManager, value);
        }

        public bool IsNoiseSuppressionEnabled
        {
            get => global::ABI.Telegram.Native.Calls.IVoipGroupManagerMethods.get_IsNoiseSuppressionEnabled(_objRef_global__Telegram_Native_Calls_IVoipGroupManager);
            set => global::ABI.Telegram.Native.Calls.IVoipGroupManagerMethods.set_IsNoiseSuppressionEnabled(_objRef_global__Telegram_Native_Calls_IVoipGroupManager, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.InterfaceIIDs.IInspectable_IID == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.VoipGroupParticipant))]public struct VoipGroupParticipant: IEquatable<VoipGroupParticipant>
    {
        public int AudioSource;
        public float Level;
        public bool IsSpeaking;
        public bool IsMuted;

        public VoipGroupParticipant(int _AudioSource, float _Level, bool _IsSpeaking, bool _IsMuted)
        {
            AudioSource = _AudioSource; Level = _Level; IsSpeaking = _IsSpeaking; IsMuted = _IsMuted; 
        }

        public static bool operator ==(VoipGroupParticipant x, VoipGroupParticipant y) => x.AudioSource == y.AudioSource && x.Level == y.Level && x.IsSpeaking == y.IsSpeaking && x.IsMuted == y.IsMuted;
        public static bool operator !=(VoipGroupParticipant x, VoipGroupParticipant y) => !(x == y);
        public bool Equals(VoipGroupParticipant other) => this == other;
        public override bool Equals(object obj) => obj is VoipGroupParticipant that && this == that;
        public override int GetHashCode() => AudioSource.GetHashCode() ^ Level.GetHashCode() ^ IsSpeaking.GetHashCode() ^ IsMuted.GetHashCode();
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.VoipManager))]
    [global::WinRT.ProjectedRuntimeClass(typeof(IVoipManager))]
    [global::WinRT.ObjectReferenceWrapper(nameof(_inner))]
    public sealed class VoipManager : global::System.IDisposable, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<VoipManager>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private IObjectReference _inner = null;

        private volatile global::System.IDisposable _lazy_global__System_IDisposable;
        private global::System.IDisposable Make__lazy_global__System_IDisposable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _lazy_global__System_IDisposable, (global::System.IDisposable)(object)new SingleInterfaceOptimizedObject(typeof(global::System.IDisposable), _inner ?? ((IWinRTObject)this).NativeObject), null);
            return _lazy_global__System_IDisposable;
        }



        private IObjectReference _objRef_global__Telegram_Native_Calls_IVoipManager => _inner;
        private IVoipManager _default => null;

        internal sealed class _IVoipManagerFactory : IWinRTObject
        {
            private IObjectReference _obj;
            private IntPtr ThisPtr => _obj.ThisPtr;
            public _IVoipManagerFactory()
            {
                _obj = ActivationFactory<VoipManager>.As(GuidGenerator.GetIID(typeof(Telegram.Native.Calls.IVoipManagerFactory).GetHelperType()));
            }

            private static _IVoipManagerFactory _instance = new _IVoipManagerFactory();
            internal static _IVoipManagerFactory Instance => _instance;

            IObjectReference IWinRTObject.NativeObject => _obj;
            bool IWinRTObject.HasUnwrappableNativeObject => false;
            private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
            private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
            {
                global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
                return _queryInterfaceCache;
            }
            global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
            private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
            private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
            {
                global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
                return _additionalTypeData;
            }
            global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();


            public unsafe IntPtr CreateInstance(string version, VoipDescriptor descriptor)
            {
                ObjectReferenceValue __descriptor = default;
                IntPtr __retval = default;
                try
                {
                    __descriptor = global::ABI.Telegram.Native.Calls.VoipDescriptor.CreateMarshaler2(descriptor);
                    MarshalString.Pinnable __version = new(version);
                    fixed(void* ___version = __version)
                    {
                        global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, out IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __version), MarshalInspectable<object>.GetAbi(__descriptor), out __retval));
                        return __retval;
                    }
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__descriptor);
                }
            }

        }

        public VoipManager(string version, VoipDescriptor descriptor) 
        { 
        IntPtr ptr = (_IVoipManagerFactory.Instance.CreateInstance(version, descriptor)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public static I As<I>() => ActivationFactory<VoipManager>.AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Telegram_Native_Calls_IVoipManagerStatics;
        private static IObjectReference Make___objRef_global__Telegram_Native_Calls_IVoipManagerStatics()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Telegram_Native_Calls_IVoipManagerStatics, ActivationFactory<VoipManager>.As(GuidGenerator.GetIID(typeof(IVoipManagerStatics).GetHelperType())), null);
            return ___objRef_global__Telegram_Native_Calls_IVoipManagerStatics;
        }
        private static IObjectReference _objRef_global__Telegram_Native_Calls_IVoipManagerStatics => ___objRef_global__Telegram_Native_Calls_IVoipManagerStatics ?? Make___objRef_global__Telegram_Native_Calls_IVoipManagerStatics();



        public static global::Telegram.Td.Api.CallProtocol Protocol => global::ABI.Telegram.Native.Calls.IVoipManagerStaticsMethods.get_Protocol(_objRef_global__Telegram_Native_Calls_IVoipManagerStatics);

        public static VoipManager FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<VoipManager>.FromAbi(thisPtr);
        }

        internal VoipManager(IObjectReference objRef)
        {
            _inner = objRef.As(GuidGenerator.GetIID(typeof(IVoipManager).GetHelperType()));

        }

        public static bool operator ==(VoipManager x, VoipManager y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(VoipManager x, VoipManager y) => !(x == y);
        public bool Equals(VoipManager other) => this == other;
        public override bool Equals(object obj) => obj is VoipManager that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public void Start() => global::ABI.Telegram.Native.Calls.IVoipManagerMethods.Start(_objRef_global__Telegram_Native_Calls_IVoipManager);

        public void SetAudioOutputGainControlEnabled(bool enabled) => global::ABI.Telegram.Native.Calls.IVoipManagerMethods.SetAudioOutputGainControlEnabled(_objRef_global__Telegram_Native_Calls_IVoipManager, enabled);

        public void SetEchoCancellationStrength(int strength) => global::ABI.Telegram.Native.Calls.IVoipManagerMethods.SetEchoCancellationStrength(_objRef_global__Telegram_Native_Calls_IVoipManager, strength);

        public VoipVideoRendererToken SetIncomingVideoOutput(global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl canvas) => global::ABI.Telegram.Native.Calls.IVoipManagerMethods.SetIncomingVideoOutput(_objRef_global__Telegram_Native_Calls_IVoipManager, canvas);

        public void SetAudioInputDevice(string id) => global::ABI.Telegram.Native.Calls.IVoipManagerMethods.SetAudioInputDevice(_objRef_global__Telegram_Native_Calls_IVoipManager, id);

        public void SetAudioOutputDevice(string id) => global::ABI.Telegram.Native.Calls.IVoipManagerMethods.SetAudioOutputDevice(_objRef_global__Telegram_Native_Calls_IVoipManager, id);

        public void SetAudioOutputDuckingEnabled(bool enabled) => global::ABI.Telegram.Native.Calls.IVoipManagerMethods.SetAudioOutputDuckingEnabled(_objRef_global__Telegram_Native_Calls_IVoipManager, enabled);

        public void SetIsLowBatteryLevel(bool isLowBatteryLevel) => global::ABI.Telegram.Native.Calls.IVoipManagerMethods.SetIsLowBatteryLevel(_objRef_global__Telegram_Native_Calls_IVoipManager, isLowBatteryLevel);

        public string GetDebugInfo() => global::ABI.Telegram.Native.Calls.IVoipManagerMethods.GetDebugInfo(_objRef_global__Telegram_Native_Calls_IVoipManager);

        public long GetPreferredRelayId() => global::ABI.Telegram.Native.Calls.IVoipManagerMethods.GetPreferredRelayId(_objRef_global__Telegram_Native_Calls_IVoipManager);

        public void ReceiveSignalingData(global::System.Collections.Generic.IList<byte> data) => global::ABI.Telegram.Native.Calls.IVoipManagerMethods.ReceiveSignalingData(_objRef_global__Telegram_Native_Calls_IVoipManager, data);

        public void SetVideoCapture(VoipCaptureBase videoCapture) => global::ABI.Telegram.Native.Calls.IVoipManagerMethods.SetVideoCapture(_objRef_global__Telegram_Native_Calls_IVoipManager, videoCapture);

        public void SetRequestedVideoAspect(float aspect) => global::ABI.Telegram.Native.Calls.IVoipManagerMethods.SetRequestedVideoAspect(_objRef_global__Telegram_Native_Calls_IVoipManager, aspect);

        public event global::Windows.Foundation.TypedEventHandler<VoipManager, float> AudioLevelUpdated
        {
            add => global::ABI.Telegram.Native.Calls.IVoipManagerMethods.Get_AudioLevelUpdated(_objRef_global__Telegram_Native_Calls_IVoipManager, (IWinRTObject)this).Item1(value);
            remove => global::ABI.Telegram.Native.Calls.IVoipManagerMethods.Get_AudioLevelUpdated(_objRef_global__Telegram_Native_Calls_IVoipManager, (IWinRTObject)this).Item2(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<VoipManager, bool> RemoteBatteryLevelIsLowUpdated
        {
            add => global::ABI.Telegram.Native.Calls.IVoipManagerMethods.Get_RemoteBatteryLevelIsLowUpdated(_objRef_global__Telegram_Native_Calls_IVoipManager, (IWinRTObject)this).Item1(value);
            remove => global::ABI.Telegram.Native.Calls.IVoipManagerMethods.Get_RemoteBatteryLevelIsLowUpdated(_objRef_global__Telegram_Native_Calls_IVoipManager, (IWinRTObject)this).Item2(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<VoipManager, RemoteMediaStateUpdatedEventArgs> RemoteMediaStateUpdated
        {
            add => global::ABI.Telegram.Native.Calls.IVoipManagerMethods.Get_RemoteMediaStateUpdated(_objRef_global__Telegram_Native_Calls_IVoipManager, (IWinRTObject)this).Item1(value);
            remove => global::ABI.Telegram.Native.Calls.IVoipManagerMethods.Get_RemoteMediaStateUpdated(_objRef_global__Telegram_Native_Calls_IVoipManager, (IWinRTObject)this).Item2(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<VoipManager, float> RemotePrefferedAspectRatioUpdated
        {
            add => global::ABI.Telegram.Native.Calls.IVoipManagerMethods.Get_RemotePrefferedAspectRatioUpdated(_objRef_global__Telegram_Native_Calls_IVoipManager, (IWinRTObject)this).Item1(value);
            remove => global::ABI.Telegram.Native.Calls.IVoipManagerMethods.Get_RemotePrefferedAspectRatioUpdated(_objRef_global__Telegram_Native_Calls_IVoipManager, (IWinRTObject)this).Item2(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<VoipManager, int> SignalBarsUpdated
        {
            add => global::ABI.Telegram.Native.Calls.IVoipManagerMethods.Get_SignalBarsUpdated(_objRef_global__Telegram_Native_Calls_IVoipManager, (IWinRTObject)this).Item1(value);
            remove => global::ABI.Telegram.Native.Calls.IVoipManagerMethods.Get_SignalBarsUpdated(_objRef_global__Telegram_Native_Calls_IVoipManager, (IWinRTObject)this).Item2(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<VoipManager, SignalingDataEmittedEventArgs> SignalingDataEmitted
        {
            add => global::ABI.Telegram.Native.Calls.IVoipManagerMethods.Get_SignalingDataEmitted(_objRef_global__Telegram_Native_Calls_IVoipManager, (IWinRTObject)this).Item1(value);
            remove => global::ABI.Telegram.Native.Calls.IVoipManagerMethods.Get_SignalingDataEmitted(_objRef_global__Telegram_Native_Calls_IVoipManager, (IWinRTObject)this).Item2(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<VoipManager, VoipState> StateUpdated
        {
            add => global::ABI.Telegram.Native.Calls.IVoipManagerMethods.Get_StateUpdated(_objRef_global__Telegram_Native_Calls_IVoipManager, (IWinRTObject)this).Item1(value);
            remove => global::ABI.Telegram.Native.Calls.IVoipManagerMethods.Get_StateUpdated(_objRef_global__Telegram_Native_Calls_IVoipManager, (IWinRTObject)this).Item2(value);
        }

        private global::System.IDisposable AsInternal(InterfaceTag<global::System.IDisposable> _) => _lazy_global__System_IDisposable ?? Make__lazy_global__System_IDisposable();

        public void Dispose() => AsInternal(new InterfaceTag<global::System.IDisposable>()).Dispose();

        public bool IsMuted
        {
            get => global::ABI.Telegram.Native.Calls.IVoipManagerMethods.get_IsMuted(_objRef_global__Telegram_Native_Calls_IVoipManager);
            set => global::ABI.Telegram.Native.Calls.IVoipManagerMethods.set_IsMuted(_objRef_global__Telegram_Native_Calls_IVoipManager, value);
        }

        public bool SupportsVideo => global::ABI.Telegram.Native.Calls.IVoipManagerMethods.get_SupportsVideo(_objRef_global__Telegram_Native_Calls_IVoipManager);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.InterfaceIIDs.IInspectable_IID == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.VoipScreenCapture))]
    [global::WinRT.ProjectedRuntimeClass(typeof(IVoipScreenCapture))]
    [global::WinRT.ObjectReferenceWrapper(nameof(_inner))]
    public sealed class VoipScreenCapture : VoipCaptureBase, global::System.IDisposable, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<VoipScreenCapture>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private IObjectReference _inner = null;

        private volatile global::System.IDisposable _lazy_global__System_IDisposable;
        private global::System.IDisposable Make__lazy_global__System_IDisposable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _lazy_global__System_IDisposable, (global::System.IDisposable)(object)new SingleInterfaceOptimizedObject(typeof(global::System.IDisposable), _inner ?? ((IWinRTObject)this).NativeObject), null);
            return _lazy_global__System_IDisposable;
        }



        private IObjectReference _objRef_global__Telegram_Native_Calls_IVoipScreenCapture => _inner;
        private IVoipScreenCapture _default => null;

        internal sealed class _IVoipScreenCaptureFactory : IWinRTObject
        {
            private IObjectReference _obj;
            private IntPtr ThisPtr => _obj.ThisPtr;
            public _IVoipScreenCaptureFactory()
            {
                _obj = ActivationFactory<VoipScreenCapture>.As(GuidGenerator.GetIID(typeof(Telegram.Native.Calls.IVoipScreenCaptureFactory).GetHelperType()));
            }

            private static _IVoipScreenCaptureFactory _instance = new _IVoipScreenCaptureFactory();
            internal static _IVoipScreenCaptureFactory Instance => _instance;

            IObjectReference IWinRTObject.NativeObject => _obj;
            bool IWinRTObject.HasUnwrappableNativeObject => false;
            private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
            private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
            {
                global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
                return _queryInterfaceCache;
            }
            global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
            private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
            private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
            {
                global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
                return _additionalTypeData;
            }
            global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();


            public unsafe IntPtr CreateInstance(global::Windows.Graphics.Capture.GraphicsCaptureItem item)
            {
                ObjectReferenceValue __item = default;
                IntPtr __retval = default;
                try
                {
                    __item = global::ABI.Windows.Graphics.Capture.GraphicsCaptureItem.CreateMarshaler2(item);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__item), out __retval));
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__item);
                }
            }

        }

        public VoipScreenCapture(global::Windows.Graphics.Capture.GraphicsCaptureItem item) :base(global::WinRT.DerivedComposed.Instance)
        { 
        IntPtr ptr = (_IVoipScreenCaptureFactory.Instance.CreateInstance(item)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public static I As<I>() => ActivationFactory<VoipScreenCapture>.AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Telegram_Native_Calls_IVoipScreenCaptureStatics;
        private static IObjectReference Make___objRef_global__Telegram_Native_Calls_IVoipScreenCaptureStatics()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Telegram_Native_Calls_IVoipScreenCaptureStatics, ActivationFactory<VoipScreenCapture>.As(GuidGenerator.GetIID(typeof(IVoipScreenCaptureStatics).GetHelperType())), null);
            return ___objRef_global__Telegram_Native_Calls_IVoipScreenCaptureStatics;
        }
        private static IObjectReference _objRef_global__Telegram_Native_Calls_IVoipScreenCaptureStatics => ___objRef_global__Telegram_Native_Calls_IVoipScreenCaptureStatics ?? Make___objRef_global__Telegram_Native_Calls_IVoipScreenCaptureStatics();



        public static bool IsSupported() => global::ABI.Telegram.Native.Calls.IVoipScreenCaptureStaticsMethods.IsSupported(_objRef_global__Telegram_Native_Calls_IVoipScreenCaptureStatics);

        public static new VoipScreenCapture FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<VoipScreenCapture>.FromAbi(thisPtr);
        }

        internal VoipScreenCapture(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(GuidGenerator.GetIID(typeof(IVoipScreenCapture).GetHelperType()));

        }

        public static bool operator ==(VoipScreenCapture x, VoipScreenCapture y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(VoipScreenCapture x, VoipScreenCapture y) => !(x == y);
        public bool Equals(VoipScreenCapture other) => this == other;
        public override bool Equals(object obj) => obj is VoipScreenCapture that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public event global::Windows.Foundation.TypedEventHandler<VoipScreenCapture, object> FatalErrorOccurred
        {
            add => global::ABI.Telegram.Native.Calls.IVoipScreenCaptureMethods.Get_FatalErrorOccurred(_objRef_global__Telegram_Native_Calls_IVoipScreenCapture, (IWinRTObject)this).Item1(value);
            remove => global::ABI.Telegram.Native.Calls.IVoipScreenCaptureMethods.Get_FatalErrorOccurred(_objRef_global__Telegram_Native_Calls_IVoipScreenCapture, (IWinRTObject)this).Item2(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<VoipScreenCapture, bool> Paused
        {
            add => global::ABI.Telegram.Native.Calls.IVoipScreenCaptureMethods.Get_Paused(_objRef_global__Telegram_Native_Calls_IVoipScreenCapture, (IWinRTObject)this).Item1(value);
            remove => global::ABI.Telegram.Native.Calls.IVoipScreenCaptureMethods.Get_Paused(_objRef_global__Telegram_Native_Calls_IVoipScreenCapture, (IWinRTObject)this).Item2(value);
        }

        private global::System.IDisposable AsInternal(InterfaceTag<global::System.IDisposable> _) => _lazy_global__System_IDisposable ?? Make__lazy_global__System_IDisposable();

        public void Dispose() => AsInternal(new InterfaceTag<global::System.IDisposable>()).Dispose();

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.InterfaceIIDs.IInspectable_IID == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")]public enum VoipState : int
    {
        WaitInit = unchecked((int)0),
        WaitInitAck = unchecked((int)0x1),
        Established = unchecked((int)0x2),
        Failed = unchecked((int)0x3),
        Reconnecting = unchecked((int)0x4),
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.VoipVideoCapture))]
    [global::WinRT.ProjectedRuntimeClass(typeof(IVoipVideoCapture))]
    [global::WinRT.ObjectReferenceWrapper(nameof(_inner))]
    public sealed class VoipVideoCapture : VoipCaptureBase, global::System.IDisposable, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<VoipVideoCapture>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private IObjectReference _inner = null;

        private volatile global::System.IDisposable _lazy_global__System_IDisposable;
        private global::System.IDisposable Make__lazy_global__System_IDisposable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _lazy_global__System_IDisposable, (global::System.IDisposable)(object)new SingleInterfaceOptimizedObject(typeof(global::System.IDisposable), _inner ?? ((IWinRTObject)this).NativeObject), null);
            return _lazy_global__System_IDisposable;
        }



        private IObjectReference _objRef_global__Telegram_Native_Calls_IVoipVideoCapture => _inner;
        private IVoipVideoCapture _default => null;

        internal sealed class _IVoipVideoCaptureFactory : IWinRTObject
        {
            private IObjectReference _obj;
            private IntPtr ThisPtr => _obj.ThisPtr;
            public _IVoipVideoCaptureFactory()
            {
                _obj = ActivationFactory<VoipVideoCapture>.As(GuidGenerator.GetIID(typeof(Telegram.Native.Calls.IVoipVideoCaptureFactory).GetHelperType()));
            }

            private static _IVoipVideoCaptureFactory _instance = new _IVoipVideoCaptureFactory();
            internal static _IVoipVideoCaptureFactory Instance => _instance;

            IObjectReference IWinRTObject.NativeObject => _obj;
            bool IWinRTObject.HasUnwrappableNativeObject => false;
            private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
            private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
            {
                global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
                return _queryInterfaceCache;
            }
            global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
            private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
            private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
            {
                global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
                return _additionalTypeData;
            }
            global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();


            public unsafe IntPtr CreateInstance(string id)
            {
                IntPtr __retval = default;
                MarshalString.Pinnable __id = new(id);
                fixed(void* ___id = __id)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __id), out __retval));
                    return __retval;
                }
            }

        }

        public VoipVideoCapture(string id) :base(global::WinRT.DerivedComposed.Instance)
        { 
        IntPtr ptr = (_IVoipVideoCaptureFactory.Instance.CreateInstance(id)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public static new VoipVideoCapture FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<VoipVideoCapture>.FromAbi(thisPtr);
        }

        internal VoipVideoCapture(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(GuidGenerator.GetIID(typeof(IVoipVideoCapture).GetHelperType()));

        }

        public static bool operator ==(VoipVideoCapture x, VoipVideoCapture y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(VoipVideoCapture x, VoipVideoCapture y) => !(x == y);
        public bool Equals(VoipVideoCapture other) => this == other;
        public override bool Equals(object obj) => obj is VoipVideoCapture that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        public void SwitchToDevice(string deviceId) => global::ABI.Telegram.Native.Calls.IVoipVideoCaptureMethods.SwitchToDevice(_objRef_global__Telegram_Native_Calls_IVoipVideoCapture, deviceId);

        public void SetPreferredAspectRatio(float aspectRatio) => global::ABI.Telegram.Native.Calls.IVoipVideoCaptureMethods.SetPreferredAspectRatio(_objRef_global__Telegram_Native_Calls_IVoipVideoCapture, aspectRatio);

        private global::System.IDisposable AsInternal(InterfaceTag<global::System.IDisposable> _) => _lazy_global__System_IDisposable ?? Make__lazy_global__System_IDisposable();

        public void Dispose() => AsInternal(new InterfaceTag<global::System.IDisposable>()).Dispose();

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.InterfaceIIDs.IInspectable_IID == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.VoipVideoChannelInfo))]
    [global::WinRT.ProjectedRuntimeClass(typeof(IVoipVideoChannelInfo))]
    [global::WinRT.ObjectReferenceWrapper(nameof(_inner))]
    public sealed class VoipVideoChannelInfo : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<VoipVideoChannelInfo>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private IObjectReference _inner = null;



        private IObjectReference _objRef_global__Telegram_Native_Calls_IVoipVideoChannelInfo => _inner;
        private IVoipVideoChannelInfo _default => null;

        public VoipVideoChannelInfo() : this((ActivationFactory<VoipVideoChannelInfo>.ActivateInstance<IUnknownVftbl>()))
        {
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);
        }

        internal sealed class _IVoipVideoChannelInfoFactory : IWinRTObject
        {
            private IObjectReference _obj;
            private IntPtr ThisPtr => _obj.ThisPtr;
            public _IVoipVideoChannelInfoFactory()
            {
                _obj = ActivationFactory<VoipVideoChannelInfo>.As(GuidGenerator.GetIID(typeof(Telegram.Native.Calls.IVoipVideoChannelInfoFactory).GetHelperType()));
            }

            private static _IVoipVideoChannelInfoFactory _instance = new _IVoipVideoChannelInfoFactory();
            internal static _IVoipVideoChannelInfoFactory Instance => _instance;

            IObjectReference IWinRTObject.NativeObject => _obj;
            bool IWinRTObject.HasUnwrappableNativeObject => false;
            private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
            private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
            {
                global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
                return _queryInterfaceCache;
            }
            global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
            private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
            private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
            {
                global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
                return _additionalTypeData;
            }
            global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();


            public unsafe IntPtr CreateInstance(int audioSource, string endpointId, global::System.Collections.Generic.IList<global::Telegram.Td.Api.GroupCallVideoSourceGroup> sourceGroups, VoipVideoChannelQuality minQuality, VoipVideoChannelQuality maxQuality)
            {
                ObjectReferenceValue __sourceGroups = default;
                IntPtr __retval = default;
                try
                {
                    __sourceGroups = MarshalInterface<global::System.Collections.Generic.IList<global::Telegram.Td.Api.GroupCallVideoSourceGroup>>.CreateMarshaler2(sourceGroups);
                    MarshalString.Pinnable __endpointId = new(endpointId);
                    fixed(void* ___endpointId = __endpointId)
                    {
                        global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, IntPtr, IntPtr, VoipVideoChannelQuality, VoipVideoChannelQuality, out IntPtr, int>**)ThisPtr)[6](ThisPtr, audioSource, MarshalString.GetAbi(ref __endpointId), MarshalInspectable<object>.GetAbi(__sourceGroups), minQuality, maxQuality, out __retval));
                        return __retval;
                    }
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__sourceGroups);
                }
            }

            public unsafe IntPtr CreateInstance2(VoipVideoRendererToken token, VoipVideoChannelQuality minQuality, VoipVideoChannelQuality maxQuality)
            {
                ObjectReferenceValue __token = default;
                IntPtr __retval = default;
                try
                {
                    __token = global::ABI.Telegram.Native.Calls.VoipVideoRendererToken.CreateMarshaler2(token);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, VoipVideoChannelQuality, VoipVideoChannelQuality, out IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__token), minQuality, maxQuality, out __retval));
                    return __retval;
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__token);
                }
            }

        }

        public VoipVideoChannelInfo(int audioSource, string endpointId, global::System.Collections.Generic.IList<global::Telegram.Td.Api.GroupCallVideoSourceGroup> sourceGroups, VoipVideoChannelQuality minQuality, VoipVideoChannelQuality maxQuality) 
        { 
        IntPtr ptr = (_IVoipVideoChannelInfoFactory.Instance.CreateInstance(audioSource, endpointId, sourceGroups, minQuality, maxQuality)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public VoipVideoChannelInfo(VoipVideoRendererToken token, VoipVideoChannelQuality minQuality, VoipVideoChannelQuality maxQuality) 
        { 
        IntPtr ptr = (_IVoipVideoChannelInfoFactory.Instance.CreateInstance2(token, minQuality, maxQuality)); 
        try 
        { 
        _inner = ComWrappersSupport.GetObjectReferenceForInterface(ptr); 

        } 
        finally 
        { 
        MarshalInspectable<object>.DisposeAbi(ptr); 
        }

        ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
        ComWrappersHelper.Init(_inner, false);
        }

        public static VoipVideoChannelInfo FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<VoipVideoChannelInfo>.FromAbi(thisPtr);
        }

        internal VoipVideoChannelInfo(IObjectReference objRef)
        {
            _inner = objRef.As(GuidGenerator.GetIID(typeof(IVoipVideoChannelInfo).GetHelperType()));

        }

        public static bool operator ==(VoipVideoChannelInfo x, VoipVideoChannelInfo y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(VoipVideoChannelInfo x, VoipVideoChannelInfo y) => !(x == y);
        public bool Equals(VoipVideoChannelInfo other) => this == other;
        public override bool Equals(object obj) => obj is VoipVideoChannelInfo that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public int AudioSource
        {
            get => global::ABI.Telegram.Native.Calls.IVoipVideoChannelInfoMethods.get_AudioSource(_objRef_global__Telegram_Native_Calls_IVoipVideoChannelInfo);
            set => global::ABI.Telegram.Native.Calls.IVoipVideoChannelInfoMethods.set_AudioSource(_objRef_global__Telegram_Native_Calls_IVoipVideoChannelInfo, value);
        }

        public string EndpointId
        {
            get => global::ABI.Telegram.Native.Calls.IVoipVideoChannelInfoMethods.get_EndpointId(_objRef_global__Telegram_Native_Calls_IVoipVideoChannelInfo);
            set => global::ABI.Telegram.Native.Calls.IVoipVideoChannelInfoMethods.set_EndpointId(_objRef_global__Telegram_Native_Calls_IVoipVideoChannelInfo, value);
        }

        public VoipVideoChannelQuality MaxQuality
        {
            get => global::ABI.Telegram.Native.Calls.IVoipVideoChannelInfoMethods.get_MaxQuality(_objRef_global__Telegram_Native_Calls_IVoipVideoChannelInfo);
            set => global::ABI.Telegram.Native.Calls.IVoipVideoChannelInfoMethods.set_MaxQuality(_objRef_global__Telegram_Native_Calls_IVoipVideoChannelInfo, value);
        }

        public VoipVideoChannelQuality MinQuality
        {
            get => global::ABI.Telegram.Native.Calls.IVoipVideoChannelInfoMethods.get_MinQuality(_objRef_global__Telegram_Native_Calls_IVoipVideoChannelInfo);
            set => global::ABI.Telegram.Native.Calls.IVoipVideoChannelInfoMethods.set_MinQuality(_objRef_global__Telegram_Native_Calls_IVoipVideoChannelInfo, value);
        }

        public global::System.Collections.Generic.IList<global::Telegram.Td.Api.GroupCallVideoSourceGroup> SourceGroups
        {
            get => global::ABI.Telegram.Native.Calls.IVoipVideoChannelInfoMethods.get_SourceGroups(_objRef_global__Telegram_Native_Calls_IVoipVideoChannelInfo);
            set => global::ABI.Telegram.Native.Calls.IVoipVideoChannelInfoMethods.set_SourceGroups(_objRef_global__Telegram_Native_Calls_IVoipVideoChannelInfo, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.InterfaceIIDs.IInspectable_IID == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")]public enum VoipVideoChannelQuality : int
    {
        Thumbnail = unchecked((int)0),
        Medium = unchecked((int)0x1),
        Full = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")]public enum VoipVideoContentType : int
    {
        None = unchecked((int)0),
        Screencast = unchecked((int)0x1),
        Generic = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Calls.VoipVideoRendererToken))]
    [global::WinRT.ProjectedRuntimeClass(typeof(IVoipVideoRendererToken))]
    [global::WinRT.ObjectReferenceWrapper(nameof(_inner))]
    public sealed class VoipVideoRendererToken : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<VoipVideoRendererToken>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private IObjectReference _inner = null;



        private IObjectReference _objRef_global__Telegram_Native_Calls_IVoipVideoRendererToken => _inner;
        private IVoipVideoRendererToken _default => null;

        public static VoipVideoRendererToken FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<VoipVideoRendererToken>.FromAbi(thisPtr);
        }

        internal VoipVideoRendererToken(IObjectReference objRef)
        {
            _inner = objRef.As(GuidGenerator.GetIID(typeof(IVoipVideoRendererToken).GetHelperType()));

        }

        public static bool operator ==(VoipVideoRendererToken x, VoipVideoRendererToken y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(VoipVideoRendererToken x, VoipVideoRendererToken y) => !(x == y);
        public bool Equals(VoipVideoRendererToken other) => this == other;
        public override bool Equals(object obj) => obj is VoipVideoRendererToken that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public bool IsMatch(string endpointId, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl canvasControl) => global::ABI.Telegram.Native.Calls.IVoipVideoRendererTokenMethods.IsMatch(_objRef_global__Telegram_Native_Calls_IVoipVideoRendererToken, endpointId, canvasControl);

        public void Stop() => global::ABI.Telegram.Native.Calls.IVoipVideoRendererTokenMethods.Stop(_objRef_global__Telegram_Native_Calls_IVoipVideoRendererToken);

        public int AudioSource => global::ABI.Telegram.Native.Calls.IVoipVideoRendererTokenMethods.get_AudioSource(_objRef_global__Telegram_Native_Calls_IVoipVideoRendererToken);

        public string EndpointId => global::ABI.Telegram.Native.Calls.IVoipVideoRendererTokenMethods.get_EndpointId(_objRef_global__Telegram_Native_Calls_IVoipVideoRendererToken);

        public bool IsMirrored
        {
            get => global::ABI.Telegram.Native.Calls.IVoipVideoRendererTokenMethods.get_IsMirrored(_objRef_global__Telegram_Native_Calls_IVoipVideoRendererToken);
            set => global::ABI.Telegram.Native.Calls.IVoipVideoRendererTokenMethods.set_IsMirrored(_objRef_global__Telegram_Native_Calls_IVoipVideoRendererToken, value);
        }

        public global::System.Collections.Generic.IList<global::Telegram.Td.Api.GroupCallVideoSourceGroup> SourceGroups => global::ABI.Telegram.Native.Calls.IVoipVideoRendererTokenMethods.get_SourceGroups(_objRef_global__Telegram_Native_Calls_IVoipVideoRendererToken);

        public global::Microsoft.UI.Xaml.Media.Stretch Stretch
        {
            get => global::ABI.Telegram.Native.Calls.IVoipVideoRendererTokenMethods.get_Stretch(_objRef_global__Telegram_Native_Calls_IVoipVideoRendererToken);
            set => global::ABI.Telegram.Native.Calls.IVoipVideoRendererTokenMethods.set_Stretch(_objRef_global__Telegram_Native_Calls_IVoipVideoRendererToken, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.InterfaceIIDs.IInspectable_IID == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native.Calls")]public enum VoipVideoState : int
    {
        Inactive = unchecked((int)0),
        Paused = unchecked((int)0x1),
        Active = unchecked((int)0x2),
    }
}

#pragma warning disable CA1416
namespace ABI.Telegram.Native.Calls
{
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    [Guid("C131C60C-4E07-506B-A682-3780594ED937")]
    public static class BroadcastPartRequestedDeferral
    {

        private static readonly global::WinRT.Interop.IDelegateVftbl AbiToProjectionVftable;
        public static readonly IntPtr AbiToProjectionVftablePtr;

        static unsafe BroadcastPartRequestedDeferral()
        {
            AbiToProjectionVftable = new global::WinRT.Interop.IDelegateVftbl
            {
                IUnknownVftbl = global::WinRT.Interop.IUnknownVftbl.AbiToProjectionVftbl,
                Invoke = (IntPtr)(delegate* unmanaged[Stdcall]<IntPtr, long, long, IntPtr, int>)&Do_Abi_Invoke
            };
            var nativeVftbl = ComWrappersSupport.AllocateVtableMemory(typeof(BroadcastPartRequestedDeferral), Marshal.SizeOf<global::WinRT.Interop.IDelegateVftbl>());
            Marshal.StructureToPtr(AbiToProjectionVftable, nativeVftbl, false);
            AbiToProjectionVftablePtr = nativeVftbl;
        }

        public static unsafe IObjectReference CreateMarshaler(global::Telegram.Native.Calls.BroadcastPartRequestedDeferral managedDelegate) => 
        managedDelegate is null ? null : MarshalDelegate.CreateMarshaler(managedDelegate, GuidGenerator.GetIID(typeof(BroadcastPartRequestedDeferral)));

        public static unsafe ObjectReferenceValue CreateMarshaler2(global::Telegram.Native.Calls.BroadcastPartRequestedDeferral managedDelegate) => 
        MarshalDelegate.CreateMarshaler2(managedDelegate, GuidGenerator.GetIID(typeof(BroadcastPartRequestedDeferral)));

        public static IntPtr GetAbi(IObjectReference value) => MarshalInterfaceHelper<global::Telegram.Native.Calls.BroadcastPartRequestedDeferral>.GetAbi(value);

        public static unsafe global::Telegram.Native.Calls.BroadcastPartRequestedDeferral FromAbi(IntPtr nativeDelegate)
        {
            return MarshalDelegate.FromAbi<global::Telegram.Native.Calls.BroadcastPartRequestedDeferral>(nativeDelegate);
        }

        public static global::Telegram.Native.Calls.BroadcastPartRequestedDeferral CreateRcw(IntPtr ptr)
        {
            return new global::Telegram.Native.Calls.BroadcastPartRequestedDeferral(new NativeDelegateWrapper(ComWrappersSupport.GetObjectReferenceForInterface<IDelegateVftbl>(ptr, GuidGenerator.GetIID(typeof(BroadcastPartRequestedDeferral)))).Invoke);
        }

        [global::WinRT.ObjectReferenceWrapper(nameof(_nativeDelegate))]
        #if !NET
        private sealed class NativeDelegateWrapper
        #else
        private sealed class NativeDelegateWrapper : IWinRTObject
        #endif
        {
            private readonly ObjectReference<global::WinRT.Interop.IDelegateVftbl> _nativeDelegate;

            public NativeDelegateWrapper(ObjectReference<global::WinRT.Interop.IDelegateVftbl> nativeDelegate)
            {
                _nativeDelegate = nativeDelegate;
            }

            #if NET
            IObjectReference IWinRTObject.NativeObject => _nativeDelegate;
            bool IWinRTObject.HasUnwrappableNativeObject => true;
            private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
            private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
            {
                global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
                return _queryInterfaceCache;
            }
            global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
            private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
            private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
            {
                global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
                return _additionalTypeData;
            }
            global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();
            #endif

            public unsafe void Invoke(long time, long response, global::Telegram.Td.Api.FilePart filePart)
            {
                IntPtr ThisPtr = _nativeDelegate.ThisPtr;
                var abiInvoke = (delegate* unmanaged[Stdcall]<IntPtr, long, long, IntPtr, int>)(_nativeDelegate.Vftbl.Invoke);
                ObjectReferenceValue __filePart = default;
                try
                {
                    __filePart = global::ABI.Telegram.Td.Api.FilePart.CreateMarshaler2(filePart);
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR(abiInvoke(ThisPtr, time, response, MarshalInspectable<object>.GetAbi(__filePart)));
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__filePart);
                }

            }
        }

        public static IntPtr FromManaged(global::Telegram.Native.Calls.BroadcastPartRequestedDeferral managedDelegate) => CreateMarshaler2(managedDelegate).Detach();

        public static void DisposeMarshaler(IObjectReference value) => MarshalInterfaceHelper<global::Telegram.Native.Calls.BroadcastPartRequestedDeferral>.DisposeMarshaler(value);

        public static void DisposeAbi(IntPtr abi) => MarshalInterfaceHelper<global::Telegram.Native.Calls.BroadcastPartRequestedDeferral>.DisposeAbi(abi);

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Invoke(IntPtr thisPtr, long time, long response, IntPtr filePart)
        {


            try
            {

                global::WinRT.ComWrappersSupport.FindObject<global::Telegram.Native.Calls.BroadcastPartRequestedDeferral>(thisPtr).Invoke(time, response, global::ABI.Telegram.Td.Api.FilePart.FromAbi(filePart))
                ;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
    }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct BroadcastPartRequestedEventArgs
    {

        public static IObjectReference CreateMarshaler(global::Telegram.Native.Calls.BroadcastPartRequestedEventArgs obj) => obj is null ? null : MarshalInspectable<global::Telegram.Native.Calls.BroadcastPartRequestedEventArgs>.CreateMarshaler<IUnknownVftbl>(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Calls.IBroadcastPartRequestedEventArgs).GetHelperType()));
        public static ObjectReferenceValue CreateMarshaler2(global::Telegram.Native.Calls.BroadcastPartRequestedEventArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Calls.IBroadcastPartRequestedEventArgs).GetHelperType()));
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Telegram.Native.Calls.BroadcastPartRequestedEventArgs FromAbi(IntPtr thisPtr) => global::Telegram.Native.Calls.BroadcastPartRequestedEventArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Telegram.Native.Calls.BroadcastPartRequestedEventArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Telegram.Native.Calls.BroadcastPartRequestedEventArgs>.MarshalerArray CreateMarshalerArray(global::Telegram.Native.Calls.BroadcastPartRequestedEventArgs[] array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.BroadcastPartRequestedEventArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Calls.BroadcastPartRequestedEventArgs>.GetAbiArray(box);
        public static unsafe global::Telegram.Native.Calls.BroadcastPartRequestedEventArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Calls.BroadcastPartRequestedEventArgs>.FromAbiArray(box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Telegram.Native.Calls.BroadcastPartRequestedEventArgs[] array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.BroadcastPartRequestedEventArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Telegram.Native.Calls.BroadcastPartRequestedEventArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.BroadcastPartRequestedEventArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    [Guid("B635D4F3-D299-53AD-8FF2-06DBD4D9F3E5")]
    public static class BroadcastTimeRequestedDeferral
    {

        private static readonly global::WinRT.Interop.IDelegateVftbl AbiToProjectionVftable;
        public static readonly IntPtr AbiToProjectionVftablePtr;

        static unsafe BroadcastTimeRequestedDeferral()
        {
            AbiToProjectionVftable = new global::WinRT.Interop.IDelegateVftbl
            {
                IUnknownVftbl = global::WinRT.Interop.IUnknownVftbl.AbiToProjectionVftbl,
                Invoke = (IntPtr)(delegate* unmanaged[Stdcall]<IntPtr, long, int>)&Do_Abi_Invoke
            };
            var nativeVftbl = ComWrappersSupport.AllocateVtableMemory(typeof(BroadcastTimeRequestedDeferral), Marshal.SizeOf<global::WinRT.Interop.IDelegateVftbl>());
            Marshal.StructureToPtr(AbiToProjectionVftable, nativeVftbl, false);
            AbiToProjectionVftablePtr = nativeVftbl;
        }

        public static unsafe IObjectReference CreateMarshaler(global::Telegram.Native.Calls.BroadcastTimeRequestedDeferral managedDelegate) => 
        managedDelegate is null ? null : MarshalDelegate.CreateMarshaler(managedDelegate, GuidGenerator.GetIID(typeof(BroadcastTimeRequestedDeferral)));

        public static unsafe ObjectReferenceValue CreateMarshaler2(global::Telegram.Native.Calls.BroadcastTimeRequestedDeferral managedDelegate) => 
        MarshalDelegate.CreateMarshaler2(managedDelegate, GuidGenerator.GetIID(typeof(BroadcastTimeRequestedDeferral)));

        public static IntPtr GetAbi(IObjectReference value) => MarshalInterfaceHelper<global::Telegram.Native.Calls.BroadcastTimeRequestedDeferral>.GetAbi(value);

        public static unsafe global::Telegram.Native.Calls.BroadcastTimeRequestedDeferral FromAbi(IntPtr nativeDelegate)
        {
            return MarshalDelegate.FromAbi<global::Telegram.Native.Calls.BroadcastTimeRequestedDeferral>(nativeDelegate);
        }

        public static global::Telegram.Native.Calls.BroadcastTimeRequestedDeferral CreateRcw(IntPtr ptr)
        {
            return new global::Telegram.Native.Calls.BroadcastTimeRequestedDeferral(new NativeDelegateWrapper(ComWrappersSupport.GetObjectReferenceForInterface<IDelegateVftbl>(ptr, GuidGenerator.GetIID(typeof(BroadcastTimeRequestedDeferral)))).Invoke);
        }

        [global::WinRT.ObjectReferenceWrapper(nameof(_nativeDelegate))]
        #if !NET
        private sealed class NativeDelegateWrapper
        #else
        private sealed class NativeDelegateWrapper : IWinRTObject
        #endif
        {
            private readonly ObjectReference<global::WinRT.Interop.IDelegateVftbl> _nativeDelegate;

            public NativeDelegateWrapper(ObjectReference<global::WinRT.Interop.IDelegateVftbl> nativeDelegate)
            {
                _nativeDelegate = nativeDelegate;
            }

            #if NET
            IObjectReference IWinRTObject.NativeObject => _nativeDelegate;
            bool IWinRTObject.HasUnwrappableNativeObject => true;
            private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
            private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
            {
                global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
                return _queryInterfaceCache;
            }
            global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
            private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
            private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
            {
                global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
                return _additionalTypeData;
            }
            global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();
            #endif

            public unsafe void Invoke(long time)
            {
                IntPtr ThisPtr = _nativeDelegate.ThisPtr;
                var abiInvoke = (delegate* unmanaged[Stdcall]<IntPtr, long, int>)(_nativeDelegate.Vftbl.Invoke);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR(abiInvoke(ThisPtr, time));

            }
        }

        public static IntPtr FromManaged(global::Telegram.Native.Calls.BroadcastTimeRequestedDeferral managedDelegate) => CreateMarshaler2(managedDelegate).Detach();

        public static void DisposeMarshaler(IObjectReference value) => MarshalInterfaceHelper<global::Telegram.Native.Calls.BroadcastTimeRequestedDeferral>.DisposeMarshaler(value);

        public static void DisposeAbi(IntPtr abi) => MarshalInterfaceHelper<global::Telegram.Native.Calls.BroadcastTimeRequestedDeferral>.DisposeAbi(abi);

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Invoke(IntPtr thisPtr, long time)
        {


            try
            {

                global::WinRT.ComWrappersSupport.FindObject<global::Telegram.Native.Calls.BroadcastTimeRequestedDeferral>(thisPtr).Invoke(time)
                ;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
    }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct BroadcastTimeRequestedEventArgs
    {

        public static IObjectReference CreateMarshaler(global::Telegram.Native.Calls.BroadcastTimeRequestedEventArgs obj) => obj is null ? null : MarshalInspectable<global::Telegram.Native.Calls.BroadcastTimeRequestedEventArgs>.CreateMarshaler<IUnknownVftbl>(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Calls.IBroadcastTimeRequestedEventArgs).GetHelperType()));
        public static ObjectReferenceValue CreateMarshaler2(global::Telegram.Native.Calls.BroadcastTimeRequestedEventArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Calls.IBroadcastTimeRequestedEventArgs).GetHelperType()));
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Telegram.Native.Calls.BroadcastTimeRequestedEventArgs FromAbi(IntPtr thisPtr) => global::Telegram.Native.Calls.BroadcastTimeRequestedEventArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Telegram.Native.Calls.BroadcastTimeRequestedEventArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Telegram.Native.Calls.BroadcastTimeRequestedEventArgs>.MarshalerArray CreateMarshalerArray(global::Telegram.Native.Calls.BroadcastTimeRequestedEventArgs[] array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.BroadcastTimeRequestedEventArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Calls.BroadcastTimeRequestedEventArgs>.GetAbiArray(box);
        public static unsafe global::Telegram.Native.Calls.BroadcastTimeRequestedEventArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Calls.BroadcastTimeRequestedEventArgs>.FromAbiArray(box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Telegram.Native.Calls.BroadcastTimeRequestedEventArgs[] array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.BroadcastTimeRequestedEventArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Telegram.Native.Calls.BroadcastTimeRequestedEventArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.BroadcastTimeRequestedEventArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    [Guid("ABCAB248-91A6-5452-A2B9-C3ABFBD4987D")]
    public static class EmitJsonPayloadDelegate
    {

        private static readonly global::WinRT.Interop.IDelegateVftbl AbiToProjectionVftable;
        public static readonly IntPtr AbiToProjectionVftablePtr;

        static unsafe EmitJsonPayloadDelegate()
        {
            AbiToProjectionVftable = new global::WinRT.Interop.IDelegateVftbl
            {
                IUnknownVftbl = global::WinRT.Interop.IUnknownVftbl.AbiToProjectionVftbl,
                Invoke = (IntPtr)(delegate* unmanaged[Stdcall]<IntPtr, int, IntPtr, int>)&Do_Abi_Invoke
            };
            var nativeVftbl = ComWrappersSupport.AllocateVtableMemory(typeof(EmitJsonPayloadDelegate), Marshal.SizeOf<global::WinRT.Interop.IDelegateVftbl>());
            Marshal.StructureToPtr(AbiToProjectionVftable, nativeVftbl, false);
            AbiToProjectionVftablePtr = nativeVftbl;
        }

        public static unsafe IObjectReference CreateMarshaler(global::Telegram.Native.Calls.EmitJsonPayloadDelegate managedDelegate) => 
        managedDelegate is null ? null : MarshalDelegate.CreateMarshaler(managedDelegate, GuidGenerator.GetIID(typeof(EmitJsonPayloadDelegate)));

        public static unsafe ObjectReferenceValue CreateMarshaler2(global::Telegram.Native.Calls.EmitJsonPayloadDelegate managedDelegate) => 
        MarshalDelegate.CreateMarshaler2(managedDelegate, GuidGenerator.GetIID(typeof(EmitJsonPayloadDelegate)));

        public static IntPtr GetAbi(IObjectReference value) => MarshalInterfaceHelper<global::Telegram.Native.Calls.EmitJsonPayloadDelegate>.GetAbi(value);

        public static unsafe global::Telegram.Native.Calls.EmitJsonPayloadDelegate FromAbi(IntPtr nativeDelegate)
        {
            return MarshalDelegate.FromAbi<global::Telegram.Native.Calls.EmitJsonPayloadDelegate>(nativeDelegate);
        }

        public static global::Telegram.Native.Calls.EmitJsonPayloadDelegate CreateRcw(IntPtr ptr)
        {
            return new global::Telegram.Native.Calls.EmitJsonPayloadDelegate(new NativeDelegateWrapper(ComWrappersSupport.GetObjectReferenceForInterface<IDelegateVftbl>(ptr, GuidGenerator.GetIID(typeof(EmitJsonPayloadDelegate)))).Invoke);
        }

        [global::WinRT.ObjectReferenceWrapper(nameof(_nativeDelegate))]
        #if !NET
        private sealed class NativeDelegateWrapper
        #else
        private sealed class NativeDelegateWrapper : IWinRTObject
        #endif
        {
            private readonly ObjectReference<global::WinRT.Interop.IDelegateVftbl> _nativeDelegate;

            public NativeDelegateWrapper(ObjectReference<global::WinRT.Interop.IDelegateVftbl> nativeDelegate)
            {
                _nativeDelegate = nativeDelegate;
            }

            #if NET
            IObjectReference IWinRTObject.NativeObject => _nativeDelegate;
            bool IWinRTObject.HasUnwrappableNativeObject => true;
            private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
            private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
            {
                global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
                return _queryInterfaceCache;
            }
            global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
            private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
            private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
            {
                global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
                return _additionalTypeData;
            }
            global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();
            #endif

            public unsafe void Invoke(int ssrc, string payload)
            {
                IntPtr ThisPtr = _nativeDelegate.ThisPtr;
                var abiInvoke = (delegate* unmanaged[Stdcall]<IntPtr, int, IntPtr, int>)(_nativeDelegate.Vftbl.Invoke);
                MarshalString.Pinnable __payload = new(payload);
                fixed(void* ___payload = __payload)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR(abiInvoke(ThisPtr, ssrc, MarshalString.GetAbi(ref __payload)));
                }

            }
        }

        public static IntPtr FromManaged(global::Telegram.Native.Calls.EmitJsonPayloadDelegate managedDelegate) => CreateMarshaler2(managedDelegate).Detach();

        public static void DisposeMarshaler(IObjectReference value) => MarshalInterfaceHelper<global::Telegram.Native.Calls.EmitJsonPayloadDelegate>.DisposeMarshaler(value);

        public static void DisposeAbi(IntPtr abi) => MarshalInterfaceHelper<global::Telegram.Native.Calls.EmitJsonPayloadDelegate>.DisposeAbi(abi);

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Invoke(IntPtr thisPtr, int ssrc, IntPtr payload)
        {


            try
            {

                global::WinRT.ComWrappersSupport.FindObject<global::Telegram.Native.Calls.EmitJsonPayloadDelegate>(thisPtr).Invoke(ssrc, MarshalString.FromAbi(payload))
                ;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
    }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GroupNetworkStateChangedEventArgs
    {

        public static IObjectReference CreateMarshaler(global::Telegram.Native.Calls.GroupNetworkStateChangedEventArgs obj) => obj is null ? null : MarshalInspectable<global::Telegram.Native.Calls.GroupNetworkStateChangedEventArgs>.CreateMarshaler<IUnknownVftbl>(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Calls.IGroupNetworkStateChangedEventArgs).GetHelperType()));
        public static ObjectReferenceValue CreateMarshaler2(global::Telegram.Native.Calls.GroupNetworkStateChangedEventArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Calls.IGroupNetworkStateChangedEventArgs).GetHelperType()));
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Telegram.Native.Calls.GroupNetworkStateChangedEventArgs FromAbi(IntPtr thisPtr) => global::Telegram.Native.Calls.GroupNetworkStateChangedEventArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Telegram.Native.Calls.GroupNetworkStateChangedEventArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Telegram.Native.Calls.GroupNetworkStateChangedEventArgs>.MarshalerArray CreateMarshalerArray(global::Telegram.Native.Calls.GroupNetworkStateChangedEventArgs[] array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.GroupNetworkStateChangedEventArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Calls.GroupNetworkStateChangedEventArgs>.GetAbiArray(box);
        public static unsafe global::Telegram.Native.Calls.GroupNetworkStateChangedEventArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Calls.GroupNetworkStateChangedEventArgs>.FromAbiArray(box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Telegram.Native.Calls.GroupNetworkStateChangedEventArgs[] array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.GroupNetworkStateChangedEventArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Telegram.Native.Calls.GroupNetworkStateChangedEventArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.GroupNetworkStateChangedEventArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    internal static class IBroadcastPartRequestedEventArgsMethods
    {
        public static unsafe int get_ChannelId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out int, int>**)ThisPtr)[8](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Telegram.Native.Calls.BroadcastPartRequestedDeferral get_Deferral(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[10](ThisPtr, out __retval));
                return BroadcastPartRequestedDeferral.FromAbi(__retval);
            }
            finally
            {
                BroadcastPartRequestedDeferral.DisposeAbi(__retval);
            }
        }

        public static unsafe int get_Scale(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out int, int>**)ThisPtr)[6](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe long get_Time(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            long __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out long, int>**)ThisPtr)[7](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Telegram.Td.Api.GroupCallVideoQuality get_VideoQuality(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[9](ThisPtr, out __retval));
                return MarshalInterface<global::Telegram.Td.Api.GroupCallVideoQuality>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Telegram.Td.Api.GroupCallVideoQuality>.DisposeAbi(__retval);
            }
        }


    }
    [Guid("11387870-7248-51F3-B070-0EC3C53FEBCB")]
    internal interface IBroadcastPartRequestedEventArgs : global::Telegram.Native.Calls.IBroadcastPartRequestedEventArgs
    {
    }
    internal static class IBroadcastTimeRequestedEventArgsMethods
    {
        public static unsafe global::Telegram.Native.Calls.BroadcastTimeRequestedDeferral get_Deferral(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[6](ThisPtr, out __retval));
                return BroadcastTimeRequestedDeferral.FromAbi(__retval);
            }
            finally
            {
                BroadcastTimeRequestedDeferral.DisposeAbi(__retval);
            }
        }


    }
    [Guid("0B76823D-41E0-5DDD-8BBC-786AE83759F1")]
    internal interface IBroadcastTimeRequestedEventArgs : global::Telegram.Native.Calls.IBroadcastTimeRequestedEventArgs
    {
    }
    internal static class IGroupNetworkStateChangedEventArgsMethods
    {
        public static unsafe bool get_IsConnected(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out byte, int>**)ThisPtr)[6](ThisPtr, out __retval));
            return __retval != 0;
        }

        public static unsafe bool get_IsTransitioningFromBroadcastToRtc(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out byte, int>**)ThisPtr)[7](ThisPtr, out __retval));
            return __retval != 0;
        }


    }
    [Guid("BD0146A5-4000-5A30-87F3-7EA31D1F25E3")]
    internal interface IGroupNetworkStateChangedEventArgs : global::Telegram.Native.Calls.IGroupNetworkStateChangedEventArgs
    {
    }
    internal static class IRemoteMediaStateUpdatedEventArgsMethods
    {
        public static unsafe global::Telegram.Native.Calls.VoipAudioState get_Audio(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Telegram.Native.Calls.VoipAudioState __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Telegram.Native.Calls.VoipAudioState, int>**)ThisPtr)[6](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe global::Telegram.Native.Calls.VoipVideoState get_Video(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Telegram.Native.Calls.VoipVideoState __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Telegram.Native.Calls.VoipVideoState, int>**)ThisPtr)[7](ThisPtr, out __retval));
            return __retval;
        }


    }
    [Guid("E5BB29D9-A7A1-5594-A06B-BEB3B5065FF5")]
    internal interface IRemoteMediaStateUpdatedEventArgs : global::Telegram.Native.Calls.IRemoteMediaStateUpdatedEventArgs
    {
    }
    internal static class ISignalingDataEmittedEventArgsMethods
    {
        public static unsafe global::System.Collections.Generic.IList<byte> get_Data(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[6](ThisPtr, out __retval));
                return MarshalInterface<global::System.Collections.Generic.IList<byte>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IList<byte>>.DisposeAbi(__retval);
            }
        }


    }
    [Guid("28FC6414-8A99-54E8-9007-DD5654B8E226")]
    internal interface ISignalingDataEmittedEventArgs : global::Telegram.Native.Calls.ISignalingDataEmittedEventArgs
    {
    }
    internal static class IVoipCaptureBaseMethods
    {

        public static unsafe void SetState(IObjectReference _obj, global::Telegram.Native.Calls.VoipVideoState state)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Telegram.Native.Calls.VoipVideoState, int>**)ThisPtr)[6](ThisPtr, state));
        }

        public static unsafe global::Telegram.Native.Calls.VoipVideoRendererToken SetOutput(IObjectReference _obj, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl canvas)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __canvas = default;
            IntPtr __retval = default;
            try
            {
                __canvas = global::ABI.Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl.CreateMarshaler2(canvas);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__canvas), out __retval));
                return global::ABI.Telegram.Native.Calls.VoipVideoRendererToken.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__canvas);
                global::ABI.Telegram.Native.Calls.VoipVideoRendererToken.DisposeAbi(__retval);
            }
        }

        public static unsafe global::Telegram.Native.Calls.VoipVideoRendererToken SetOutput(IObjectReference _obj, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl canvas, bool enableBlur)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __canvas = default;
            IntPtr __retval = default;
            try
            {
                __canvas = global::ABI.Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl.CreateMarshaler2(canvas);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte, out IntPtr, int>**)ThisPtr)[8](ThisPtr, MarshalInspectable<object>.GetAbi(__canvas), (byte)(enableBlur ? 1 : 0), out __retval));
                return global::ABI.Telegram.Native.Calls.VoipVideoRendererToken.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__canvas);
                global::ABI.Telegram.Native.Calls.VoipVideoRendererToken.DisposeAbi(__retval);
            }
        }

    }
    [Guid("07EF2498-0E01-52E7-822F-300866DBC3C5")]
    internal interface IVoipCaptureBase : global::Telegram.Native.Calls.IVoipCaptureBase
    {
    }
    internal static class IVoipCaptureBaseFactoryMethods
    {

    }
    [Guid("0D10D4C5-C79B-52FC-8BBC-A8D1E6443BAE")]
    internal interface IVoipCaptureBaseFactory : global::Telegram.Native.Calls.IVoipCaptureBaseFactory
    {
    }
    internal static class IVoipDescriptorMethods
    {
        public static unsafe string get_AudioInputId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[22](ThisPtr, out __retval));
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        public static unsafe void set_AudioInputId(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[23](ThisPtr, MarshalString.GetAbi(ref __value)));
            }
        }

        public static unsafe string get_AudioOutputId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[24](ThisPtr, out __retval));
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        public static unsafe void set_AudioOutputId(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[25](ThisPtr, MarshalString.GetAbi(ref __value)));
            }
        }

        public static unsafe string get_CustomParameters(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[16](ThisPtr, out __retval));
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        public static unsafe void set_CustomParameters(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[17](ThisPtr, MarshalString.GetAbi(ref __value)));
            }
        }

        public static unsafe bool get_EnableP2p(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out byte, int>**)ThisPtr)[20](ThisPtr, out __retval));
            return __retval != 0;
        }
        public static unsafe void set_EnableP2p(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[21](ThisPtr, (byte)(value ? 1 : 0)));
        }

        public static unsafe global::System.Collections.Generic.IList<byte> get_EncryptionKey(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[14](ThisPtr, out __retval));
                return MarshalInterface<global::System.Collections.Generic.IList<byte>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IList<byte>>.DisposeAbi(__retval);
            }
        }
        public static unsafe void set_EncryptionKey(IObjectReference _obj, global::System.Collections.Generic.IList<byte> value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::System.Collections.Generic.IList<byte>>.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[15](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        public static unsafe double get_InitializationTimeout(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out double, int>**)ThisPtr)[6](ThisPtr, out __retval));
            return __retval;
        }
        public static unsafe void set_InitializationTimeout(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[7](ThisPtr, value));
        }

        public static unsafe bool get_IsOutgoing(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out byte, int>**)ThisPtr)[18](ThisPtr, out __retval));
            return __retval != 0;
        }
        public static unsafe void set_IsOutgoing(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[19](ThisPtr, (byte)(value ? 1 : 0)));
        }

        public static unsafe global::System.Collections.Generic.IList<byte> get_PersistentState(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[10](ThisPtr, out __retval));
                return MarshalInterface<global::System.Collections.Generic.IList<byte>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IList<byte>>.DisposeAbi(__retval);
            }
        }
        public static unsafe void set_PersistentState(IObjectReference _obj, global::System.Collections.Generic.IList<byte> value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::System.Collections.Generic.IList<byte>>.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[11](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        public static unsafe double get_ReceiveTimeout(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            double __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out double, int>**)ThisPtr)[8](ThisPtr, out __retval));
            return __retval;
        }
        public static unsafe void set_ReceiveTimeout(IObjectReference _obj, double value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, double, int>**)ThisPtr)[9](ThisPtr, value));
        }

        public static unsafe global::System.Collections.Generic.IList<global::Telegram.Td.Api.CallServer> get_Servers(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[12](ThisPtr, out __retval));
                return MarshalInterface<global::System.Collections.Generic.IList<global::Telegram.Td.Api.CallServer>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IList<global::Telegram.Td.Api.CallServer>>.DisposeAbi(__retval);
            }
        }
        public static unsafe void set_Servers(IObjectReference _obj, global::System.Collections.Generic.IList<global::Telegram.Td.Api.CallServer> value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::System.Collections.Generic.IList<global::Telegram.Td.Api.CallServer>>.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[13](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        public static unsafe global::Telegram.Native.Calls.VoipCaptureBase get_VideoCapture(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[26](ThisPtr, out __retval));
                return global::ABI.Telegram.Native.Calls.VoipCaptureBase.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Telegram.Native.Calls.VoipCaptureBase.DisposeAbi(__retval);
            }
        }
        public static unsafe void set_VideoCapture(IObjectReference _obj, global::Telegram.Native.Calls.VoipCaptureBase value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Telegram.Native.Calls.VoipCaptureBase.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[27](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }


    }
    [Guid("E59055F1-4062-5A80-A938-D3F41B2AB517")]
    internal interface IVoipDescriptor : global::Telegram.Native.Calls.IVoipDescriptor
    {
    }
    internal static class IVoipGroupDescriptorMethods
    {
        public static unsafe string get_AudioInputId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[6](ThisPtr, out __retval));
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        public static unsafe void set_AudioInputId(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalString.GetAbi(ref __value)));
            }
        }

        public static unsafe string get_AudioOutputId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[8](ThisPtr, out __retval));
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        public static unsafe void set_AudioOutputId(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalString.GetAbi(ref __value)));
            }
        }

        public static unsafe bool get_IsNoiseSuppressionEnabled(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out byte, int>**)ThisPtr)[14](ThisPtr, out __retval));
            return __retval != 0;
        }
        public static unsafe void set_IsNoiseSuppressionEnabled(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[15](ThisPtr, (byte)(value ? 1 : 0)));
        }

        public static unsafe global::Telegram.Native.Calls.VoipCaptureBase get_VideoCapture(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[12](ThisPtr, out __retval));
                return global::ABI.Telegram.Native.Calls.VoipCaptureBase.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Telegram.Native.Calls.VoipCaptureBase.DisposeAbi(__retval);
            }
        }
        public static unsafe void set_VideoCapture(IObjectReference _obj, global::Telegram.Native.Calls.VoipCaptureBase value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Telegram.Native.Calls.VoipCaptureBase.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[13](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        public static unsafe global::Telegram.Native.Calls.VoipVideoContentType get_VideoContentType(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Telegram.Native.Calls.VoipVideoContentType __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Telegram.Native.Calls.VoipVideoContentType, int>**)ThisPtr)[10](ThisPtr, out __retval));
            return __retval;
        }
        public static unsafe void set_VideoContentType(IObjectReference _obj, global::Telegram.Native.Calls.VoipVideoContentType value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Telegram.Native.Calls.VoipVideoContentType, int>**)ThisPtr)[11](ThisPtr, value));
        }


    }
    [Guid("3F259B6B-9D92-5727-8B55-55EB7ED04D4F")]
    internal interface IVoipGroupDescriptor : global::Telegram.Native.Calls.IVoipGroupDescriptor
    {
    }
    internal static class IVoipGroupManagerMethods
    {

        public static unsafe void SetConnectionMode(IObjectReference _obj, global::Telegram.Native.Calls.VoipGroupConnectionMode connectionMode, bool keepBroadcastIfWasEnabled, bool isUnifiedBroadcast)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Telegram.Native.Calls.VoipGroupConnectionMode, byte, byte, int>**)ThisPtr)[6](ThisPtr, connectionMode, (byte)(keepBroadcastIfWasEnabled ? 1 : 0), (byte)(isUnifiedBroadcast ? 1 : 0)));
        }

        public static unsafe void EmitJoinPayload(IObjectReference _obj, global::Telegram.Native.Calls.EmitJsonPayloadDelegate completion)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __completion = default;
            try
            {
                __completion = EmitJsonPayloadDelegate.CreateMarshaler2(completion);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__completion)));
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__completion);
            }
        }

        public static unsafe void SetJoinResponsePayload(IObjectReference _obj, string payload)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __payload = new(payload);
            fixed(void* ___payload = __payload)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[8](ThisPtr, MarshalString.GetAbi(ref __payload)));
            }
        }

        public static unsafe void RemoveSsrcs(IObjectReference _obj, global::System.Collections.Generic.IList<int> ssrcs)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __ssrcs = default;
            try
            {
                __ssrcs = MarshalInterface<global::System.Collections.Generic.IList<int>>.CreateMarshaler2(ssrcs);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__ssrcs)));
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__ssrcs);
            }
        }

        public static unsafe global::Telegram.Native.Calls.VoipVideoRendererToken AddIncomingVideoOutput(IObjectReference _obj, int audioSource, global::Telegram.Td.Api.GroupCallParticipantVideoInfo videoInfo, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl canvas)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __videoInfo = default;
            ObjectReferenceValue __canvas = default;
            IntPtr __retval = default;
            try
            {
                __videoInfo = global::ABI.Telegram.Td.Api.GroupCallParticipantVideoInfo.CreateMarshaler2(videoInfo);
                __canvas = global::ABI.Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl.CreateMarshaler2(canvas);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, IntPtr, IntPtr, out IntPtr, int>**)ThisPtr)[10](ThisPtr, audioSource, MarshalInspectable<object>.GetAbi(__videoInfo), MarshalInspectable<object>.GetAbi(__canvas), out __retval));
                return global::ABI.Telegram.Native.Calls.VoipVideoRendererToken.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__videoInfo);
                MarshalInspectable<object>.DisposeMarshaler(__canvas);
                global::ABI.Telegram.Native.Calls.VoipVideoRendererToken.DisposeAbi(__retval);
            }
        }

        public static unsafe void AddUnifiedVideoOutput(IObjectReference _obj, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl canvas)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __canvas = default;
            try
            {
                __canvas = global::ABI.Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl.CreateMarshaler2(canvas);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[11](ThisPtr, MarshalInspectable<object>.GetAbi(__canvas)));
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__canvas);
            }
        }

        public static unsafe void SetAudioOutputDevice(IObjectReference _obj, string id)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __id = new(id);
            fixed(void* ___id = __id)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[16](ThisPtr, MarshalString.GetAbi(ref __id)));
            }
        }

        public static unsafe void SetAudioInputDevice(IObjectReference _obj, string id)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __id = new(id);
            fixed(void* ___id = __id)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[17](ThisPtr, MarshalString.GetAbi(ref __id)));
            }
        }

        public static unsafe void SetVideoCapture(IObjectReference _obj, global::Telegram.Native.Calls.VoipCaptureBase videoCapture)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __videoCapture = default;
            try
            {
                __videoCapture = global::ABI.Telegram.Native.Calls.VoipCaptureBase.CreateMarshaler2(videoCapture);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[18](ThisPtr, MarshalInspectable<object>.GetAbi(__videoCapture)));
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__videoCapture);
            }
        }

        public static unsafe void SetVolume(IObjectReference _obj, int ssrc, double volume)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, double, int>**)ThisPtr)[19](ThisPtr, ssrc, volume));
        }

        public static unsafe void SetRequestedVideoChannels(IObjectReference _obj, global::System.Collections.Generic.IList<global::Telegram.Native.Calls.VoipVideoChannelInfo> descriptions)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __descriptions = default;
            try
            {
                __descriptions = MarshalInterface<global::System.Collections.Generic.IList<global::Telegram.Native.Calls.VoipVideoChannelInfo>>.CreateMarshaler2(descriptions);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[20](ThisPtr, MarshalInspectable<object>.GetAbi(__descriptions)));
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__descriptions);
            }
        }
        public static unsafe bool get_IsMuted(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out byte, int>**)ThisPtr)[12](ThisPtr, out __retval));
            return __retval != 0;
        }
        public static unsafe void set_IsMuted(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[13](ThisPtr, (byte)(value ? 1 : 0)));
        }

        public static unsafe bool get_IsNoiseSuppressionEnabled(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out byte, int>**)ThisPtr)[14](ThisPtr, out __retval));
            return __retval != 0;
        }
        public static unsafe void set_IsNoiseSuppressionEnabled(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[15](ThisPtr, (byte)(value ? 1 : 0)));
        }


        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipGroupManager, global::System.Collections.Generic.IList<global::Telegram.Native.Calls.VoipGroupParticipant>>>> _AudioLevelsUpdated_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipGroupManager, global::System.Collections.Generic.IList<global::Telegram.Native.Calls.VoipGroupParticipant>>>> MakeAudioLevelsUpdatedTable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _AudioLevelsUpdated_, new(), null);
            return _AudioLevelsUpdated_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipGroupManager, global::System.Collections.Generic.IList<global::Telegram.Native.Calls.VoipGroupParticipant>>>> _AudioLevelsUpdated => _AudioLevelsUpdated_ ?? MakeAudioLevelsUpdatedTable();

        public static unsafe (Action<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipGroupManager, global::System.Collections.Generic.IList<global::Telegram.Native.Calls.VoipGroupParticipant>>>, Action<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipGroupManager, global::System.Collections.Generic.IList<global::Telegram.Native.Calls.VoipGroupParticipant>>>) Get_AudioLevelsUpdated(IObjectReference _obj, object _thisObj)
        {
            var eventSource = _AudioLevelsUpdated.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Telegram_Native_Calls_VoipGroupManager__global__System_Collections_Generic_IList_global__Telegram_Native_Calls_VoipGroupParticipant__(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out global::WinRT.EventRegistrationToken, int>**)ThisPtr)[23],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[24],
                0);
            });
            return eventSource.EventActions;
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipGroupManager, global::Telegram.Native.Calls.BroadcastPartRequestedEventArgs>>> _BroadcastPartRequested_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipGroupManager, global::Telegram.Native.Calls.BroadcastPartRequestedEventArgs>>> MakeBroadcastPartRequestedTable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _BroadcastPartRequested_, new(), null);
            return _BroadcastPartRequested_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipGroupManager, global::Telegram.Native.Calls.BroadcastPartRequestedEventArgs>>> _BroadcastPartRequested => _BroadcastPartRequested_ ?? MakeBroadcastPartRequestedTable();

        public static unsafe (Action<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipGroupManager, global::Telegram.Native.Calls.BroadcastPartRequestedEventArgs>>, Action<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipGroupManager, global::Telegram.Native.Calls.BroadcastPartRequestedEventArgs>>) Get_BroadcastPartRequested(IObjectReference _obj, object _thisObj)
        {
            var eventSource = _BroadcastPartRequested.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Telegram_Native_Calls_VoipGroupManager__global__Telegram_Native_Calls_BroadcastPartRequestedEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out global::WinRT.EventRegistrationToken, int>**)ThisPtr)[27],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[28],
                1);
            });
            return eventSource.EventActions;
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipGroupManager, global::Telegram.Native.Calls.BroadcastTimeRequestedEventArgs>>> _BroadcastTimeRequested_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipGroupManager, global::Telegram.Native.Calls.BroadcastTimeRequestedEventArgs>>> MakeBroadcastTimeRequestedTable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _BroadcastTimeRequested_, new(), null);
            return _BroadcastTimeRequested_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipGroupManager, global::Telegram.Native.Calls.BroadcastTimeRequestedEventArgs>>> _BroadcastTimeRequested => _BroadcastTimeRequested_ ?? MakeBroadcastTimeRequestedTable();

        public static unsafe (Action<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipGroupManager, global::Telegram.Native.Calls.BroadcastTimeRequestedEventArgs>>, Action<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipGroupManager, global::Telegram.Native.Calls.BroadcastTimeRequestedEventArgs>>) Get_BroadcastTimeRequested(IObjectReference _obj, object _thisObj)
        {
            var eventSource = _BroadcastTimeRequested.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Telegram_Native_Calls_VoipGroupManager__global__Telegram_Native_Calls_BroadcastTimeRequestedEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out global::WinRT.EventRegistrationToken, int>**)ThisPtr)[25],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[26],
                2);
            });
            return eventSource.EventActions;
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipGroupManager, global::Telegram.Native.Calls.GroupNetworkStateChangedEventArgs>>> _NetworkStateUpdated_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipGroupManager, global::Telegram.Native.Calls.GroupNetworkStateChangedEventArgs>>> MakeNetworkStateUpdatedTable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _NetworkStateUpdated_, new(), null);
            return _NetworkStateUpdated_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipGroupManager, global::Telegram.Native.Calls.GroupNetworkStateChangedEventArgs>>> _NetworkStateUpdated => _NetworkStateUpdated_ ?? MakeNetworkStateUpdatedTable();

        public static unsafe (Action<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipGroupManager, global::Telegram.Native.Calls.GroupNetworkStateChangedEventArgs>>, Action<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipGroupManager, global::Telegram.Native.Calls.GroupNetworkStateChangedEventArgs>>) Get_NetworkStateUpdated(IObjectReference _obj, object _thisObj)
        {
            var eventSource = _NetworkStateUpdated.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Telegram_Native_Calls_VoipGroupManager__global__Telegram_Native_Calls_GroupNetworkStateChangedEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out global::WinRT.EventRegistrationToken, int>**)ThisPtr)[21],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[22],
                3);
            });
            return eventSource.EventActions;
        }

    }
    [Guid("5D21933E-CD18-5EFF-81FF-3A84DE5968CE")]
    internal interface IVoipGroupManager : global::Telegram.Native.Calls.IVoipGroupManager
    {
    }
    internal static class IVoipGroupManagerFactoryMethods
    {

        public static unsafe global::Telegram.Native.Calls.VoipGroupManager CreateInstance(IObjectReference _obj, global::Telegram.Native.Calls.VoipGroupDescriptor descriptor)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __descriptor = default;
            IntPtr __retval = default;
            try
            {
                __descriptor = global::ABI.Telegram.Native.Calls.VoipGroupDescriptor.CreateMarshaler2(descriptor);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__descriptor), out __retval));
                return global::ABI.Telegram.Native.Calls.VoipGroupManager.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__descriptor);
                global::ABI.Telegram.Native.Calls.VoipGroupManager.DisposeAbi(__retval);
            }
        }

    }
    [Guid("0CCF1561-0C5E-5F12-AE67-08521B193A76")]
    internal interface IVoipGroupManagerFactory : global::Telegram.Native.Calls.IVoipGroupManagerFactory
    {
    }
    internal static class IVoipManagerMethods
    {

        public static unsafe void Start(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[6](ThisPtr));
        }

        public static unsafe void SetAudioOutputGainControlEnabled(IObjectReference _obj, bool enabled)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[9](ThisPtr, (byte)(enabled ? 1 : 0)));
        }

        public static unsafe void SetEchoCancellationStrength(IObjectReference _obj, int strength)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, int>**)ThisPtr)[10](ThisPtr, strength));
        }

        public static unsafe global::Telegram.Native.Calls.VoipVideoRendererToken SetIncomingVideoOutput(IObjectReference _obj, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl canvas)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __canvas = default;
            IntPtr __retval = default;
            try
            {
                __canvas = global::ABI.Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl.CreateMarshaler2(canvas);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out IntPtr, int>**)ThisPtr)[12](ThisPtr, MarshalInspectable<object>.GetAbi(__canvas), out __retval));
                return global::ABI.Telegram.Native.Calls.VoipVideoRendererToken.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__canvas);
                global::ABI.Telegram.Native.Calls.VoipVideoRendererToken.DisposeAbi(__retval);
            }
        }

        public static unsafe void SetAudioInputDevice(IObjectReference _obj, string id)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __id = new(id);
            fixed(void* ___id = __id)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[13](ThisPtr, MarshalString.GetAbi(ref __id)));
            }
        }

        public static unsafe void SetAudioOutputDevice(IObjectReference _obj, string id)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __id = new(id);
            fixed(void* ___id = __id)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[14](ThisPtr, MarshalString.GetAbi(ref __id)));
            }
        }

        public static unsafe void SetAudioOutputDuckingEnabled(IObjectReference _obj, bool enabled)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[15](ThisPtr, (byte)(enabled ? 1 : 0)));
        }

        public static unsafe void SetIsLowBatteryLevel(IObjectReference _obj, bool isLowBatteryLevel)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[16](ThisPtr, (byte)(isLowBatteryLevel ? 1 : 0)));
        }

        public static unsafe string GetDebugInfo(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[17](ThisPtr, out __retval));
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        public static unsafe long GetPreferredRelayId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            long __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out long, int>**)ThisPtr)[18](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe void ReceiveSignalingData(IObjectReference _obj, global::System.Collections.Generic.IList<byte> data)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __data = default;
            try
            {
                __data = MarshalInterface<global::System.Collections.Generic.IList<byte>>.CreateMarshaler2(data);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[19](ThisPtr, MarshalInspectable<object>.GetAbi(__data)));
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__data);
            }
        }

        public static unsafe void SetVideoCapture(IObjectReference _obj, global::Telegram.Native.Calls.VoipCaptureBase videoCapture)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __videoCapture = default;
            try
            {
                __videoCapture = global::ABI.Telegram.Native.Calls.VoipCaptureBase.CreateMarshaler2(videoCapture);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[20](ThisPtr, MarshalInspectable<object>.GetAbi(__videoCapture)));
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__videoCapture);
            }
        }

        public static unsafe void SetRequestedVideoAspect(IObjectReference _obj, float aspect)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[21](ThisPtr, aspect));
        }
        public static unsafe bool get_IsMuted(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out byte, int>**)ThisPtr)[7](ThisPtr, out __retval));
            return __retval != 0;
        }
        public static unsafe void set_IsMuted(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[8](ThisPtr, (byte)(value ? 1 : 0)));
        }

        public static unsafe bool get_SupportsVideo(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out byte, int>**)ThisPtr)[11](ThisPtr, out __retval));
            return __retval != 0;
        }


        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, float>>> _AudioLevelUpdated_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, float>>> MakeAudioLevelUpdatedTable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _AudioLevelUpdated_, new(), null);
            return _AudioLevelUpdated_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, float>>> _AudioLevelUpdated => _AudioLevelUpdated_ ?? MakeAudioLevelUpdatedTable();

        public static unsafe (Action<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, float>>, Action<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, float>>) Get_AudioLevelUpdated(IObjectReference _obj, object _thisObj)
        {
            var eventSource = _AudioLevelUpdated.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Telegram_Native_Calls_VoipManager__float_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out global::WinRT.EventRegistrationToken, int>**)ThisPtr)[26],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[27],
                0);
            });
            return eventSource.EventActions;
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, bool>>> _RemoteBatteryLevelIsLowUpdated_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, bool>>> MakeRemoteBatteryLevelIsLowUpdatedTable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _RemoteBatteryLevelIsLowUpdated_, new(), null);
            return _RemoteBatteryLevelIsLowUpdated_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, bool>>> _RemoteBatteryLevelIsLowUpdated => _RemoteBatteryLevelIsLowUpdated_ ?? MakeRemoteBatteryLevelIsLowUpdatedTable();

        public static unsafe (Action<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, bool>>, Action<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, bool>>) Get_RemoteBatteryLevelIsLowUpdated(IObjectReference _obj, object _thisObj)
        {
            var eventSource = _RemoteBatteryLevelIsLowUpdated.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Telegram_Native_Calls_VoipManager__bool_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out global::WinRT.EventRegistrationToken, int>**)ThisPtr)[28],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[29],
                1);
            });
            return eventSource.EventActions;
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, global::Telegram.Native.Calls.RemoteMediaStateUpdatedEventArgs>>> _RemoteMediaStateUpdated_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, global::Telegram.Native.Calls.RemoteMediaStateUpdatedEventArgs>>> MakeRemoteMediaStateUpdatedTable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _RemoteMediaStateUpdated_, new(), null);
            return _RemoteMediaStateUpdated_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, global::Telegram.Native.Calls.RemoteMediaStateUpdatedEventArgs>>> _RemoteMediaStateUpdated => _RemoteMediaStateUpdated_ ?? MakeRemoteMediaStateUpdatedTable();

        public static unsafe (Action<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, global::Telegram.Native.Calls.RemoteMediaStateUpdatedEventArgs>>, Action<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, global::Telegram.Native.Calls.RemoteMediaStateUpdatedEventArgs>>) Get_RemoteMediaStateUpdated(IObjectReference _obj, object _thisObj)
        {
            var eventSource = _RemoteMediaStateUpdated.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Telegram_Native_Calls_VoipManager__global__Telegram_Native_Calls_RemoteMediaStateUpdatedEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out global::WinRT.EventRegistrationToken, int>**)ThisPtr)[30],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[31],
                2);
            });
            return eventSource.EventActions;
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, float>>> _RemotePrefferedAspectRatioUpdated_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, float>>> MakeRemotePrefferedAspectRatioUpdatedTable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _RemotePrefferedAspectRatioUpdated_, new(), null);
            return _RemotePrefferedAspectRatioUpdated_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, float>>> _RemotePrefferedAspectRatioUpdated => _RemotePrefferedAspectRatioUpdated_ ?? MakeRemotePrefferedAspectRatioUpdatedTable();

        public static unsafe (Action<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, float>>, Action<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, float>>) Get_RemotePrefferedAspectRatioUpdated(IObjectReference _obj, object _thisObj)
        {
            var eventSource = _RemotePrefferedAspectRatioUpdated.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Telegram_Native_Calls_VoipManager__float_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out global::WinRT.EventRegistrationToken, int>**)ThisPtr)[32],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[33],
                3);
            });
            return eventSource.EventActions;
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, int>>> _SignalBarsUpdated_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, int>>> MakeSignalBarsUpdatedTable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _SignalBarsUpdated_, new(), null);
            return _SignalBarsUpdated_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, int>>> _SignalBarsUpdated => _SignalBarsUpdated_ ?? MakeSignalBarsUpdatedTable();

        public static unsafe (Action<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, int>>, Action<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, int>>) Get_SignalBarsUpdated(IObjectReference _obj, object _thisObj)
        {
            var eventSource = _SignalBarsUpdated.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Telegram_Native_Calls_VoipManager__int_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out global::WinRT.EventRegistrationToken, int>**)ThisPtr)[24],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[25],
                4);
            });
            return eventSource.EventActions;
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, global::Telegram.Native.Calls.SignalingDataEmittedEventArgs>>> _SignalingDataEmitted_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, global::Telegram.Native.Calls.SignalingDataEmittedEventArgs>>> MakeSignalingDataEmittedTable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _SignalingDataEmitted_, new(), null);
            return _SignalingDataEmitted_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, global::Telegram.Native.Calls.SignalingDataEmittedEventArgs>>> _SignalingDataEmitted => _SignalingDataEmitted_ ?? MakeSignalingDataEmittedTable();

        public static unsafe (Action<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, global::Telegram.Native.Calls.SignalingDataEmittedEventArgs>>, Action<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, global::Telegram.Native.Calls.SignalingDataEmittedEventArgs>>) Get_SignalingDataEmitted(IObjectReference _obj, object _thisObj)
        {
            var eventSource = _SignalingDataEmitted.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Telegram_Native_Calls_VoipManager__global__Telegram_Native_Calls_SignalingDataEmittedEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out global::WinRT.EventRegistrationToken, int>**)ThisPtr)[34],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[35],
                5);
            });
            return eventSource.EventActions;
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, global::Telegram.Native.Calls.VoipState>>> _StateUpdated_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, global::Telegram.Native.Calls.VoipState>>> MakeStateUpdatedTable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _StateUpdated_, new(), null);
            return _StateUpdated_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, global::Telegram.Native.Calls.VoipState>>> _StateUpdated => _StateUpdated_ ?? MakeStateUpdatedTable();

        public static unsafe (Action<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, global::Telegram.Native.Calls.VoipState>>, Action<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipManager, global::Telegram.Native.Calls.VoipState>>) Get_StateUpdated(IObjectReference _obj, object _thisObj)
        {
            var eventSource = _StateUpdated.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Telegram_Native_Calls_VoipManager__global__Telegram_Native_Calls_VoipState_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out global::WinRT.EventRegistrationToken, int>**)ThisPtr)[22],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[23],
                6);
            });
            return eventSource.EventActions;
        }

    }
    [Guid("F2769AB3-B2BB-5C10-BBB9-A5286483BFEA")]
    internal interface IVoipManager : global::Telegram.Native.Calls.IVoipManager
    {
    }
    internal static class IVoipManagerFactoryMethods
    {

        public static unsafe global::Telegram.Native.Calls.VoipManager CreateInstance(IObjectReference _obj, string version, global::Telegram.Native.Calls.VoipDescriptor descriptor)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __descriptor = default;
            IntPtr __retval = default;
            try
            {
                __descriptor = global::ABI.Telegram.Native.Calls.VoipDescriptor.CreateMarshaler2(descriptor);
                MarshalString.Pinnable __version = new(version);
                fixed(void* ___version = __version)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, out IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __version), MarshalInspectable<object>.GetAbi(__descriptor), out __retval));
                    return global::ABI.Telegram.Native.Calls.VoipManager.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__descriptor);
                global::ABI.Telegram.Native.Calls.VoipManager.DisposeAbi(__retval);
            }
        }

    }
    [Guid("78B38B82-3044-5C2A-AE67-30D55BE0869F")]
    internal interface IVoipManagerFactory : global::Telegram.Native.Calls.IVoipManagerFactory
    {
    }
    internal static class IVoipManagerStaticsMethods
    {
        public static unsafe global::Telegram.Td.Api.CallProtocol get_Protocol(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[6](ThisPtr, out __retval));
                return global::ABI.Telegram.Td.Api.CallProtocol.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Telegram.Td.Api.CallProtocol.DisposeAbi(__retval);
            }
        }


    }
    [Guid("57DBD681-D3D1-5E94-B32D-BA15753C6611")]
    internal interface IVoipManagerStatics : global::Telegram.Native.Calls.IVoipManagerStatics
    {
    }
    internal static class IVoipScreenCaptureMethods
    {

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipScreenCapture, object>>> _FatalErrorOccurred_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipScreenCapture, object>>> MakeFatalErrorOccurredTable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _FatalErrorOccurred_, new(), null);
            return _FatalErrorOccurred_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipScreenCapture, object>>> _FatalErrorOccurred => _FatalErrorOccurred_ ?? MakeFatalErrorOccurredTable();

        public static unsafe (Action<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipScreenCapture, object>>, Action<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipScreenCapture, object>>) Get_FatalErrorOccurred(IObjectReference _obj, object _thisObj)
        {
            var eventSource = _FatalErrorOccurred.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Telegram_Native_Calls_VoipScreenCapture__object_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out global::WinRT.EventRegistrationToken, int>**)ThisPtr)[6],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[7],
                0);
            });
            return eventSource.EventActions;
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipScreenCapture, bool>>> _Paused_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipScreenCapture, bool>>> MakePausedTable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _Paused_, new(), null);
            return _Paused_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipScreenCapture, bool>>> _Paused => _Paused_ ?? MakePausedTable();

        public static unsafe (Action<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipScreenCapture, bool>>, Action<global::Windows.Foundation.TypedEventHandler<global::Telegram.Native.Calls.VoipScreenCapture, bool>>) Get_Paused(IObjectReference _obj, object _thisObj)
        {
            var eventSource = _Paused.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Telegram_Native_Calls_VoipScreenCapture__bool_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out global::WinRT.EventRegistrationToken, int>**)ThisPtr)[8],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[9],
                1);
            });
            return eventSource.EventActions;
        }

    }
    [Guid("818A0058-CA5E-5859-B2BA-A0FC6EB9111A")]
    internal interface IVoipScreenCapture : global::Telegram.Native.Calls.IVoipScreenCapture
    {
    }
    internal static class IVoipScreenCaptureFactoryMethods
    {

        public static unsafe global::Telegram.Native.Calls.VoipScreenCapture CreateInstance(IObjectReference _obj, global::Windows.Graphics.Capture.GraphicsCaptureItem item)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __item = default;
            IntPtr __retval = default;
            try
            {
                __item = global::ABI.Windows.Graphics.Capture.GraphicsCaptureItem.CreateMarshaler2(item);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__item), out __retval));
                return global::ABI.Telegram.Native.Calls.VoipScreenCapture.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__item);
                global::ABI.Telegram.Native.Calls.VoipScreenCapture.DisposeAbi(__retval);
            }
        }

    }
    [Guid("258E2794-9166-5238-8BC6-C35A3F39AB0D")]
    internal interface IVoipScreenCaptureFactory : global::Telegram.Native.Calls.IVoipScreenCaptureFactory
    {
    }
    internal static class IVoipScreenCaptureStaticsMethods
    {

        public static unsafe bool IsSupported(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out byte, int>**)ThisPtr)[6](ThisPtr, out __retval));
            return __retval != 0;
        }

    }
    [Guid("D231D584-6AEB-542F-B78C-F4B91E685F93")]
    internal interface IVoipScreenCaptureStatics : global::Telegram.Native.Calls.IVoipScreenCaptureStatics
    {
    }
    internal static class IVoipVideoCaptureMethods
    {

        public static unsafe void SwitchToDevice(IObjectReference _obj, string deviceId)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __deviceId = new(deviceId);
            fixed(void* ___deviceId = __deviceId)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __deviceId)));
            }
        }

        public static unsafe void SetPreferredAspectRatio(IObjectReference _obj, float aspectRatio)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, float, int>**)ThisPtr)[7](ThisPtr, aspectRatio));
        }

    }
    [Guid("D853281C-39C1-5E7C-9835-93AD18471ED5")]
    internal interface IVoipVideoCapture : global::Telegram.Native.Calls.IVoipVideoCapture
    {
    }
    internal static class IVoipVideoCaptureFactoryMethods
    {

        public static unsafe global::Telegram.Native.Calls.VoipVideoCapture CreateInstance(IObjectReference _obj, string id)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __id = new(id);
                fixed(void* ___id = __id)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __id), out __retval));
                    return global::ABI.Telegram.Native.Calls.VoipVideoCapture.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Telegram.Native.Calls.VoipVideoCapture.DisposeAbi(__retval);
            }
        }

    }
    [Guid("7D44A034-ED4C-5398-BF0E-3FE1AC6B7998")]
    internal interface IVoipVideoCaptureFactory : global::Telegram.Native.Calls.IVoipVideoCaptureFactory
    {
    }
    internal static class IVoipVideoChannelInfoMethods
    {
        public static unsafe int get_AudioSource(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out int, int>**)ThisPtr)[6](ThisPtr, out __retval));
            return __retval;
        }
        public static unsafe void set_AudioSource(IObjectReference _obj, int value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, int>**)ThisPtr)[7](ThisPtr, value));
        }

        public static unsafe string get_EndpointId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[8](ThisPtr, out __retval));
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        public static unsafe void set_EndpointId(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalString.GetAbi(ref __value)));
            }
        }

        public static unsafe global::Telegram.Native.Calls.VoipVideoChannelQuality get_MaxQuality(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Telegram.Native.Calls.VoipVideoChannelQuality __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Telegram.Native.Calls.VoipVideoChannelQuality, int>**)ThisPtr)[14](ThisPtr, out __retval));
            return __retval;
        }
        public static unsafe void set_MaxQuality(IObjectReference _obj, global::Telegram.Native.Calls.VoipVideoChannelQuality value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Telegram.Native.Calls.VoipVideoChannelQuality, int>**)ThisPtr)[15](ThisPtr, value));
        }

        public static unsafe global::Telegram.Native.Calls.VoipVideoChannelQuality get_MinQuality(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Telegram.Native.Calls.VoipVideoChannelQuality __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Telegram.Native.Calls.VoipVideoChannelQuality, int>**)ThisPtr)[12](ThisPtr, out __retval));
            return __retval;
        }
        public static unsafe void set_MinQuality(IObjectReference _obj, global::Telegram.Native.Calls.VoipVideoChannelQuality value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Telegram.Native.Calls.VoipVideoChannelQuality, int>**)ThisPtr)[13](ThisPtr, value));
        }

        public static unsafe global::System.Collections.Generic.IList<global::Telegram.Td.Api.GroupCallVideoSourceGroup> get_SourceGroups(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[10](ThisPtr, out __retval));
                return MarshalInterface<global::System.Collections.Generic.IList<global::Telegram.Td.Api.GroupCallVideoSourceGroup>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IList<global::Telegram.Td.Api.GroupCallVideoSourceGroup>>.DisposeAbi(__retval);
            }
        }
        public static unsafe void set_SourceGroups(IObjectReference _obj, global::System.Collections.Generic.IList<global::Telegram.Td.Api.GroupCallVideoSourceGroup> value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::System.Collections.Generic.IList<global::Telegram.Td.Api.GroupCallVideoSourceGroup>>.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[11](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }


    }
    [Guid("AE59C23F-D6FB-56CA-882F-DA846BFF98D5")]
    internal interface IVoipVideoChannelInfo : global::Telegram.Native.Calls.IVoipVideoChannelInfo
    {
    }
    internal static class IVoipVideoChannelInfoFactoryMethods
    {

        public static unsafe global::Telegram.Native.Calls.VoipVideoChannelInfo CreateInstance(IObjectReference _obj, int audioSource, string endpointId, global::System.Collections.Generic.IList<global::Telegram.Td.Api.GroupCallVideoSourceGroup> sourceGroups, global::Telegram.Native.Calls.VoipVideoChannelQuality minQuality, global::Telegram.Native.Calls.VoipVideoChannelQuality maxQuality)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __sourceGroups = default;
            IntPtr __retval = default;
            try
            {
                __sourceGroups = MarshalInterface<global::System.Collections.Generic.IList<global::Telegram.Td.Api.GroupCallVideoSourceGroup>>.CreateMarshaler2(sourceGroups);
                MarshalString.Pinnable __endpointId = new(endpointId);
                fixed(void* ___endpointId = __endpointId)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int, IntPtr, IntPtr, global::Telegram.Native.Calls.VoipVideoChannelQuality, global::Telegram.Native.Calls.VoipVideoChannelQuality, out IntPtr, int>**)ThisPtr)[6](ThisPtr, audioSource, MarshalString.GetAbi(ref __endpointId), MarshalInspectable<object>.GetAbi(__sourceGroups), minQuality, maxQuality, out __retval));
                    return global::ABI.Telegram.Native.Calls.VoipVideoChannelInfo.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__sourceGroups);
                global::ABI.Telegram.Native.Calls.VoipVideoChannelInfo.DisposeAbi(__retval);
            }
        }

        public static unsafe global::Telegram.Native.Calls.VoipVideoChannelInfo CreateInstance2(IObjectReference _obj, global::Telegram.Native.Calls.VoipVideoRendererToken token, global::Telegram.Native.Calls.VoipVideoChannelQuality minQuality, global::Telegram.Native.Calls.VoipVideoChannelQuality maxQuality)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __token = default;
            IntPtr __retval = default;
            try
            {
                __token = global::ABI.Telegram.Native.Calls.VoipVideoRendererToken.CreateMarshaler2(token);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Telegram.Native.Calls.VoipVideoChannelQuality, global::Telegram.Native.Calls.VoipVideoChannelQuality, out IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__token), minQuality, maxQuality, out __retval));
                return global::ABI.Telegram.Native.Calls.VoipVideoChannelInfo.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__token);
                global::ABI.Telegram.Native.Calls.VoipVideoChannelInfo.DisposeAbi(__retval);
            }
        }

    }
    [Guid("C7135A80-0166-5BCA-B00E-1766C67E5566")]
    internal interface IVoipVideoChannelInfoFactory : global::Telegram.Native.Calls.IVoipVideoChannelInfoFactory
    {
    }
    internal static class IVoipVideoRendererTokenMethods
    {

        public static unsafe bool IsMatch(IObjectReference _obj, string endpointId, global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl canvasControl)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __canvasControl = default;
            byte __retval = default;
            try
            {
                __canvasControl = global::ABI.Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl.CreateMarshaler2(canvasControl);
                MarshalString.Pinnable __endpointId = new(endpointId);
                fixed(void* ___endpointId = __endpointId)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, out byte, int>**)ThisPtr)[13](ThisPtr, MarshalString.GetAbi(ref __endpointId), MarshalInspectable<object>.GetAbi(__canvasControl), out __retval));
                    return __retval != 0;
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__canvasControl);
            }
        }

        public static unsafe void Stop(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[14](ThisPtr));
        }
        public static unsafe int get_AudioSource(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out int, int>**)ThisPtr)[6](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe string get_EndpointId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[7](ThisPtr, out __retval));
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        public static unsafe bool get_IsMirrored(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out byte, int>**)ThisPtr)[11](ThisPtr, out __retval));
            return __retval != 0;
        }
        public static unsafe void set_IsMirrored(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[12](ThisPtr, (byte)(value ? 1 : 0)));
        }

        public static unsafe global::System.Collections.Generic.IList<global::Telegram.Td.Api.GroupCallVideoSourceGroup> get_SourceGroups(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[8](ThisPtr, out __retval));
                return MarshalInterface<global::System.Collections.Generic.IList<global::Telegram.Td.Api.GroupCallVideoSourceGroup>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IList<global::Telegram.Td.Api.GroupCallVideoSourceGroup>>.DisposeAbi(__retval);
            }
        }

        public static unsafe global::Microsoft.UI.Xaml.Media.Stretch get_Stretch(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Microsoft.UI.Xaml.Media.Stretch __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::Microsoft.UI.Xaml.Media.Stretch, int>**)ThisPtr)[9](ThisPtr, out __retval));
            return __retval;
        }
        public static unsafe void set_Stretch(IObjectReference _obj, global::Microsoft.UI.Xaml.Media.Stretch value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Microsoft.UI.Xaml.Media.Stretch, int>**)ThisPtr)[10](ThisPtr, value));
        }


    }
    [Guid("228AE1A1-33CB-5C54-B4D3-CDFC0A56B4D8")]
    internal interface IVoipVideoRendererToken : global::Telegram.Native.Calls.IVoipVideoRendererToken
    {
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct RemoteMediaStateUpdatedEventArgs
    {

        public static IObjectReference CreateMarshaler(global::Telegram.Native.Calls.RemoteMediaStateUpdatedEventArgs obj) => obj is null ? null : MarshalInspectable<global::Telegram.Native.Calls.RemoteMediaStateUpdatedEventArgs>.CreateMarshaler<IUnknownVftbl>(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Calls.IRemoteMediaStateUpdatedEventArgs).GetHelperType()));
        public static ObjectReferenceValue CreateMarshaler2(global::Telegram.Native.Calls.RemoteMediaStateUpdatedEventArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Calls.IRemoteMediaStateUpdatedEventArgs).GetHelperType()));
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Telegram.Native.Calls.RemoteMediaStateUpdatedEventArgs FromAbi(IntPtr thisPtr) => global::Telegram.Native.Calls.RemoteMediaStateUpdatedEventArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Telegram.Native.Calls.RemoteMediaStateUpdatedEventArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Telegram.Native.Calls.RemoteMediaStateUpdatedEventArgs>.MarshalerArray CreateMarshalerArray(global::Telegram.Native.Calls.RemoteMediaStateUpdatedEventArgs[] array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.RemoteMediaStateUpdatedEventArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Calls.RemoteMediaStateUpdatedEventArgs>.GetAbiArray(box);
        public static unsafe global::Telegram.Native.Calls.RemoteMediaStateUpdatedEventArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Calls.RemoteMediaStateUpdatedEventArgs>.FromAbiArray(box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Telegram.Native.Calls.RemoteMediaStateUpdatedEventArgs[] array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.RemoteMediaStateUpdatedEventArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Telegram.Native.Calls.RemoteMediaStateUpdatedEventArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.RemoteMediaStateUpdatedEventArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SignalingDataEmittedEventArgs
    {

        public static IObjectReference CreateMarshaler(global::Telegram.Native.Calls.SignalingDataEmittedEventArgs obj) => obj is null ? null : MarshalInspectable<global::Telegram.Native.Calls.SignalingDataEmittedEventArgs>.CreateMarshaler<IUnknownVftbl>(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Calls.ISignalingDataEmittedEventArgs).GetHelperType()));
        public static ObjectReferenceValue CreateMarshaler2(global::Telegram.Native.Calls.SignalingDataEmittedEventArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Calls.ISignalingDataEmittedEventArgs).GetHelperType()));
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Telegram.Native.Calls.SignalingDataEmittedEventArgs FromAbi(IntPtr thisPtr) => global::Telegram.Native.Calls.SignalingDataEmittedEventArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Telegram.Native.Calls.SignalingDataEmittedEventArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Telegram.Native.Calls.SignalingDataEmittedEventArgs>.MarshalerArray CreateMarshalerArray(global::Telegram.Native.Calls.SignalingDataEmittedEventArgs[] array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.SignalingDataEmittedEventArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Calls.SignalingDataEmittedEventArgs>.GetAbiArray(box);
        public static unsafe global::Telegram.Native.Calls.SignalingDataEmittedEventArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Calls.SignalingDataEmittedEventArgs>.FromAbiArray(box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Telegram.Native.Calls.SignalingDataEmittedEventArgs[] array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.SignalingDataEmittedEventArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Telegram.Native.Calls.SignalingDataEmittedEventArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.SignalingDataEmittedEventArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct VoipCaptureBase
    {

        public static IObjectReference CreateMarshaler(global::Telegram.Native.Calls.VoipCaptureBase obj) => obj is null ? null : MarshalInspectable<global::Telegram.Native.Calls.VoipCaptureBase>.CreateMarshaler<IUnknownVftbl>(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Calls.IVoipCaptureBase).GetHelperType()));
        public static ObjectReferenceValue CreateMarshaler2(global::Telegram.Native.Calls.VoipCaptureBase obj) => MarshalInspectable<object>.CreateMarshaler2(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Calls.IVoipCaptureBase).GetHelperType()));
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Telegram.Native.Calls.VoipCaptureBase FromAbi(IntPtr thisPtr) => global::Telegram.Native.Calls.VoipCaptureBase.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Telegram.Native.Calls.VoipCaptureBase obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipCaptureBase>.MarshalerArray CreateMarshalerArray(global::Telegram.Native.Calls.VoipCaptureBase[] array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipCaptureBase>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipCaptureBase>.GetAbiArray(box);
        public static unsafe global::Telegram.Native.Calls.VoipCaptureBase[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipCaptureBase>.FromAbiArray(box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Telegram.Native.Calls.VoipCaptureBase[] array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipCaptureBase>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipCaptureBase>.MarshalerArray array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipCaptureBase>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct VoipDescriptor
    {

        public static IObjectReference CreateMarshaler(global::Telegram.Native.Calls.VoipDescriptor obj) => obj is null ? null : MarshalInspectable<global::Telegram.Native.Calls.VoipDescriptor>.CreateMarshaler<IUnknownVftbl>(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Calls.IVoipDescriptor).GetHelperType()));
        public static ObjectReferenceValue CreateMarshaler2(global::Telegram.Native.Calls.VoipDescriptor obj) => MarshalInspectable<object>.CreateMarshaler2(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Calls.IVoipDescriptor).GetHelperType()));
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Telegram.Native.Calls.VoipDescriptor FromAbi(IntPtr thisPtr) => global::Telegram.Native.Calls.VoipDescriptor.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Telegram.Native.Calls.VoipDescriptor obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipDescriptor>.MarshalerArray CreateMarshalerArray(global::Telegram.Native.Calls.VoipDescriptor[] array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipDescriptor>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipDescriptor>.GetAbiArray(box);
        public static unsafe global::Telegram.Native.Calls.VoipDescriptor[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipDescriptor>.FromAbiArray(box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Telegram.Native.Calls.VoipDescriptor[] array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipDescriptor>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipDescriptor>.MarshalerArray array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipDescriptor>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct VoipGroupDescriptor
    {

        public static IObjectReference CreateMarshaler(global::Telegram.Native.Calls.VoipGroupDescriptor obj) => obj is null ? null : MarshalInspectable<global::Telegram.Native.Calls.VoipGroupDescriptor>.CreateMarshaler<IUnknownVftbl>(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Calls.IVoipGroupDescriptor).GetHelperType()));
        public static ObjectReferenceValue CreateMarshaler2(global::Telegram.Native.Calls.VoipGroupDescriptor obj) => MarshalInspectable<object>.CreateMarshaler2(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Calls.IVoipGroupDescriptor).GetHelperType()));
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Telegram.Native.Calls.VoipGroupDescriptor FromAbi(IntPtr thisPtr) => global::Telegram.Native.Calls.VoipGroupDescriptor.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Telegram.Native.Calls.VoipGroupDescriptor obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipGroupDescriptor>.MarshalerArray CreateMarshalerArray(global::Telegram.Native.Calls.VoipGroupDescriptor[] array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipGroupDescriptor>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipGroupDescriptor>.GetAbiArray(box);
        public static unsafe global::Telegram.Native.Calls.VoipGroupDescriptor[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipGroupDescriptor>.FromAbiArray(box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Telegram.Native.Calls.VoipGroupDescriptor[] array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipGroupDescriptor>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipGroupDescriptor>.MarshalerArray array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipGroupDescriptor>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct VoipGroupManager
    {

        public static IObjectReference CreateMarshaler(global::Telegram.Native.Calls.VoipGroupManager obj) => obj is null ? null : MarshalInspectable<global::Telegram.Native.Calls.VoipGroupManager>.CreateMarshaler<IUnknownVftbl>(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Calls.IVoipGroupManager).GetHelperType()));
        public static ObjectReferenceValue CreateMarshaler2(global::Telegram.Native.Calls.VoipGroupManager obj) => MarshalInspectable<object>.CreateMarshaler2(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Calls.IVoipGroupManager).GetHelperType()));
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Telegram.Native.Calls.VoipGroupManager FromAbi(IntPtr thisPtr) => global::Telegram.Native.Calls.VoipGroupManager.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Telegram.Native.Calls.VoipGroupManager obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipGroupManager>.MarshalerArray CreateMarshalerArray(global::Telegram.Native.Calls.VoipGroupManager[] array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipGroupManager>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipGroupManager>.GetAbiArray(box);
        public static unsafe global::Telegram.Native.Calls.VoipGroupManager[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipGroupManager>.FromAbiArray(box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Telegram.Native.Calls.VoipGroupManager[] array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipGroupManager>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipGroupManager>.MarshalerArray array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipGroupManager>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct VoipGroupParticipant
    {
        public int AudioSource;
        public float Level;
        public byte IsSpeaking;
        public byte IsMuted;

        public struct Marshaler
        {
            public VoipGroupParticipant __abi;
        }

        public static Marshaler CreateMarshaler(global::Telegram.Native.Calls.VoipGroupParticipant arg)
        {
            var m = new Marshaler();
            m.__abi = new VoipGroupParticipant()
            {
                AudioSource = arg.AudioSource
                , Level = arg.Level
                , IsSpeaking = (byte)(arg.IsSpeaking ? 1 : 0)
                , IsMuted = (byte)(arg.IsMuted ? 1 : 0)
            };

            return m;}

        public static VoipGroupParticipant GetAbi(Marshaler m) => m.__abi;

        public static global::Telegram.Native.Calls.VoipGroupParticipant FromAbi(VoipGroupParticipant arg)
        {
            return new global::Telegram.Native.Calls.VoipGroupParticipant()
            {
                AudioSource = arg.AudioSource
                , Level = arg.Level
                , IsSpeaking = arg.IsSpeaking != 0
                , IsMuted = arg.IsMuted != 0
            };
        }

        public static VoipGroupParticipant FromManaged(global::Telegram.Native.Calls.VoipGroupParticipant arg)
        {
            return new VoipGroupParticipant()
            {
                AudioSource = arg.AudioSource
                , Level = arg.Level
                , IsSpeaking = (byte)(arg.IsSpeaking ? 1 : 0)
                , IsMuted = (byte)(arg.IsMuted ? 1 : 0)
            };
        }

        public static unsafe void CopyAbi(Marshaler arg, IntPtr dest) => 
            *(VoipGroupParticipant*)dest.ToPointer() = GetAbi(arg);

        public static unsafe void CopyManaged(global::Telegram.Native.Calls.VoipGroupParticipant arg, IntPtr dest) =>
            *(VoipGroupParticipant*)dest.ToPointer() = FromManaged(arg);

        public static void DisposeMarshaler(Marshaler m) {}

        public static void DisposeAbi(VoipGroupParticipant abi)
        {
        }
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct VoipManager
    {

        public static IObjectReference CreateMarshaler(global::Telegram.Native.Calls.VoipManager obj) => obj is null ? null : MarshalInspectable<global::Telegram.Native.Calls.VoipManager>.CreateMarshaler<IUnknownVftbl>(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Calls.IVoipManager).GetHelperType()));
        public static ObjectReferenceValue CreateMarshaler2(global::Telegram.Native.Calls.VoipManager obj) => MarshalInspectable<object>.CreateMarshaler2(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Calls.IVoipManager).GetHelperType()));
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Telegram.Native.Calls.VoipManager FromAbi(IntPtr thisPtr) => global::Telegram.Native.Calls.VoipManager.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Telegram.Native.Calls.VoipManager obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipManager>.MarshalerArray CreateMarshalerArray(global::Telegram.Native.Calls.VoipManager[] array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipManager>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipManager>.GetAbiArray(box);
        public static unsafe global::Telegram.Native.Calls.VoipManager[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipManager>.FromAbiArray(box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Telegram.Native.Calls.VoipManager[] array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipManager>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipManager>.MarshalerArray array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipManager>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct VoipScreenCapture
    {

        public static IObjectReference CreateMarshaler(global::Telegram.Native.Calls.VoipScreenCapture obj) => obj is null ? null : MarshalInspectable<global::Telegram.Native.Calls.VoipScreenCapture>.CreateMarshaler<IUnknownVftbl>(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Calls.IVoipScreenCapture).GetHelperType()));
        public static ObjectReferenceValue CreateMarshaler2(global::Telegram.Native.Calls.VoipScreenCapture obj) => MarshalInspectable<object>.CreateMarshaler2(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Calls.IVoipScreenCapture).GetHelperType()));
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Telegram.Native.Calls.VoipScreenCapture FromAbi(IntPtr thisPtr) => global::Telegram.Native.Calls.VoipScreenCapture.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Telegram.Native.Calls.VoipScreenCapture obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipScreenCapture>.MarshalerArray CreateMarshalerArray(global::Telegram.Native.Calls.VoipScreenCapture[] array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipScreenCapture>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipScreenCapture>.GetAbiArray(box);
        public static unsafe global::Telegram.Native.Calls.VoipScreenCapture[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipScreenCapture>.FromAbiArray(box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Telegram.Native.Calls.VoipScreenCapture[] array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipScreenCapture>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipScreenCapture>.MarshalerArray array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipScreenCapture>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct VoipVideoCapture
    {

        public static IObjectReference CreateMarshaler(global::Telegram.Native.Calls.VoipVideoCapture obj) => obj is null ? null : MarshalInspectable<global::Telegram.Native.Calls.VoipVideoCapture>.CreateMarshaler<IUnknownVftbl>(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Calls.IVoipVideoCapture).GetHelperType()));
        public static ObjectReferenceValue CreateMarshaler2(global::Telegram.Native.Calls.VoipVideoCapture obj) => MarshalInspectable<object>.CreateMarshaler2(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Calls.IVoipVideoCapture).GetHelperType()));
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Telegram.Native.Calls.VoipVideoCapture FromAbi(IntPtr thisPtr) => global::Telegram.Native.Calls.VoipVideoCapture.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Telegram.Native.Calls.VoipVideoCapture obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipVideoCapture>.MarshalerArray CreateMarshalerArray(global::Telegram.Native.Calls.VoipVideoCapture[] array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipVideoCapture>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipVideoCapture>.GetAbiArray(box);
        public static unsafe global::Telegram.Native.Calls.VoipVideoCapture[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipVideoCapture>.FromAbiArray(box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Telegram.Native.Calls.VoipVideoCapture[] array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipVideoCapture>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipVideoCapture>.MarshalerArray array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipVideoCapture>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct VoipVideoChannelInfo
    {

        public static IObjectReference CreateMarshaler(global::Telegram.Native.Calls.VoipVideoChannelInfo obj) => obj is null ? null : MarshalInspectable<global::Telegram.Native.Calls.VoipVideoChannelInfo>.CreateMarshaler<IUnknownVftbl>(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Calls.IVoipVideoChannelInfo).GetHelperType()));
        public static ObjectReferenceValue CreateMarshaler2(global::Telegram.Native.Calls.VoipVideoChannelInfo obj) => MarshalInspectable<object>.CreateMarshaler2(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Calls.IVoipVideoChannelInfo).GetHelperType()));
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Telegram.Native.Calls.VoipVideoChannelInfo FromAbi(IntPtr thisPtr) => global::Telegram.Native.Calls.VoipVideoChannelInfo.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Telegram.Native.Calls.VoipVideoChannelInfo obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipVideoChannelInfo>.MarshalerArray CreateMarshalerArray(global::Telegram.Native.Calls.VoipVideoChannelInfo[] array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipVideoChannelInfo>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipVideoChannelInfo>.GetAbiArray(box);
        public static unsafe global::Telegram.Native.Calls.VoipVideoChannelInfo[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipVideoChannelInfo>.FromAbiArray(box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Telegram.Native.Calls.VoipVideoChannelInfo[] array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipVideoChannelInfo>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipVideoChannelInfo>.MarshalerArray array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipVideoChannelInfo>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct VoipVideoRendererToken
    {

        public static IObjectReference CreateMarshaler(global::Telegram.Native.Calls.VoipVideoRendererToken obj) => obj is null ? null : MarshalInspectable<global::Telegram.Native.Calls.VoipVideoRendererToken>.CreateMarshaler<IUnknownVftbl>(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Calls.IVoipVideoRendererToken).GetHelperType()));
        public static ObjectReferenceValue CreateMarshaler2(global::Telegram.Native.Calls.VoipVideoRendererToken obj) => MarshalInspectable<object>.CreateMarshaler2(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Calls.IVoipVideoRendererToken).GetHelperType()));
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Telegram.Native.Calls.VoipVideoRendererToken FromAbi(IntPtr thisPtr) => global::Telegram.Native.Calls.VoipVideoRendererToken.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Telegram.Native.Calls.VoipVideoRendererToken obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipVideoRendererToken>.MarshalerArray CreateMarshalerArray(global::Telegram.Native.Calls.VoipVideoRendererToken[] array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipVideoRendererToken>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipVideoRendererToken>.GetAbiArray(box);
        public static unsafe global::Telegram.Native.Calls.VoipVideoRendererToken[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipVideoRendererToken>.FromAbiArray(box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Telegram.Native.Calls.VoipVideoRendererToken[] array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipVideoRendererToken>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipVideoRendererToken>.MarshalerArray array) => MarshalInterfaceHelper<global::Telegram.Native.Calls.VoipVideoRendererToken>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
}
#pragma warning restore CA1416
