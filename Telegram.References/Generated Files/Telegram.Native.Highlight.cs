//------------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by cswinrt.exe version 2.0.3.230608.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using WinRT;
using WinRT.Interop;


#pragma warning disable 0169 // warning CS0169: The field '...' is never used
#pragma warning disable 0649 // warning CS0169: Field '...' is never assigned to
#pragma warning disable CA2207, CA1063, CA1033, CA1001, CA2213

namespace Telegram.Native.Highlight
{
    [global::WinRT.WindowsRuntimeType("Telegram.Native")][Guid("AA4F123A-516B-50A5-B12D-7033559B7AB4")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Highlight.ISyntaxToken))]
    internal interface ISyntaxToken
    {
        string Alias { get; }
        global::System.Collections.Generic.IList<Token> Children { get; }
        string Type { get; }
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native")][Guid("86AE2B07-8D3E-52D7-A998-D3479ACC5FCA")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Highlight.ISyntaxTokenStatics))]
    internal interface ISyntaxTokenStatics
    {
        SyntaxToken Tokenize(string language, string coddiri);
        global::Windows.Foundation.IAsyncOperation<SyntaxToken> TokenizeAsync(string language, string coddiri);
        string GetLanguageName(string languageCode);
        global::System.Collections.Generic.IList<string> Languages { get; }
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native")][Guid("9E950F52-4937-535D-94F3-BFA47B97679C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Highlight.ITextToken))]
    internal interface ITextToken
    {
        string Value { get; }
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native")][Guid("36E66F20-E535-507B-A76B-6E2BE8EA1365")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Highlight.IToken))]
    internal interface IToken
    {
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native")][Guid("C32B1E96-24CF-5499-9C5E-7395D8D878D4")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Highlight.ITokenFactory))]
    internal interface ITokenFactory
    {
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Highlight.SyntaxToken))]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISyntaxToken))]
    [global::WinRT.ObjectReferenceWrapper(nameof(_inner))]
    public sealed class SyntaxToken : Token, global::Windows.Foundation.IStringable, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SyntaxToken>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private IObjectReference _inner = null;



        private IObjectReference _objRef_global__Telegram_Native_Highlight_ISyntaxToken => _inner;
        private volatile IObjectReference ___objRef_global__Windows_Foundation_IStringable;
        private IObjectReference Make___objRef_global__Windows_Foundation_IStringable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Windows_Foundation_IStringable, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(GuidGenerator.GetIID(typeof(global::Windows.Foundation.IStringable).GetHelperType())), null);
            return ___objRef_global__Windows_Foundation_IStringable;
        }
        private IObjectReference _objRef_global__Windows_Foundation_IStringable => ___objRef_global__Windows_Foundation_IStringable ?? Make___objRef_global__Windows_Foundation_IStringable();

        private ISyntaxToken _default => null;

        public static I As<I>() => ActivationFactory<SyntaxToken>.AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Telegram_Native_Highlight_ISyntaxTokenStatics;
        private static IObjectReference Make___objRef_global__Telegram_Native_Highlight_ISyntaxTokenStatics()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Telegram_Native_Highlight_ISyntaxTokenStatics, ActivationFactory<SyntaxToken>.As(GuidGenerator.GetIID(typeof(ISyntaxTokenStatics).GetHelperType())), null);
            return ___objRef_global__Telegram_Native_Highlight_ISyntaxTokenStatics;
        }
        private static IObjectReference _objRef_global__Telegram_Native_Highlight_ISyntaxTokenStatics => ___objRef_global__Telegram_Native_Highlight_ISyntaxTokenStatics ?? Make___objRef_global__Telegram_Native_Highlight_ISyntaxTokenStatics();



        public static SyntaxToken Tokenize(string language, string coddiri) => global::ABI.Telegram.Native.Highlight.ISyntaxTokenStaticsMethods.Tokenize(_objRef_global__Telegram_Native_Highlight_ISyntaxTokenStatics, language, coddiri);

        public static global::Windows.Foundation.IAsyncOperation<SyntaxToken> TokenizeAsync(string language, string coddiri) => global::ABI.Telegram.Native.Highlight.ISyntaxTokenStaticsMethods.TokenizeAsync(_objRef_global__Telegram_Native_Highlight_ISyntaxTokenStatics, language, coddiri);

        public static string GetLanguageName(string languageCode) => global::ABI.Telegram.Native.Highlight.ISyntaxTokenStaticsMethods.GetLanguageName(_objRef_global__Telegram_Native_Highlight_ISyntaxTokenStatics, languageCode);

        public static global::System.Collections.Generic.IList<string> Languages => global::ABI.Telegram.Native.Highlight.ISyntaxTokenStaticsMethods.get_Languages(_objRef_global__Telegram_Native_Highlight_ISyntaxTokenStatics);

        public static new SyntaxToken FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SyntaxToken>.FromAbi(thisPtr);
        }

        internal SyntaxToken(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(GuidGenerator.GetIID(typeof(ISyntaxToken).GetHelperType()));

        }

        public static bool operator ==(SyntaxToken x, SyntaxToken y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SyntaxToken x, SyntaxToken y) => !(x == y);
        public bool Equals(SyntaxToken other) => this == other;
        public override bool Equals(object obj) => obj is SyntaxToken that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
        public override string ToString() => global::ABI.Windows.Foundation.IStringableMethods.ToString(_objRef_global__Windows_Foundation_IStringable);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
        string global::Windows.Foundation.IStringable.ToString() => ToString();
        public string Alias => global::ABI.Telegram.Native.Highlight.ISyntaxTokenMethods.get_Alias(_objRef_global__Telegram_Native_Highlight_ISyntaxToken);

        public global::System.Collections.Generic.IList<Token> Children => global::ABI.Telegram.Native.Highlight.ISyntaxTokenMethods.get_Children(_objRef_global__Telegram_Native_Highlight_ISyntaxToken);

        public string Type => global::ABI.Telegram.Native.Highlight.ISyntaxTokenMethods.get_Type(_objRef_global__Telegram_Native_Highlight_ISyntaxToken);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.InterfaceIIDs.IInspectable_IID == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Highlight.TextToken))]
    [global::WinRT.ProjectedRuntimeClass(typeof(ITextToken))]
    [global::WinRT.ObjectReferenceWrapper(nameof(_inner))]
    public sealed class TextToken : Token, global::Windows.Foundation.IStringable, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<TextToken>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private IObjectReference _inner = null;



        private IObjectReference _objRef_global__Telegram_Native_Highlight_ITextToken => _inner;
        private volatile IObjectReference ___objRef_global__Windows_Foundation_IStringable;
        private IObjectReference Make___objRef_global__Windows_Foundation_IStringable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Windows_Foundation_IStringable, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(GuidGenerator.GetIID(typeof(global::Windows.Foundation.IStringable).GetHelperType())), null);
            return ___objRef_global__Windows_Foundation_IStringable;
        }
        private IObjectReference _objRef_global__Windows_Foundation_IStringable => ___objRef_global__Windows_Foundation_IStringable ?? Make___objRef_global__Windows_Foundation_IStringable();

        private ITextToken _default => null;

        public static new TextToken FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<TextToken>.FromAbi(thisPtr);
        }

        internal TextToken(IObjectReference objRef)
            : base(global::WinRT.DerivedComposed.Instance)

        {
            _inner = objRef.As(GuidGenerator.GetIID(typeof(ITextToken).GetHelperType()));

        }

        public static bool operator ==(TextToken x, TextToken y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(TextToken x, TextToken y) => !(x == y);
        public bool Equals(TextToken other) => this == other;
        public override bool Equals(object obj) => obj is TextToken that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;

        private struct InterfaceTag<I>{};


        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
        public override string ToString() => global::ABI.Windows.Foundation.IStringableMethods.ToString(_objRef_global__Windows_Foundation_IStringable);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
        string global::Windows.Foundation.IStringable.ToString() => ToString();
        public string Value => global::ABI.Telegram.Native.Highlight.ITextTokenMethods.get_Value(_objRef_global__Telegram_Native_Highlight_ITextToken);

        protected override bool IsOverridableInterface(Guid iid) => base.IsOverridableInterface(iid);

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.InterfaceIIDs.IInspectable_IID == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Telegram.Native")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Telegram.Native.Highlight.Token))]
    [global::WinRT.ProjectedRuntimeClass(typeof(IToken))]
    [global::WinRT.ObjectReferenceWrapper(nameof(_inner))]
    public class Token : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<Token>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private IObjectReference _inner = null;




        private volatile IObjectReference ___objRef_global__Telegram_Native_Highlight_IToken;
        private IObjectReference Make___objRef_global__Telegram_Native_Highlight_IToken()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Telegram_Native_Highlight_IToken, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(GuidGenerator.GetIID(typeof(IToken).GetHelperType())), null);
            return ___objRef_global__Telegram_Native_Highlight_IToken;
        }
        private IObjectReference _objRef_global__Telegram_Native_Highlight_IToken => ___objRef_global__Telegram_Native_Highlight_IToken ?? Make___objRef_global__Telegram_Native_Highlight_IToken();

        private IToken _default => null;

        internal sealed class _ITokenFactory : IWinRTObject
        {
            private IObjectReference _obj;
            private IntPtr ThisPtr => _obj.ThisPtr;
            public _ITokenFactory()
            {
                _obj = ActivationFactory<Token>.As(GuidGenerator.GetIID(typeof(Telegram.Native.Highlight.ITokenFactory).GetHelperType()));
            }

            private static _ITokenFactory _instance = new _ITokenFactory();
            internal static _ITokenFactory Instance => _instance;

            IObjectReference IWinRTObject.NativeObject => _obj;
            bool IWinRTObject.HasUnwrappableNativeObject => false;
            private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
            private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
            {
                global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
                return _queryInterfaceCache;
            }
            global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
            private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
            private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
            {
                global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
                return _additionalTypeData;
            }
            global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();


        }

        public static Token FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<Token>.FromAbi(thisPtr);
        }

        protected internal Token(IObjectReference objRef)
        {
            _inner = objRef.As(GuidGenerator.GetIID(typeof(IToken).GetHelperType()));

        }

        public static bool operator ==(Token x, Token y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(Token x, Token y) => !(x == y);
        public bool Equals(Token other) => this == other;
        public override bool Equals(object obj) => obj is Token that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        protected Token(global::WinRT.DerivedComposed _)
        {

        }
        bool IWinRTObject.HasUnwrappableNativeObject => this.GetType() == typeof(Token);
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        protected virtual bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.InterfaceIIDs.IInspectable_IID == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
}

#pragma warning disable CA1416
namespace ABI.Telegram.Native.Highlight
{
    internal static class ISyntaxTokenMethods
    {
        public static unsafe string get_Alias(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[7](ThisPtr, out __retval));
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        public static unsafe global::System.Collections.Generic.IList<global::Telegram.Native.Highlight.Token> get_Children(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[8](ThisPtr, out __retval));
                return MarshalInterface<global::System.Collections.Generic.IList<global::Telegram.Native.Highlight.Token>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IList<global::Telegram.Native.Highlight.Token>>.DisposeAbi(__retval);
            }
        }

        public static unsafe string get_Type(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[6](ThisPtr, out __retval));
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }


    }
    [Guid("AA4F123A-516B-50A5-B12D-7033559B7AB4")]
    internal interface ISyntaxToken : global::Telegram.Native.Highlight.ISyntaxToken
    {
    }
    internal static class ISyntaxTokenStaticsMethods
    {

        public static unsafe global::Telegram.Native.Highlight.SyntaxToken Tokenize(IObjectReference _obj, string language, string coddiri)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __language = new(language);
                MarshalString.Pinnable __coddiri = new(coddiri);
                fixed(void* ___language = __language, ___coddiri = __coddiri)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, out IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalString.GetAbi(ref __language), MarshalString.GetAbi(ref __coddiri), out __retval));
                    return global::ABI.Telegram.Native.Highlight.SyntaxToken.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Telegram.Native.Highlight.SyntaxToken.DisposeAbi(__retval);
            }
        }

        public static unsafe global::Windows.Foundation.IAsyncOperation<global::Telegram.Native.Highlight.SyntaxToken> TokenizeAsync(IObjectReference _obj, string language, string coddiri)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __language = new(language);
                MarshalString.Pinnable __coddiri = new(coddiri);
                fixed(void* ___language = __language, ___coddiri = __coddiri)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, out IntPtr, int>**)ThisPtr)[8](ThisPtr, MarshalString.GetAbi(ref __language), MarshalString.GetAbi(ref __coddiri), out __retval));
                    return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Telegram.Native.Highlight.SyntaxToken>>.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Telegram.Native.Highlight.SyntaxToken>>.DisposeAbi(__retval);
            }
        }

        public static unsafe string GetLanguageName(IObjectReference _obj, string languageCode)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __languageCode = new(languageCode);
                fixed(void* ___languageCode = __languageCode)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalString.GetAbi(ref __languageCode), out __retval));
                    return MarshalString.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        public static unsafe global::System.Collections.Generic.IList<string> get_Languages(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[6](ThisPtr, out __retval));
                return MarshalInterface<global::System.Collections.Generic.IList<string>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IList<string>>.DisposeAbi(__retval);
            }
        }


    }
    [Guid("86AE2B07-8D3E-52D7-A998-D3479ACC5FCA")]
    internal interface ISyntaxTokenStatics : global::Telegram.Native.Highlight.ISyntaxTokenStatics
    {
    }
    internal static class ITextTokenMethods
    {
        public static unsafe string get_Value(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[6](ThisPtr, out __retval));
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }


    }
    [Guid("9E950F52-4937-535D-94F3-BFA47B97679C")]
    internal interface ITextToken : global::Telegram.Native.Highlight.ITextToken
    {
    }
    internal static class ITokenMethods
    {

    }
    [Guid("36E66F20-E535-507B-A76B-6E2BE8EA1365")]
    internal interface IToken : global::Telegram.Native.Highlight.IToken
    {
    }
    internal static class ITokenFactoryMethods
    {

    }
    [Guid("C32B1E96-24CF-5499-9C5E-7395D8D878D4")]
    internal interface ITokenFactory : global::Telegram.Native.Highlight.ITokenFactory
    {
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SyntaxToken
    {

        public static IObjectReference CreateMarshaler(global::Telegram.Native.Highlight.SyntaxToken obj) => obj is null ? null : MarshalInspectable<global::Telegram.Native.Highlight.SyntaxToken>.CreateMarshaler<IUnknownVftbl>(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Highlight.ISyntaxToken).GetHelperType()));
        public static ObjectReferenceValue CreateMarshaler2(global::Telegram.Native.Highlight.SyntaxToken obj) => MarshalInspectable<object>.CreateMarshaler2(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Highlight.ISyntaxToken).GetHelperType()));
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Telegram.Native.Highlight.SyntaxToken FromAbi(IntPtr thisPtr) => global::Telegram.Native.Highlight.SyntaxToken.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Telegram.Native.Highlight.SyntaxToken obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Telegram.Native.Highlight.SyntaxToken>.MarshalerArray CreateMarshalerArray(global::Telegram.Native.Highlight.SyntaxToken[] array) => MarshalInterfaceHelper<global::Telegram.Native.Highlight.SyntaxToken>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Highlight.SyntaxToken>.GetAbiArray(box);
        public static unsafe global::Telegram.Native.Highlight.SyntaxToken[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Highlight.SyntaxToken>.FromAbiArray(box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Telegram.Native.Highlight.SyntaxToken[] array) => MarshalInterfaceHelper<global::Telegram.Native.Highlight.SyntaxToken>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Telegram.Native.Highlight.SyntaxToken>.MarshalerArray array) => MarshalInterfaceHelper<global::Telegram.Native.Highlight.SyntaxToken>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct TextToken
    {

        public static IObjectReference CreateMarshaler(global::Telegram.Native.Highlight.TextToken obj) => obj is null ? null : MarshalInspectable<global::Telegram.Native.Highlight.TextToken>.CreateMarshaler<IUnknownVftbl>(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Highlight.ITextToken).GetHelperType()));
        public static ObjectReferenceValue CreateMarshaler2(global::Telegram.Native.Highlight.TextToken obj) => MarshalInspectable<object>.CreateMarshaler2(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Highlight.ITextToken).GetHelperType()));
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Telegram.Native.Highlight.TextToken FromAbi(IntPtr thisPtr) => global::Telegram.Native.Highlight.TextToken.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Telegram.Native.Highlight.TextToken obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Telegram.Native.Highlight.TextToken>.MarshalerArray CreateMarshalerArray(global::Telegram.Native.Highlight.TextToken[] array) => MarshalInterfaceHelper<global::Telegram.Native.Highlight.TextToken>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Highlight.TextToken>.GetAbiArray(box);
        public static unsafe global::Telegram.Native.Highlight.TextToken[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Highlight.TextToken>.FromAbiArray(box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Telegram.Native.Highlight.TextToken[] array) => MarshalInterfaceHelper<global::Telegram.Native.Highlight.TextToken>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Telegram.Native.Highlight.TextToken>.MarshalerArray array) => MarshalInterfaceHelper<global::Telegram.Native.Highlight.TextToken>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct Token
    {

        public static IObjectReference CreateMarshaler(global::Telegram.Native.Highlight.Token obj) => obj is null ? null : MarshalInspectable<global::Telegram.Native.Highlight.Token>.CreateMarshaler<IUnknownVftbl>(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Highlight.IToken).GetHelperType()));
        public static ObjectReferenceValue CreateMarshaler2(global::Telegram.Native.Highlight.Token obj) => MarshalInspectable<object>.CreateMarshaler2(obj, GuidGenerator.GetIID(typeof(global::Telegram.Native.Highlight.IToken).GetHelperType()));
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Telegram.Native.Highlight.Token FromAbi(IntPtr thisPtr) => global::Telegram.Native.Highlight.Token.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Telegram.Native.Highlight.Token obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Telegram.Native.Highlight.Token>.MarshalerArray CreateMarshalerArray(global::Telegram.Native.Highlight.Token[] array) => MarshalInterfaceHelper<global::Telegram.Native.Highlight.Token>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Highlight.Token>.GetAbiArray(box);
        public static unsafe global::Telegram.Native.Highlight.Token[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Telegram.Native.Highlight.Token>.FromAbiArray(box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Telegram.Native.Highlight.Token[] array) => MarshalInterfaceHelper<global::Telegram.Native.Highlight.Token>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Telegram.Native.Highlight.Token>.MarshalerArray array) => MarshalInterfaceHelper<global::Telegram.Native.Highlight.Token>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
}
#pragma warning restore CA1416
