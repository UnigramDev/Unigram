import "FatalError.idl";

namespace Telegram.Native
{
    delegate void FatalErrorCallback(FatalError error);

    enum TextDirectionality
    {
        Neutral,
        LeftToRight,
        RightToLeft
    };

    [default_interface]
    runtimeclass NativeUtils
    {
        static Boolean FileExists(String path);

        static Int64 GetDirectorySize(String path);
        static Int64 GetDirectorySize(String path, String filter);
        static void CleanDirectory(String path, Int32 days);
        static void Delete(String path);

        static Int32 GetLastInputTime();

        //[DefaultOverload]
        static TextDirectionality GetDirectionality(String value);
        static TextDirectionality GetDirectionality(String value, Int32 offset);
        static TextDirectionality GetDirectionality(String value, Int32 offset, Int32 length);
        //static Int32 GetDirectionality(char16 value);

        static String GetCurrentCulture();
        static String GetKeyboardCulture();

        static String FormatTime(Int32 value);
        static String FormatDate(Int32 value);

        [default_overload]
        static Boolean IsFileReadable(String path);
        static Boolean IsFileReadable(String path, out Int64 fileSize, out Int64 fileTime);

        static Boolean IsMediaSupported();

        static void OverrideScaleForCurrentView(Int32 value);
        static Int32 GetScaleForCurrentView();

        static void SetFatalErrorCallback(FatalErrorCallback action);
        static FatalError GetFatalError(Boolean onlyNative);
        static FatalError GetBackTrace(UInt64 code);

        static void Crash();



        static void GenerateGradient(Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap context, Windows.UI.Color[] colors, Windows.Foundation.Numerics.Vector2[] positions);
    }
} // namespace Telegram.Native
