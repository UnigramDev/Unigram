//
// Copyright Fela Ameghino 2015-2024
//
// Distributed under the GNU General Public License v3.0. (See accompanying
// file LICENSE or copy at https://www.gnu.org/licenses/gpl-3.0.txt)
//
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           7.1.0-build.5+g109463c06a
//       
//       Command:
//           LottieGen -DisableTranslationOptimizer -Language CSharp -MinimumUapVersion 8 -Public -WinUIVersion 2.7 -InputFile PersonAdd.json
//       
//       Input file:
//           PersonAdd.json (8303 bytes created 19:24+01:00 Mar 17 2022)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ___________________________________________________________
// |       Object stats       | UAP v11 count | UAP v7 count |
// |__________________________|_______________|______________|
// | All CompositionObjects   |            96 |           84 |
// |--------------------------+---------------+--------------|
// | Expression animators     |             3 |            2 |
// | KeyFrame animators       |             3 |            2 |
// | Reference parameters     |             3 |            2 |
// | Expression operations    |             0 |            0 |
// |--------------------------+---------------+--------------|
// | Animated brushes         |             - |            - |
// | Animated gradient stops  |             - |            - |
// | ExpressionAnimations     |             3 |            2 |
// | PathKeyFrameAnimations   |             1 |            - |
// |--------------------------+---------------+--------------|
// | ContainerVisuals         |             1 |            1 |
// | ShapeVisuals             |             1 |            1 |
// |--------------------------+---------------+--------------|
// | ContainerShapes          |            12 |           12 |
// | CompositionSpriteShapes  |             3 |            3 |
// |--------------------------+---------------+--------------|
// | Brushes                  |             3 |            3 |
// | Gradient stops           |             6 |            6 |
// | CompositionVisualSurface |             - |            - |
// -----------------------------------------------------------
using Microsoft.Graphics.Canvas.Geometry;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.Graphics;
using Windows.UI;
using Microsoft.UI;
using Microsoft.UI.Composition;

namespace Telegram.Assets.Icons
{
    // Name:        u_person_add
    // Frame rate:  60 fps
    // Frame count: 30
    // Duration:    500.0 mS
    sealed class PersonAdd
        : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
        , Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
    {
        // Animation duration: 0.500 seconds.
        internal const long c_durationTicks = 5000000;

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
        {
            object ignored = null;
            return TryCreateAnimatedVisual(compositor, out ignored);
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;

            if (PersonAdd_AnimatedVisual_UAPv11.IsRuntimeCompatible())
            {
                var res =
                    new PersonAdd_AnimatedVisual_UAPv11(
                        compositor
                        );
                res.CreateAnimations();
                return res;
            }

            if (PersonAdd_AnimatedVisual_UAPv7.IsRuntimeCompatible())
            {
                var res =
                    new PersonAdd_AnimatedVisual_UAPv7(
                        compositor
                        );
                res.CreateAnimations();
                return res;
            }

            return null;
        }

        /// <summary>
        /// Gets the number of frames in the animation.
        /// </summary>
        public double FrameCount => 30d;

        /// <summary>
        /// Gets the frame rate of the animation.
        /// </summary>
        public double Framerate => 60d;

        /// <summary>
        /// Gets the duration of the animation.
        /// </summary>
        public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);

        /// <summary>
        /// Converts a zero-based frame number to the corresponding progress value denoting the
        /// start of the frame.
        /// </summary>
        public double FrameToProgress(double frameNumber)
        {
            return frameNumber / 30d;
        }

        /// <summary>
        /// Returns a map from marker names to corresponding progress values.
        /// </summary>
        public IReadOnlyDictionary<string, double> Markers =>
            new Dictionary<string, double>
            {
                { "NormalToPointerOver_Start", 0.0 },
                { "NormalToPointerOver_End", 1 },
            };

        /// <summary>
        /// Sets the color property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetColorProperty(string propertyName, Color value)
        {
        }

        /// <summary>
        /// Sets the scalar property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetScalarProperty(string propertyName, double value)
        {
        }

        sealed class PersonAdd_AnimatedVisual_UAPv11 : Microsoft.UI.Xaml.Controls.IAnimatedVisual
        {
            const long c_durationTicks = 5000000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            CompositionPathGeometry _pathGeometry_2;
            CompositionSpriteShape _spriteShape_0;
            CompositionSpriteShape _spriteShape_1;
            ContainerVisual _root;
            StepEasingFunction _holdThenStepEasingFunction;

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            PathKeyFrameAnimation CreatePathKeyFrameAnimation(float initialProgress, CompositionPath initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreatePathKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            // - - - - - - - Layer aggregator
            // - - - - ShapeGroup: Ellipse 14
            // - - Path 1
            CanvasGeometry Geometry_00()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, -4F));
                    builder.AddCubicBezier(new Vector2(2.20900011F, -4F), new Vector2(4F, -2.20900011F), new Vector2(4F, 0F));
                    builder.AddCubicBezier(new Vector2(4F, 2.20900011F), new Vector2(2.20900011F, 4F), new Vector2(0F, 4F));
                    builder.AddCubicBezier(new Vector2(-2.20900011F, 4F), new Vector2(-4F, 2.20900011F), new Vector2(-4F, 0F));
                    builder.AddCubicBezier(new Vector2(-4F, -2.20900011F), new Vector2(-2.20900011F, -4F), new Vector2(0F, -4F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - Layer aggregator
            // - - - - ShapeGroup: Subtract
            // - - Path 1
            CanvasGeometry Geometry_01()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-1.12899995F, -3.5F));
                    builder.AddLine(new Vector2(4.12900019F, -3.5F));
                    builder.AddCubicBezier(new Vector2(3.3440001F, -2.54900002F), new Vector2(2.87100005F, -1.33000004F), new Vector2(2.87100005F, 0F));
                    builder.AddCubicBezier(new Vector2(2.87100005F, 1.273F), new Vector2(3.3039999F, 2.44400001F), new Vector2(4.03000021F, 3.37599993F));
                    builder.AddCubicBezier(new Vector2(3.51999998F, 3.45600009F), new Vector2(2.96700001F, 3.5F), new Vector2(2.37100005F, 3.5F));
                    builder.AddCubicBezier(new Vector2(-2.12899995F, 3.5F), new Vector2(-4.12900019F, 1F), new Vector2(-4.12900019F, -0.5F));
                    builder.AddCubicBezier(new Vector2(-4.12900019F, -1.43200004F), new Vector2(-4.12799978F, -1.89699996F), new Vector2(-3.97600007F, -2.2650001F));
                    builder.AddCubicBezier(new Vector2(-3.773F, -2.75500011F), new Vector2(-3.38400006F, -3.14499998F), new Vector2(-2.89400005F, -3.34800005F));
                    builder.AddCubicBezier(new Vector2(-2.52600002F, -3.5F), new Vector2(-2.06100011F, -3.5F), new Vector2(-1.12899995F, -3.5F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - Layer aggregator
            // - - - - - ShapeGroup: Shape
            // - - - Path 2+Path 1
            // - - Path 2+Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_02()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_03(), Geometry_04() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            // - - - - - - - - - Layer aggregator
            // - - - - - - ShapeGroup: Shape
            // - - - - Path 2+Path 1
            // - - - Path 2+Path 1.PathGeometry
            // - - Path
            CanvasGeometry Geometry_03()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0.5F, -2F));
                    builder.AddCubicBezier(new Vector2(0.5F, -2.27600002F), new Vector2(0.275999993F, -2.5F), new Vector2(0F, -2.5F));
                    builder.AddCubicBezier(new Vector2(-0.275999993F, -2.5F), new Vector2(-0.5F, -2.27600002F), new Vector2(-0.5F, -2F));
                    builder.AddCubicBezier(new Vector2(-0.5F, -2F), new Vector2(-0.5F, -0.5F), new Vector2(-0.5F, -0.5F));
                    builder.AddCubicBezier(new Vector2(-0.5F, -0.5F), new Vector2(-2F, -0.5F), new Vector2(-2F, -0.5F));
                    builder.AddCubicBezier(new Vector2(-2.27600002F, -0.5F), new Vector2(-2.5F, -0.275999993F), new Vector2(-2.5F, 0F));
                    builder.AddCubicBezier(new Vector2(-2.5F, 0.275999993F), new Vector2(-2.27600002F, 0.5F), new Vector2(-2F, 0.5F));
                    builder.AddCubicBezier(new Vector2(-2F, 0.5F), new Vector2(-0.5F, 0.5F), new Vector2(-0.5F, 0.5F));
                    builder.AddCubicBezier(new Vector2(-0.5F, 0.5F), new Vector2(-0.5F, 2F), new Vector2(-0.5F, 2F));
                    builder.AddCubicBezier(new Vector2(-0.5F, 2.27600002F), new Vector2(-0.275999993F, 2.5F), new Vector2(0F, 2.5F));
                    builder.AddCubicBezier(new Vector2(0.275999993F, 2.5F), new Vector2(0.5F, 2.27600002F), new Vector2(0.5F, 2F));
                    builder.AddCubicBezier(new Vector2(0.5F, 2F), new Vector2(0.5F, 0.5F), new Vector2(0.5F, 0.5F));
                    builder.AddCubicBezier(new Vector2(0.5F, 0.5F), new Vector2(2F, 0.5F), new Vector2(2F, 0.5F));
                    builder.AddCubicBezier(new Vector2(2.27600002F, 0.5F), new Vector2(2.5F, 0.275999993F), new Vector2(2.5F, 0F));
                    builder.AddCubicBezier(new Vector2(2.5F, -0.275999993F), new Vector2(2.27600002F, -0.5F), new Vector2(2F, -0.5F));
                    builder.AddCubicBezier(new Vector2(2F, -0.5F), new Vector2(0.5F, -0.5F), new Vector2(0.5F, -0.5F));
                    builder.AddCubicBezier(new Vector2(0.5F, -0.5F), new Vector2(0.5F, -2F), new Vector2(0.5F, -2F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - - Layer aggregator
            // - - - - - - ShapeGroup: Shape
            // - - - - Path 2+Path 1
            // - - - Path 2+Path 1.PathGeometry
            // - - Path
            CanvasGeometry Geometry_04()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(4.5F, 0F));
                    builder.AddCubicBezier(new Vector2(4.5F, 2.4849999F), new Vector2(2.4849999F, 4.5F), new Vector2(0F, 4.5F));
                    builder.AddCubicBezier(new Vector2(-2.4849999F, 4.5F), new Vector2(-4.5F, 2.4849999F), new Vector2(-4.5F, 0F));
                    builder.AddCubicBezier(new Vector2(-4.5F, -2.4849999F), new Vector2(-2.4849999F, -4.5F), new Vector2(0F, -4.5F));
                    builder.AddCubicBezier(new Vector2(2.4849999F, -4.5F), new Vector2(4.5F, -2.4849999F), new Vector2(4.5F, 0F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - Layer aggregator
            // - - - - - ShapeGroup: Shape
            // - - - Path 2+Path 1
            // - - Path 2+Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_05()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_06(), Geometry_07() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            // - - - - - - - - - Layer aggregator
            // - - - - - - ShapeGroup: Shape
            // - - - - Path 2+Path 1
            // - - - Path 2+Path 1.PathGeometry
            // - - Path
            CanvasGeometry Geometry_06()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0.5F, -3.66700006F));
                    builder.AddCubicBezier(new Vector2(0.5F, -3.94300008F), new Vector2(0.275999993F, -4.16699982F), new Vector2(0F, -4.16699982F));
                    builder.AddCubicBezier(new Vector2(-0.275999993F, -4.16699982F), new Vector2(-0.5F, -3.94300008F), new Vector2(-0.5F, -3.66700006F));
                    builder.AddCubicBezier(new Vector2(-0.5F, -3.66700006F), new Vector2(-0.5F, -2.16700006F), new Vector2(-0.5F, -2.16700006F));
                    builder.AddCubicBezier(new Vector2(-0.5F, -2.16700006F), new Vector2(-2F, -2.16700006F), new Vector2(-2F, -2.16700006F));
                    builder.AddCubicBezier(new Vector2(-2.27600002F, -2.16700006F), new Vector2(-2.5F, -1.94299996F), new Vector2(-2.5F, -1.66700006F));
                    builder.AddCubicBezier(new Vector2(-2.5F, -1.39100003F), new Vector2(-2.27600002F, -1.16700006F), new Vector2(-2F, -1.16700006F));
                    builder.AddCubicBezier(new Vector2(-2F, -1.16700006F), new Vector2(-0.5F, -1.16700006F), new Vector2(-0.5F, -1.16700006F));
                    builder.AddCubicBezier(new Vector2(-0.5F, -1.16700006F), new Vector2(-0.5F, 0.333000004F), new Vector2(-0.5F, 0.333000004F));
                    builder.AddCubicBezier(new Vector2(-0.5F, 0.609000027F), new Vector2(-0.275999993F, 0.833000004F), new Vector2(0F, 0.833000004F));
                    builder.AddCubicBezier(new Vector2(0.275999993F, 0.833000004F), new Vector2(0.5F, 0.609000027F), new Vector2(0.5F, 0.333000004F));
                    builder.AddCubicBezier(new Vector2(0.5F, 0.333000004F), new Vector2(0.5F, -1.16700006F), new Vector2(0.5F, -1.16700006F));
                    builder.AddCubicBezier(new Vector2(0.5F, -1.16700006F), new Vector2(2F, -1.16700006F), new Vector2(2F, -1.16700006F));
                    builder.AddCubicBezier(new Vector2(2.27600002F, -1.16700006F), new Vector2(2.5F, -1.39100003F), new Vector2(2.5F, -1.66700006F));
                    builder.AddCubicBezier(new Vector2(2.5F, -1.94299996F), new Vector2(2.27600002F, -2.16700006F), new Vector2(2F, -2.16700006F));
                    builder.AddCubicBezier(new Vector2(2F, -2.16700006F), new Vector2(0.5F, -2.16700006F), new Vector2(0.5F, -2.16700006F));
                    builder.AddCubicBezier(new Vector2(0.5F, -2.16700006F), new Vector2(0.5F, -3.66700006F), new Vector2(0.5F, -3.66700006F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - - Layer aggregator
            // - - - - - - ShapeGroup: Shape
            // - - - - Path 2+Path 1
            // - - - Path 2+Path 1.PathGeometry
            // - - Path
            CanvasGeometry Geometry_07()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(4.5F, -1.66700006F));
                    builder.AddCubicBezier(new Vector2(4.5F, 0.818000019F), new Vector2(2.4849999F, 2.83299994F), new Vector2(0F, 2.83299994F));
                    builder.AddCubicBezier(new Vector2(-2.4849999F, 2.83299994F), new Vector2(-4.5F, 0.818000019F), new Vector2(-4.5F, -1.66700006F));
                    builder.AddCubicBezier(new Vector2(-4.5F, -4.15199995F), new Vector2(-2.4849999F, -6.16699982F), new Vector2(0F, -6.16699982F));
                    builder.AddCubicBezier(new Vector2(2.4849999F, -6.16699982F), new Vector2(4.5F, -4.15199995F), new Vector2(4.5F, -1.66700006F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - Layer aggregator
            // - - - - - ShapeGroup: Shape
            // - - - Path 2+Path 1
            // - - Path 2+Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_08()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_09(), Geometry_10() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            // - - - - - - - - - Layer aggregator
            // - - - - - - ShapeGroup: Shape
            // - - - - Path 2+Path 1
            // - - - Path 2+Path 1.PathGeometry
            // - - Path
            CanvasGeometry Geometry_09()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0.5F, -1.33299994F));
                    builder.AddCubicBezier(new Vector2(0.5F, -1.60899997F), new Vector2(0.275999993F, -1.83299994F), new Vector2(0F, -1.83299994F));
                    builder.AddCubicBezier(new Vector2(-0.275999993F, -1.83299994F), new Vector2(-0.5F, -1.60899997F), new Vector2(-0.5F, -1.33299994F));
                    builder.AddCubicBezier(new Vector2(-0.5F, -1.33299994F), new Vector2(-0.5F, 0.166999996F), new Vector2(-0.5F, 0.166999996F));
                    builder.AddCubicBezier(new Vector2(-0.5F, 0.166999996F), new Vector2(-2F, 0.166999996F), new Vector2(-2F, 0.166999996F));
                    builder.AddCubicBezier(new Vector2(-2.27600002F, 0.166999996F), new Vector2(-2.5F, 0.391000003F), new Vector2(-2.5F, 0.666999996F));
                    builder.AddCubicBezier(new Vector2(-2.5F, 0.943000019F), new Vector2(-2.27600002F, 1.16700006F), new Vector2(-2F, 1.16700006F));
                    builder.AddCubicBezier(new Vector2(-2F, 1.16700006F), new Vector2(-0.5F, 1.16700006F), new Vector2(-0.5F, 1.16700006F));
                    builder.AddCubicBezier(new Vector2(-0.5F, 1.16700006F), new Vector2(-0.5F, 2.66700006F), new Vector2(-0.5F, 2.66700006F));
                    builder.AddCubicBezier(new Vector2(-0.5F, 2.94300008F), new Vector2(-0.275999993F, 3.16700006F), new Vector2(0F, 3.16700006F));
                    builder.AddCubicBezier(new Vector2(0.275999993F, 3.16700006F), new Vector2(0.5F, 2.94300008F), new Vector2(0.5F, 2.66700006F));
                    builder.AddCubicBezier(new Vector2(0.5F, 2.66700006F), new Vector2(0.5F, 1.16700006F), new Vector2(0.5F, 1.16700006F));
                    builder.AddCubicBezier(new Vector2(0.5F, 1.16700006F), new Vector2(2F, 1.16700006F), new Vector2(2F, 1.16700006F));
                    builder.AddCubicBezier(new Vector2(2.27600002F, 1.16700006F), new Vector2(2.5F, 0.943000019F), new Vector2(2.5F, 0.666999996F));
                    builder.AddCubicBezier(new Vector2(2.5F, 0.391000003F), new Vector2(2.27600002F, 0.166999996F), new Vector2(2F, 0.166999996F));
                    builder.AddCubicBezier(new Vector2(2F, 0.166999996F), new Vector2(0.5F, 0.166999996F), new Vector2(0.5F, 0.166999996F));
                    builder.AddCubicBezier(new Vector2(0.5F, 0.166999996F), new Vector2(0.5F, -1.33299994F), new Vector2(0.5F, -1.33299994F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - - Layer aggregator
            // - - - - - - ShapeGroup: Shape
            // - - - - Path 2+Path 1
            // - - - Path 2+Path 1.PathGeometry
            // - - Path
            CanvasGeometry Geometry_10()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(4.5F, 0.666999996F));
                    builder.AddCubicBezier(new Vector2(4.5F, 3.15199995F), new Vector2(2.4849999F, 5.16699982F), new Vector2(0F, 5.16699982F));
                    builder.AddCubicBezier(new Vector2(-2.4849999F, 5.16699982F), new Vector2(-4.5F, 3.15199995F), new Vector2(-4.5F, 0.666999996F));
                    builder.AddCubicBezier(new Vector2(-4.5F, -1.81799996F), new Vector2(-2.4849999F, -3.83299994F), new Vector2(0F, -3.83299994F));
                    builder.AddCubicBezier(new Vector2(2.4849999F, -3.83299994F), new Vector2(4.5F, -1.81799996F), new Vector2(4.5F, 0.666999996F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - Layer aggregator
            // - - - - - ShapeGroup: Shape
            // - - - Path 2+Path 1
            // - - Path 2+Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_11()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_12(), Geometry_13() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            // - - - - - - - - - Layer aggregator
            // - - - - - - ShapeGroup: Shape
            // - - - - Path 2+Path 1
            // - - - Path 2+Path 1.PathGeometry
            // - - Path
            CanvasGeometry Geometry_12()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0.5F, -2F));
                    builder.AddCubicBezier(new Vector2(0.5F, -2.27600002F), new Vector2(0.275999993F, -2.5F), new Vector2(0F, -2.5F));
                    builder.AddCubicBezier(new Vector2(-0.275999993F, -2.5F), new Vector2(-0.5F, -2.27600002F), new Vector2(-0.5F, -2F));
                    builder.AddCubicBezier(new Vector2(-0.5F, -2F), new Vector2(-0.5F, -0.5F), new Vector2(-0.5F, -0.5F));
                    builder.AddCubicBezier(new Vector2(-0.5F, -0.5F), new Vector2(-2F, -0.5F), new Vector2(-2F, -0.5F));
                    builder.AddCubicBezier(new Vector2(-2.27600002F, -0.5F), new Vector2(-2.5F, -0.275999993F), new Vector2(-2.5F, 0F));
                    builder.AddCubicBezier(new Vector2(-2.5F, 0.275999993F), new Vector2(-2.27600002F, 0.5F), new Vector2(-2F, 0.5F));
                    builder.AddCubicBezier(new Vector2(-2F, 0.5F), new Vector2(-0.5F, 0.5F), new Vector2(-0.5F, 0.5F));
                    builder.AddCubicBezier(new Vector2(-0.5F, 0.5F), new Vector2(-0.5F, 2F), new Vector2(-0.5F, 2F));
                    builder.AddCubicBezier(new Vector2(-0.5F, 2.27600002F), new Vector2(-0.275999993F, 2.5F), new Vector2(0F, 2.5F));
                    builder.AddCubicBezier(new Vector2(0.275999993F, 2.5F), new Vector2(0.5F, 2.27600002F), new Vector2(0.5F, 2F));
                    builder.AddCubicBezier(new Vector2(0.5F, 2F), new Vector2(0.5F, 0.5F), new Vector2(0.5F, 0.5F));
                    builder.AddCubicBezier(new Vector2(0.5F, 0.5F), new Vector2(2F, 0.5F), new Vector2(2F, 0.5F));
                    builder.AddCubicBezier(new Vector2(2.27600002F, 0.5F), new Vector2(2.5F, 0.275999993F), new Vector2(2.5F, 0F));
                    builder.AddCubicBezier(new Vector2(2.5F, -0.275999993F), new Vector2(2.27600002F, -0.5F), new Vector2(2F, -0.5F));
                    builder.AddCubicBezier(new Vector2(2F, -0.5F), new Vector2(0.5F, -0.5F), new Vector2(0.5F, -0.5F));
                    builder.AddCubicBezier(new Vector2(0.5F, -0.5F), new Vector2(0.5F, -2F), new Vector2(0.5F, -2F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - - Layer aggregator
            // - - - - - - ShapeGroup: Shape
            // - - - - Path 2+Path 1
            // - - - Path 2+Path 1.PathGeometry
            // - - Path
            CanvasGeometry Geometry_13()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(4.5F, 0F));
                    builder.AddCubicBezier(new Vector2(4.5F, 2.4849999F), new Vector2(2.4849999F, 4.5F), new Vector2(0F, 4.5F));
                    builder.AddCubicBezier(new Vector2(-2.4849999F, 4.5F), new Vector2(-4.5F, 2.4849999F), new Vector2(-4.5F, 0F));
                    builder.AddCubicBezier(new Vector2(-4.5F, -2.4849999F), new Vector2(-2.4849999F, -4.5F), new Vector2(0F, -4.5F));
                    builder.AddCubicBezier(new Vector2(2.4849999F, -4.5F), new Vector2(4.5F, -2.4849999F), new Vector2(4.5F, 0F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - Layer aggregator
            // - - - ShapeGroup: Shape
            // - Path 2+Path 1
            // Stop 0
            CompositionColorGradientStop GradientStop_0_AlmostDimGray_FF6C7178()
            {
                return _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0x6C, 0x71, 0x78));
            }

            // - - - - - - Layer aggregator
            // - - - ShapeGroup: Ellipse 14
            // - Path 1
            // Stop 0
            CompositionColorGradientStop GradientStop_0_AlmostMediumAquamarine_FF61C8B8_0()
            {
                return _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0x61, 0xC8, 0xB8));
            }

            // - - - - - - Layer aggregator
            // - - - ShapeGroup: Subtract
            // - Path 1
            // Stop 0
            CompositionColorGradientStop GradientStop_0_AlmostMediumAquamarine_FF61C8B8_1()
            {
                return _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0x61, 0xC8, 0xB8));
            }

            // - - - - - - Layer aggregator
            // - - - ShapeGroup: Ellipse 14
            // - Path 1
            // Stop 1
            CompositionColorGradientStop GradientStop_1_AlmostCadetBlue_FF479D8E_0()
            {
                return _c.CreateColorGradientStop(1F, Color.FromArgb(0xFF, 0x47, 0x9D, 0x8E));
            }

            // - - - - - - Layer aggregator
            // - - - ShapeGroup: Subtract
            // - Path 1
            // Stop 1
            CompositionColorGradientStop GradientStop_1_AlmostCadetBlue_FF479D8E_1()
            {
                return _c.CreateColorGradientStop(1F, Color.FromArgb(0xFF, 0x47, 0x9D, 0x8E));
            }

            // - - - - - - Layer aggregator
            // - - - ShapeGroup: Shape
            // - Path 2+Path 1
            // Stop 1
            CompositionColorGradientStop GradientStop_1_AlmostSilver_FFC4C6C8()
            {
                return _c.CreateColorGradientStop(1F, Color.FromArgb(0xFF, 0xC4, 0xC6, 0xC8));
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_00()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 0F);
                result.Offset = new Vector2(85F, 60F);
                result.RotationAngleInDegrees = 0F;
                result.Scale = new Vector2(1F, 1F);
                result.Shapes.Add(ContainerShape_01());
                return result;
            }

            // - Layer aggregator
            CompositionContainerShape ContainerShape_01()
            {
                var result = _c.CreateContainerShape();
                // ShapeGroup: Ellipse 14
                result.Shapes.Add(ContainerShape_02());
                return result;
            }

            // - - Layer aggregator
            // ShapeGroup: Ellipse 14
            CompositionContainerShape ContainerShape_02()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 0F);
                result.Offset = new Vector2(0F, 0F);
                result.RotationAngleInDegrees = 0F;
                result.Scale = new Vector2(10F, 10F);
                result.Shapes.Add(ContainerShape_03());
                return result;
            }

            // - - - Layer aggregator
            // ShapeGroup: Ellipse 14
            CompositionContainerShape ContainerShape_03()
            {
                var result = _c.CreateContainerShape();
                // Path 1
                result.Shapes.Add(SpriteShape_0());
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_04()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 0F);
                result.Offset = new Vector2(61.2859993F, 145F);
                result.RotationAngleInDegrees = 0F;
                result.Scale = new Vector2(1F, 1F);
                result.Shapes.Add(ContainerShape_05());
                return result;
            }

            // - Layer aggregator
            CompositionContainerShape ContainerShape_05()
            {
                var result = _c.CreateContainerShape();
                // ShapeGroup: Subtract
                result.Shapes.Add(ContainerShape_06());
                return result;
            }

            // - - Layer aggregator
            // ShapeGroup: Subtract
            CompositionContainerShape ContainerShape_06()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 0F);
                result.Offset = new Vector2(0F, 0F);
                result.RotationAngleInDegrees = 0F;
                result.Scale = new Vector2(10F, 10F);
                result.Shapes.Add(ContainerShape_07());
                return result;
            }

            // - - - Layer aggregator
            // ShapeGroup: Subtract
            CompositionContainerShape ContainerShape_07()
            {
                var result = _c.CreateContainerShape();
                // Path 1
                result.Shapes.Add(SpriteShape_1());
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_08()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 0F);
                result.Offset = new Vector2(145F, 145F);
                result.RotationAngleInDegrees = 0F;
                result.Scale = new Vector2(1F, 1F);
                result.Shapes.Add(ContainerShape_09());
                return result;
            }

            // - Layer aggregator
            CompositionContainerShape ContainerShape_09()
            {
                var result = _c.CreateContainerShape();
                // ShapeGroup: Shape
                result.Shapes.Add(ContainerShape_10());
                return result;
            }

            // - - Layer aggregator
            // ShapeGroup: Shape
            CompositionContainerShape ContainerShape_10()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 0F);
                result.Offset = new Vector2(0F, 0F);
                result.RotationAngleInDegrees = 0F;
                result.Scale = new Vector2(10F, 10F);
                result.Shapes.Add(ContainerShape_11());
                return result;
            }

            // - - - Layer aggregator
            // ShapeGroup: Shape
            CompositionContainerShape ContainerShape_11()
            {
                var result = _c.CreateContainerShape();
                // Path 2+Path 1
                result.Shapes.Add(SpriteShape_2());
                return result;
            }

            // - - - - - Layer aggregator
            // - - ShapeGroup: Ellipse 14
            // Path 1
            CompositionLinearGradientBrush LinearGradientBrush_0()
            {
                var result = _c.CreateLinearGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0_AlmostMediumAquamarine_FF61C8B8_0());
                colorStops.Add(GradientStop_1_AlmostCadetBlue_FF479D8E_0());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(0F, -4F);
                result.EndPoint = new Vector2(0F, 4F);
                return result;
            }

            // - - - - - Layer aggregator
            // - - ShapeGroup: Subtract
            // Path 1
            CompositionLinearGradientBrush LinearGradientBrush_1()
            {
                var result = _c.CreateLinearGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0_AlmostMediumAquamarine_FF61C8B8_1());
                colorStops.Add(GradientStop_1_AlmostCadetBlue_FF479D8E_1());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(2.37100005F, -3.5F);
                result.EndPoint = new Vector2(2.37100005F, 3.5F);
                return result;
            }

            // - - - - - Layer aggregator
            // - - ShapeGroup: Shape
            // Path 2+Path 1
            CompositionLinearGradientBrush LinearGradientBrush_2()
            {
                var result = _c.CreateLinearGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0_AlmostDimGray_FF6C7178());
                colorStops.Add(GradientStop_1_AlmostSilver_FFC4C6C8());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(0F, -4.5F);
                result.EndPoint = new Vector2(0F, 4.5F);
                return result;
            }

            // - - - - - Layer aggregator
            // - - ShapeGroup: Ellipse 14
            // Path 1
            CompositionPathGeometry PathGeometry_0()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_00()));
            }

            // - - - - - Layer aggregator
            // - - ShapeGroup: Subtract
            // Path 1
            CompositionPathGeometry PathGeometry_1()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_01()));
            }

            // - - - - - Layer aggregator
            // - - ShapeGroup: Shape
            // Path 2+Path 1
            // Path 2+Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_2()
            {
                if (_pathGeometry_2 != null) { return _pathGeometry_2; }
                var result = _pathGeometry_2 = _c.CreatePathGeometry();
                return result;
            }

            // - - - - Layer aggregator
            // - ShapeGroup: Ellipse 14
            // Path 1
            CompositionSpriteShape SpriteShape_0()
            {
                if (_spriteShape_0 != null) { return _spriteShape_0; }
                var result = _spriteShape_0 = _c.CreateSpriteShape(PathGeometry_0());
                result.FillBrush = LinearGradientBrush_0();
                return result;
            }

            // - - - - Layer aggregator
            // - ShapeGroup: Subtract
            // Path 1
            CompositionSpriteShape SpriteShape_1()
            {
                if (_spriteShape_1 != null) { return _spriteShape_1; }
                var result = _spriteShape_1 = _c.CreateSpriteShape(PathGeometry_1());
                result.FillBrush = LinearGradientBrush_1();
                return result;
            }

            // - - - - Layer aggregator
            // - ShapeGroup: Shape
            // Path 2+Path 1
            CompositionSpriteShape SpriteShape_2()
            {
                var result = _c.CreateSpriteShape(PathGeometry_2());
                result.FillBrush = LinearGradientBrush_2();
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                if (_root != null) { return _root; }
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                // Layer aggregator
                result.Children.InsertAtTop(ShapeVisual_0());
                return result;
            }

            // - - - - - - Layer aggregator
            // - - - ShapeGroup: Shape
            // - Path 2+Path 1
            // Path 2+Path 1.PathGeometry
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_0()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, new CompositionPath(Geometry_02()), HoldThenStepEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.333333343F, new CompositionPath(Geometry_05()), _c.CreateCubicBezierEasingFunction(new Vector2(0.600000024F, 0F), new Vector2(0.400000006F, 1F)));
                // Frame 20.
                result.InsertKeyFrame(0.666666687F, new CompositionPath(Geometry_08()), _c.CreateCubicBezierEasingFunction(new Vector2(0.600000024F, 0F), new Vector2(0.400000006F, 1F)));
                // Frame 29.
                result.InsertKeyFrame(0.966666639F, new CompositionPath(Geometry_11()), _c.CreateCubicBezierEasingFunction(new Vector2(0.600000024F, 0F), new Vector2(0.400000006F, 1F)));
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(200F, 200F);
                var shapes = result.Shapes;
                shapes.Add(ContainerShape_00());
                shapes.Add(ContainerShape_04());
                shapes.Add(ContainerShape_08());
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                if (_holdThenStepEasingFunction != null) { return _holdThenStepEasingFunction; }
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.FinalStep = 1;
                result.IsFinalStepSingleFrame = true;
                result.StepCount = 1;
                return result;
            }

            // - - - - - Layer aggregator
            // - - ShapeGroup: Ellipse 14
            // Path 1
            // Path animation as a translation.
            Vector2KeyFrameAnimation OffsetVector2Animation_0()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.333333343F, new Vector2(0F, -1F), _c.CreateCubicBezierEasingFunction(new Vector2(0.600000024F, 0F), new Vector2(0.400000006F, 1F)));
                // Frame 20.
                result.InsertKeyFrame(0.666666687F, new Vector2(0F, 1.33299994F), _c.CreateCubicBezierEasingFunction(new Vector2(0.600000024F, 0F), new Vector2(0.400000006F, 1F)));
                // Frame 29.
                result.InsertKeyFrame(0.966666639F, new Vector2(0F, 0F), _c.CreateCubicBezierEasingFunction(new Vector2(0.600000024F, 0F), new Vector2(0.400000006F, 1F)));
                return result;
            }

            // - - - - - Layer aggregator
            // - - ShapeGroup: Subtract
            // Path 1
            // Path animation as a translation.
            Vector2KeyFrameAnimation OffsetVector2Animation_1()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.333333343F, new Vector2(0F, -1.33299994F), _c.CreateCubicBezierEasingFunction(new Vector2(0.600000024F, 0F), new Vector2(0.400000006F, 1F)));
                // Frame 20.
                result.InsertKeyFrame(0.666666687F, new Vector2(0F, 1F), _c.CreateCubicBezierEasingFunction(new Vector2(0.600000024F, 0F), new Vector2(0.400000006F, 1F)));
                // Frame 29.
                result.InsertKeyFrame(0.966666639F, new Vector2(0F, 0F), _c.CreateCubicBezierEasingFunction(new Vector2(0.600000024F, 0F), new Vector2(0.400000006F, 1F)));
                return result;
            }

            internal PersonAdd_AnimatedVisual_UAPv11(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(200F, 200F);
            void IDisposable.Dispose() => _root?.Dispose();

            public void CreateAnimations()
            {
                _pathGeometry_2.StartAnimation("Path", PathKeyFrameAnimation_0());
                var controller = _pathGeometry_2.TryGetAnimationController("Path");
                controller.Pause();
                BindProperty(controller, "Progress", "_.Progress", "_", _root);
                _spriteShape_0.StartAnimation("Offset", OffsetVector2Animation_0());
                controller = _spriteShape_0.TryGetAnimationController("Offset");
                controller.Pause();
                BindProperty(controller, "Progress", "_.Progress", "_", _root);
                _spriteShape_1.StartAnimation("Offset", OffsetVector2Animation_1());
                controller = _spriteShape_1.TryGetAnimationController("Offset");
                controller.Pause();
                BindProperty(controller, "Progress", "_.Progress", "_", _root);
            }

            public void DestroyAnimations()
            {
                _pathGeometry_2.StopAnimation("Path");
                _spriteShape_0.StopAnimation("Offset");
                _spriteShape_1.StopAnimation("Offset");
            }

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 11);
            }
        }

        sealed class PersonAdd_AnimatedVisual_UAPv7 : Microsoft.UI.Xaml.Controls.IAnimatedVisual
        {
            const long c_durationTicks = 5000000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            CompositionSpriteShape _spriteShape_0;
            CompositionSpriteShape _spriteShape_1;
            ContainerVisual _root;
            StepEasingFunction _holdThenStepEasingFunction;

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            // - - - - - - - Layer aggregator
            // - - - - ShapeGroup: Ellipse 14
            // - - Path 1
            CanvasGeometry Geometry_0()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, -4F));
                    builder.AddCubicBezier(new Vector2(2.20900011F, -4F), new Vector2(4F, -2.20900011F), new Vector2(4F, 0F));
                    builder.AddCubicBezier(new Vector2(4F, 2.20900011F), new Vector2(2.20900011F, 4F), new Vector2(0F, 4F));
                    builder.AddCubicBezier(new Vector2(-2.20900011F, 4F), new Vector2(-4F, 2.20900011F), new Vector2(-4F, 0F));
                    builder.AddCubicBezier(new Vector2(-4F, -2.20900011F), new Vector2(-2.20900011F, -4F), new Vector2(0F, -4F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - Layer aggregator
            // - - - - ShapeGroup: Subtract
            // - - Path 1
            CanvasGeometry Geometry_1()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-1.12899995F, -3.5F));
                    builder.AddLine(new Vector2(4.12900019F, -3.5F));
                    builder.AddCubicBezier(new Vector2(3.3440001F, -2.54900002F), new Vector2(2.87100005F, -1.33000004F), new Vector2(2.87100005F, 0F));
                    builder.AddCubicBezier(new Vector2(2.87100005F, 1.273F), new Vector2(3.3039999F, 2.44400001F), new Vector2(4.03000021F, 3.37599993F));
                    builder.AddCubicBezier(new Vector2(3.51999998F, 3.45600009F), new Vector2(2.96700001F, 3.5F), new Vector2(2.37100005F, 3.5F));
                    builder.AddCubicBezier(new Vector2(-2.12899995F, 3.5F), new Vector2(-4.12900019F, 1F), new Vector2(-4.12900019F, -0.5F));
                    builder.AddCubicBezier(new Vector2(-4.12900019F, -1.43200004F), new Vector2(-4.12799978F, -1.89699996F), new Vector2(-3.97600007F, -2.2650001F));
                    builder.AddCubicBezier(new Vector2(-3.773F, -2.75500011F), new Vector2(-3.38400006F, -3.14499998F), new Vector2(-2.89400005F, -3.34800005F));
                    builder.AddCubicBezier(new Vector2(-2.52600002F, -3.5F), new Vector2(-2.06100011F, -3.5F), new Vector2(-1.12899995F, -3.5F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - Layer aggregator
            // - - - - ShapeGroup: Shape
            // - - Path 2+Path 1
            // - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_2()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_3(), Geometry_4() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            // - - - - - - - - Layer aggregator
            // - - - - - ShapeGroup: Shape
            // - - - Path 2+Path 1
            // - - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_3()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0.5F, -2F));
                    builder.AddCubicBezier(new Vector2(0.5F, -2.27600002F), new Vector2(0.275999993F, -2.5F), new Vector2(0F, -2.5F));
                    builder.AddCubicBezier(new Vector2(-0.275999993F, -2.5F), new Vector2(-0.5F, -2.27600002F), new Vector2(-0.5F, -2F));
                    builder.AddLine(new Vector2(-0.5F, -0.5F));
                    builder.AddLine(new Vector2(-2F, -0.5F));
                    builder.AddCubicBezier(new Vector2(-2.27600002F, -0.5F), new Vector2(-2.5F, -0.275999993F), new Vector2(-2.5F, 0F));
                    builder.AddCubicBezier(new Vector2(-2.5F, 0.275999993F), new Vector2(-2.27600002F, 0.5F), new Vector2(-2F, 0.5F));
                    builder.AddLine(new Vector2(-0.5F, 0.5F));
                    builder.AddLine(new Vector2(-0.5F, 2F));
                    builder.AddCubicBezier(new Vector2(-0.5F, 2.27600002F), new Vector2(-0.275999993F, 2.5F), new Vector2(0F, 2.5F));
                    builder.AddCubicBezier(new Vector2(0.275999993F, 2.5F), new Vector2(0.5F, 2.27600002F), new Vector2(0.5F, 2F));
                    builder.AddLine(new Vector2(0.5F, 0.5F));
                    builder.AddLine(new Vector2(2F, 0.5F));
                    builder.AddCubicBezier(new Vector2(2.27600002F, 0.5F), new Vector2(2.5F, 0.275999993F), new Vector2(2.5F, 0F));
                    builder.AddCubicBezier(new Vector2(2.5F, -0.275999993F), new Vector2(2.27600002F, -0.5F), new Vector2(2F, -0.5F));
                    builder.AddLine(new Vector2(0.5F, -0.5F));
                    builder.AddLine(new Vector2(0.5F, -2F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - Layer aggregator
            // - - - - - ShapeGroup: Shape
            // - - - Path 2+Path 1
            // - - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_4()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(4.5F, 0F));
                    builder.AddCubicBezier(new Vector2(4.5F, 2.4849999F), new Vector2(2.4849999F, 4.5F), new Vector2(0F, 4.5F));
                    builder.AddCubicBezier(new Vector2(-2.4849999F, 4.5F), new Vector2(-4.5F, 2.4849999F), new Vector2(-4.5F, 0F));
                    builder.AddCubicBezier(new Vector2(-4.5F, -2.4849999F), new Vector2(-2.4849999F, -4.5F), new Vector2(0F, -4.5F));
                    builder.AddCubicBezier(new Vector2(2.4849999F, -4.5F), new Vector2(4.5F, -2.4849999F), new Vector2(4.5F, 0F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - Layer aggregator
            // - - - ShapeGroup: Shape
            // - Path 2+Path 1
            // Stop 0
            CompositionColorGradientStop GradientStop_0_AlmostDimGray_FF6C7178()
            {
                return _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0x6C, 0x71, 0x78));
            }

            // - - - - - - Layer aggregator
            // - - - ShapeGroup: Ellipse 14
            // - Path 1
            // Stop 0
            CompositionColorGradientStop GradientStop_0_AlmostMediumAquamarine_FF61C8B8_0()
            {
                return _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0x61, 0xC8, 0xB8));
            }

            // - - - - - - Layer aggregator
            // - - - ShapeGroup: Subtract
            // - Path 1
            // Stop 0
            CompositionColorGradientStop GradientStop_0_AlmostMediumAquamarine_FF61C8B8_1()
            {
                return _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0x61, 0xC8, 0xB8));
            }

            // - - - - - - Layer aggregator
            // - - - ShapeGroup: Ellipse 14
            // - Path 1
            // Stop 1
            CompositionColorGradientStop GradientStop_1_AlmostCadetBlue_FF479D8E_0()
            {
                return _c.CreateColorGradientStop(1F, Color.FromArgb(0xFF, 0x47, 0x9D, 0x8E));
            }

            // - - - - - - Layer aggregator
            // - - - ShapeGroup: Subtract
            // - Path 1
            // Stop 1
            CompositionColorGradientStop GradientStop_1_AlmostCadetBlue_FF479D8E_1()
            {
                return _c.CreateColorGradientStop(1F, Color.FromArgb(0xFF, 0x47, 0x9D, 0x8E));
            }

            // - - - - - - Layer aggregator
            // - - - ShapeGroup: Shape
            // - Path 2+Path 1
            // Stop 1
            CompositionColorGradientStop GradientStop_1_AlmostSilver_FFC4C6C8()
            {
                return _c.CreateColorGradientStop(1F, Color.FromArgb(0xFF, 0xC4, 0xC6, 0xC8));
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_00()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 0F);
                result.Offset = new Vector2(85F, 60F);
                result.RotationAngleInDegrees = 0F;
                result.Scale = new Vector2(1F, 1F);
                result.Shapes.Add(ContainerShape_01());
                return result;
            }

            // - Layer aggregator
            CompositionContainerShape ContainerShape_01()
            {
                var result = _c.CreateContainerShape();
                // ShapeGroup: Ellipse 14
                result.Shapes.Add(ContainerShape_02());
                return result;
            }

            // - - Layer aggregator
            // ShapeGroup: Ellipse 14
            CompositionContainerShape ContainerShape_02()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 0F);
                result.Offset = new Vector2(0F, 0F);
                result.RotationAngleInDegrees = 0F;
                result.Scale = new Vector2(10F, 10F);
                result.Shapes.Add(ContainerShape_03());
                return result;
            }

            // - - - Layer aggregator
            // ShapeGroup: Ellipse 14
            CompositionContainerShape ContainerShape_03()
            {
                var result = _c.CreateContainerShape();
                // Path 1
                result.Shapes.Add(SpriteShape_0());
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_04()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 0F);
                result.Offset = new Vector2(61.2859993F, 145F);
                result.RotationAngleInDegrees = 0F;
                result.Scale = new Vector2(1F, 1F);
                result.Shapes.Add(ContainerShape_05());
                return result;
            }

            // - Layer aggregator
            CompositionContainerShape ContainerShape_05()
            {
                var result = _c.CreateContainerShape();
                // ShapeGroup: Subtract
                result.Shapes.Add(ContainerShape_06());
                return result;
            }

            // - - Layer aggregator
            // ShapeGroup: Subtract
            CompositionContainerShape ContainerShape_06()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 0F);
                result.Offset = new Vector2(0F, 0F);
                result.RotationAngleInDegrees = 0F;
                result.Scale = new Vector2(10F, 10F);
                result.Shapes.Add(ContainerShape_07());
                return result;
            }

            // - - - Layer aggregator
            // ShapeGroup: Subtract
            CompositionContainerShape ContainerShape_07()
            {
                var result = _c.CreateContainerShape();
                // Path 1
                result.Shapes.Add(SpriteShape_1());
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_08()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 0F);
                result.Offset = new Vector2(145F, 145F);
                result.RotationAngleInDegrees = 0F;
                result.Scale = new Vector2(1F, 1F);
                result.Shapes.Add(ContainerShape_09());
                return result;
            }

            // - Layer aggregator
            CompositionContainerShape ContainerShape_09()
            {
                var result = _c.CreateContainerShape();
                // ShapeGroup: Shape
                result.Shapes.Add(ContainerShape_10());
                return result;
            }

            // - - Layer aggregator
            // ShapeGroup: Shape
            CompositionContainerShape ContainerShape_10()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 0F);
                result.Offset = new Vector2(0F, 0F);
                result.RotationAngleInDegrees = 0F;
                result.Scale = new Vector2(10F, 10F);
                result.Shapes.Add(ContainerShape_11());
                return result;
            }

            // - - - Layer aggregator
            // ShapeGroup: Shape
            CompositionContainerShape ContainerShape_11()
            {
                var result = _c.CreateContainerShape();
                // Path 2+Path 1
                result.Shapes.Add(SpriteShape_2());
                return result;
            }

            // - - - - - Layer aggregator
            // - - ShapeGroup: Ellipse 14
            // Path 1
            CompositionLinearGradientBrush LinearGradientBrush_0()
            {
                var result = _c.CreateLinearGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0_AlmostMediumAquamarine_FF61C8B8_0());
                colorStops.Add(GradientStop_1_AlmostCadetBlue_FF479D8E_0());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(0F, -4F);
                result.EndPoint = new Vector2(0F, 4F);
                return result;
            }

            // - - - - - Layer aggregator
            // - - ShapeGroup: Subtract
            // Path 1
            CompositionLinearGradientBrush LinearGradientBrush_1()
            {
                var result = _c.CreateLinearGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0_AlmostMediumAquamarine_FF61C8B8_1());
                colorStops.Add(GradientStop_1_AlmostCadetBlue_FF479D8E_1());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(2.37100005F, -3.5F);
                result.EndPoint = new Vector2(2.37100005F, 3.5F);
                return result;
            }

            // - - - - - Layer aggregator
            // - - ShapeGroup: Shape
            // Path 2+Path 1
            CompositionLinearGradientBrush LinearGradientBrush_2()
            {
                var result = _c.CreateLinearGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0_AlmostDimGray_FF6C7178());
                colorStops.Add(GradientStop_1_AlmostSilver_FFC4C6C8());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(0F, -4.5F);
                result.EndPoint = new Vector2(0F, 4.5F);
                return result;
            }

            // - - - - - Layer aggregator
            // - - ShapeGroup: Ellipse 14
            // Path 1
            CompositionPathGeometry PathGeometry_0()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_0()));
            }

            // - - - - - Layer aggregator
            // - - ShapeGroup: Subtract
            // Path 1
            CompositionPathGeometry PathGeometry_1()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_1()));
            }

            // - - - - - Layer aggregator
            // - - ShapeGroup: Shape
            // Path 2+Path 1
            // Path 2+Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_2()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_2()));
            }

            // - - - - Layer aggregator
            // - ShapeGroup: Ellipse 14
            // Path 1
            CompositionSpriteShape SpriteShape_0()
            {
                if (_spriteShape_0 != null) { return _spriteShape_0; }
                var result = _spriteShape_0 = _c.CreateSpriteShape(PathGeometry_0());
                result.FillBrush = LinearGradientBrush_0();
                return result;
            }

            // - - - - Layer aggregator
            // - ShapeGroup: Subtract
            // Path 1
            CompositionSpriteShape SpriteShape_1()
            {
                if (_spriteShape_1 != null) { return _spriteShape_1; }
                var result = _spriteShape_1 = _c.CreateSpriteShape(PathGeometry_1());
                result.FillBrush = LinearGradientBrush_1();
                return result;
            }

            // - - - - Layer aggregator
            // - ShapeGroup: Shape
            // Path 2+Path 1
            CompositionSpriteShape SpriteShape_2()
            {
                var result = _c.CreateSpriteShape(PathGeometry_2());
                result.FillBrush = LinearGradientBrush_2();
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                if (_root != null) { return _root; }
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                // Layer aggregator
                result.Children.InsertAtTop(ShapeVisual_0());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(200F, 200F);
                var shapes = result.Shapes;
                shapes.Add(ContainerShape_00());
                shapes.Add(ContainerShape_04());
                shapes.Add(ContainerShape_08());
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                if (_holdThenStepEasingFunction != null) { return _holdThenStepEasingFunction; }
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.FinalStep = 1;
                result.IsFinalStepSingleFrame = true;
                result.StepCount = 1;
                return result;
            }

            // - - - - - Layer aggregator
            // - - ShapeGroup: Ellipse 14
            // Path 1
            // Path animation as a translation.
            Vector2KeyFrameAnimation OffsetVector2Animation_0()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.333333343F, new Vector2(0F, -1F), _c.CreateCubicBezierEasingFunction(new Vector2(0.600000024F, 0F), new Vector2(0.400000006F, 1F)));
                // Frame 20.
                result.InsertKeyFrame(0.666666687F, new Vector2(0F, 1.33299994F), _c.CreateCubicBezierEasingFunction(new Vector2(0.600000024F, 0F), new Vector2(0.400000006F, 1F)));
                // Frame 29.
                result.InsertKeyFrame(0.966666639F, new Vector2(0F, 0F), _c.CreateCubicBezierEasingFunction(new Vector2(0.600000024F, 0F), new Vector2(0.400000006F, 1F)));
                return result;
            }

            // - - - - - Layer aggregator
            // - - ShapeGroup: Subtract
            // Path 1
            // Path animation as a translation.
            Vector2KeyFrameAnimation OffsetVector2Animation_1()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.333333343F, new Vector2(0F, -1.33299994F), _c.CreateCubicBezierEasingFunction(new Vector2(0.600000024F, 0F), new Vector2(0.400000006F, 1F)));
                // Frame 20.
                result.InsertKeyFrame(0.666666687F, new Vector2(0F, 1F), _c.CreateCubicBezierEasingFunction(new Vector2(0.600000024F, 0F), new Vector2(0.400000006F, 1F)));
                // Frame 29.
                result.InsertKeyFrame(0.966666639F, new Vector2(0F, 0F), _c.CreateCubicBezierEasingFunction(new Vector2(0.600000024F, 0F), new Vector2(0.400000006F, 1F)));
                return result;
            }

            internal PersonAdd_AnimatedVisual_UAPv7(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(200F, 200F);
            void IDisposable.Dispose() => _root?.Dispose();

            public void CreateAnimations()
            {
                _spriteShape_0.StartAnimation("Offset", OffsetVector2Animation_0());
                var controller = _spriteShape_0.TryGetAnimationController("Offset");
                controller.Pause();
                BindProperty(controller, "Progress", "_.Progress", "_", _root);
                _spriteShape_1.StartAnimation("Offset", OffsetVector2Animation_1());
                controller = _spriteShape_1.TryGetAnimationController("Offset");
                controller.Pause();
                BindProperty(controller, "Progress", "_.Progress", "_", _root);
            }

            public void DestroyAnimations()
            {
                _spriteShape_0.StopAnimation("Offset");
                _spriteShape_1.StopAnimation("Offset");
            }

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 7);
            }
        }
    }
}
