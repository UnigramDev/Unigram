//
// Copyright Fela Ameghino 2015-2024
//
// Distributed under the GNU General Public License v3.0. (See accompanying
// file LICENSE or copy at https://www.gnu.org/licenses/gpl-3.0.txt)
//
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           7.1.0+ge1fa92580f
//       
//       Command:
//           LottieGen -Language CSharp -Public -WinUIVersion 2.7 -InputFile ReactionsMore.json
//       
//       Input file:
//           ReactionsMore.json (11449 bytes created 9:12+01:00 Feb 16 2022)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ___________________________________________________________
// |       Object stats       | UAP v11 count | UAP v7 count |
// |__________________________|_______________|______________|
// | All CompositionObjects   |           174 |          164 |
// |--------------------------+---------------+--------------|
// | Expression animators     |            27 |           25 |
// | KeyFrame animators       |            27 |           25 |
// | Reference parameters     |            27 |           25 |
// | Expression operations    |             0 |            0 |
// |--------------------------+---------------+--------------|
// | Animated brushes         |             - |            - |
// | Animated gradient stops  |             - |            - |
// | ExpressionAnimations     |             1 |            1 |
// | PathKeyFrameAnimations   |             2 |            - |
// |--------------------------+---------------+--------------|
// | ContainerVisuals         |             2 |            2 |
// | ShapeVisuals             |             2 |            2 |
// |--------------------------+---------------+--------------|
// | ContainerShapes          |            10 |           10 |
// | CompositionSpriteShapes  |             6 |            6 |
// |--------------------------+---------------+--------------|
// | Brushes                  |             1 |            1 |
// | Gradient stops           |             - |            - |
// | CompositionVisualSurface |             - |            - |
// -----------------------------------------------------------
using Microsoft.Graphics.Canvas.Geometry;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.Graphics;
using Windows.UI;
using Microsoft.UI.Composition;

namespace Telegram.Assets.Icons
{
    // Name:        more to xmark U
    // Frame rate:  60 fps
    // Frame count: 75
    // Duration:    1250.0 mS
    sealed class ReactionsMore
        : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
        , Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
    {
        // Animation duration: 1.250 seconds.
        internal const long c_durationTicks = 12500000;
        internal Color m_foreground;

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
        {
            object ignored = null;
            return TryCreateAnimatedVisual(compositor, out ignored);
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;

            if (ReactionsMore_AnimatedVisual_UAPv11.IsRuntimeCompatible())
            {
                return
                    new ReactionsMore_AnimatedVisual_UAPv11(
                        compositor,
                        m_foreground
                        );
            }

            if (ReactionsMore_AnimatedVisual_UAPv7.IsRuntimeCompatible())
            {
                return
                    new ReactionsMore_AnimatedVisual_UAPv7(
                        compositor,
                        m_foreground
                        );
            }

            return null;
        }

        /// <summary>
        /// Gets the number of frames in the animation.
        /// </summary>
        public double FrameCount => 75d;

        /// <summary>
        /// Gets the frame rate of the animation.
        /// </summary>
        public double Framerate => 60d;

        /// <summary>
        /// Gets the duration of the animation.
        /// </summary>
        public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);

        /// <summary>
        /// Converts a zero-based frame number to the corresponding progress value denoting the
        /// start of the frame.
        /// </summary>
        public double FrameToProgress(double frameNumber)
        {
            return frameNumber / 75d;
        }

        /// <summary>
        /// Returns a map from marker names to corresponding progress values.
        /// </summary>
        public IReadOnlyDictionary<string, double> Markers =>
            new Dictionary<string, double>
            {
                { "NormalToChecked_Start", 0.0 },
                { "NormalToChecked_End", 30d / 75d },
                { "CheckedToNormal_Start", 30d / 75d },
                { "CheckedToNormal_End", 1 },
            };

        /// <summary>
        /// Sets the color property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetColorProperty(string propertyName, Color value)
        {
            if (propertyName == "Foreground")
            {
                m_foreground = value;
            }
        }

        /// <summary>
        /// Sets the scalar property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetScalarProperty(string propertyName, double value)
        {
        }

        sealed class ReactionsMore_AnimatedVisual_UAPv11 : Microsoft.UI.Xaml.Controls.IAnimatedVisual
        {
            const long c_durationTicks = 12500000;
            readonly Compositor _c;
            readonly Color _f;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            CanvasGeometry _geometry_02;
            CompositionColorBrush _colorBrush_White;
            CompositionPath _path_0;
            CompositionPath _path_1;
            CompositionPath _path_2;
            CompositionPathGeometry _pathGeometry_4;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            CubicBezierEasingFunction _cubicBezierEasingFunction_1;
            CubicBezierEasingFunction _cubicBezierEasingFunction_2;
            ExpressionAnimation _rootProgress;
            ScalarKeyFrameAnimation _rotationAngleInDegreesScalarAnimation_30_to_90;
            ScalarKeyFrameAnimation _scalarAnimation_10_to_0;
            ScalarKeyFrameAnimation _scalarAnimation_10_to_10;
            ScalarKeyFrameAnimation _strokeThicknessScalarAnimation_1p5_to_4;
            ScalarKeyFrameAnimation _strokeThicknessScalarAnimation_3_to_1p5;
            ScalarKeyFrameAnimation _trimEndScalarAnimation_0p51_to_1;
            ScalarKeyFrameAnimation _trimStartScalarAnimation_0p49_to_0;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            BooleanKeyFrameAnimation CreateBooleanKeyFrameAnimation(float initialProgress, bool initialValue)
            {
                var result = _c.CreateBooleanKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue);
                return result;
            }

            PathKeyFrameAnimation CreatePathKeyFrameAnimation(float initialProgress, CompositionPath initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreatePathKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            // PreComp layer: xmark to more U
            BooleanKeyFrameAnimation IsVisibleBooleanAnimation()
            {
                // Frame 30.
                var result = CreateBooleanKeyFrameAnimation(0.400000006F, true);
                return result;
            }

            CanvasGeometry Geometry_00()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_01(), Geometry_02(), Geometry_03() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            CanvasGeometry Geometry_01()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(7.7329998F, -2.25F));
                    builder.AddCubicBezier(new Vector2(9.01099968F, -2.25F), new Vector2(10F, -1.25800002F), new Vector2(10F, 0F));
                    builder.AddCubicBezier(new Vector2(10F, 1.227F), new Vector2(8.96899986F, 2.25F), new Vector2(7.7329998F, 2.25F));
                    builder.AddCubicBezier(new Vector2(6.47599983F, 2.25F), new Vector2(5.45599985F, 1.227F), new Vector2(5.45599985F, 0F));
                    builder.AddCubicBezier(new Vector2(5.45599985F, -1.24800003F), new Vector2(6.47599983F, -2.25F), new Vector2(7.7329998F, -2.25F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_02()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0.00499999989F, -2.25F));
                    builder.AddCubicBezier(new Vector2(1.27199996F, -2.25F), new Vector2(2.26200008F, -1.25800002F), new Vector2(2.26200008F, 0F));
                    builder.AddCubicBezier(new Vector2(2.26200008F, 1.227F), new Vector2(1.23099995F, 2.25F), new Vector2(0.00499999989F, 2.25F));
                    builder.AddCubicBezier(new Vector2(-1.24199998F, 2.25F), new Vector2(-2.26200008F, 1.227F), new Vector2(-2.26200008F, 0F));
                    builder.AddCubicBezier(new Vector2(-2.26200008F, -1.24800003F), new Vector2(-1.24199998F, -2.25F), new Vector2(0.00499999989F, -2.25F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = _geometry_02 = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_03()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-7.7329998F, -2.25F));
                    builder.AddCubicBezier(new Vector2(-6.44500017F, -2.25F), new Vector2(-5.4460001F, -1.25800002F), new Vector2(-5.4460001F, 0F));
                    builder.AddCubicBezier(new Vector2(-5.4460001F, 1.227F), new Vector2(-6.48600006F, 2.25F), new Vector2(-7.7329998F, 2.25F));
                    builder.AddCubicBezier(new Vector2(-8.97999954F, 2.25F), new Vector2(-10F, 1.227F), new Vector2(-10F, 0F));
                    builder.AddCubicBezier(new Vector2(-10F, -1.24800003F), new Vector2(-8.97999954F, -2.25F), new Vector2(-7.7329998F, -2.25F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - Layer aggregator
            // - - - - - Layer: w 2
            // - - - ShapeGroup: w Scale:0.78,0.78
            // - - Path 3+Path 2+Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_04()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_05(), _geometry_02, Geometry_06() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            // - - - - - - - Layer aggregator
            // - - - - - - Layer: w 2
            // - - - - ShapeGroup: w Scale:0.78,0.78
            // - - - Path 3+Path 2+Path 1.PathGeometry
            // - - Path
            CanvasGeometry Geometry_05()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-0.00300000003F, -2.25F));
                    builder.AddCubicBezier(new Vector2(1.27499998F, -2.25F), new Vector2(2.26399994F, -1.25800002F), new Vector2(2.26399994F, 0F));
                    builder.AddCubicBezier(new Vector2(2.26399994F, 1.227F), new Vector2(1.23300004F, 2.25F), new Vector2(-0.00300000003F, 2.25F));
                    builder.AddCubicBezier(new Vector2(-1.25999999F, 2.25F), new Vector2(-2.27999997F, 1.227F), new Vector2(-2.27999997F, 0F));
                    builder.AddCubicBezier(new Vector2(-2.27999997F, -1.24800003F), new Vector2(-1.25999999F, -2.25F), new Vector2(-0.00300000003F, -2.25F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - Layer aggregator
            // - - - - - - Layer: w 2
            // - - - - ShapeGroup: w Scale:0.78,0.78
            // - - - Path 3+Path 2+Path 1.PathGeometry
            // - - Path
            CanvasGeometry Geometry_06()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-0.0680000037F, -2.25F));
                    builder.AddCubicBezier(new Vector2(1.22000003F, -2.25F), new Vector2(2.2190001F, -1.25800002F), new Vector2(2.2190001F, 0F));
                    builder.AddCubicBezier(new Vector2(2.2190001F, 1.227F), new Vector2(1.17900002F, 2.25F), new Vector2(-0.0680000037F, 2.25F));
                    builder.AddCubicBezier(new Vector2(-1.31500006F, 2.25F), new Vector2(-2.33500004F, 1.227F), new Vector2(-2.33500004F, 0F));
                    builder.AddCubicBezier(new Vector2(-2.33500004F, -1.24800003F), new Vector2(-1.31500006F, -2.25F), new Vector2(-0.0680000037F, -2.25F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_07()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(5F, -5F));
                    builder.AddLine(new Vector2(-5F, 5F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_08()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_09(), _geometry_02, Geometry_10() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            CanvasGeometry Geometry_09()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(6.66400003F, -2.25F));
                    builder.AddCubicBezier(new Vector2(7.94199991F, -2.25F), new Vector2(8.93099976F, -1.25800002F), new Vector2(8.93099976F, 0F));
                    builder.AddCubicBezier(new Vector2(8.93099976F, 1.227F), new Vector2(7.9000001F, 2.25F), new Vector2(6.66400003F, 2.25F));
                    builder.AddCubicBezier(new Vector2(5.40700006F, 2.25F), new Vector2(4.38600016F, 1.227F), new Vector2(4.38600016F, 0F));
                    builder.AddCubicBezier(new Vector2(4.38600016F, -1.24800003F), new Vector2(5.40700006F, -2.25F), new Vector2(6.66400003F, -2.25F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_10()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-6.66400003F, -2.25F));
                    builder.AddCubicBezier(new Vector2(-5.37599993F, -2.25F), new Vector2(-4.37599993F, -1.25800002F), new Vector2(-4.37599993F, 0F));
                    builder.AddCubicBezier(new Vector2(-4.37599993F, 1.227F), new Vector2(-5.41699982F, 2.25F), new Vector2(-6.66400003F, 2.25F));
                    builder.AddCubicBezier(new Vector2(-7.91099977F, 2.25F), new Vector2(-8.93099976F, 1.227F), new Vector2(-8.93099976F, 0F));
                    builder.AddCubicBezier(new Vector2(-8.93099976F, -1.24800003F), new Vector2(-7.91099977F, -2.25F), new Vector2(-6.66400003F, -2.25F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CompositionColorBrush ColorBrush_White()
            {
                return _colorBrush_White = _c.CreateColorBrush(Color.FromArgb(0xFF, _f.R, _f.G, _f.B));
            }

            // Layer aggregator
            // Layer: w 2
            CompositionContainerShape ContainerShape_0()
            {
                var result = _c.CreateContainerShape();
                result.Shapes.Add(ContainerShape_1());
                StartProgressBoundAnimation(result, "Scale", ShapeVisibilityAnimation_0(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Layer: w 2
            CompositionContainerShape ContainerShape_1()
            {
                var result = _c.CreateContainerShape();
                result.Offset = new Vector2(120F, 120F);
                // ShapeGroup: w Scale:0.78,0.78
                result.Shapes.Add(SpriteShape_0());
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_90_0(), _rootProgress);
                StartProgressBoundAnimation(result, "Scale.X", ScalarAnimation_10_to_0(), _rootProgress);
                StartProgressBoundAnimation(result, "Scale.Y", _scalarAnimation_10_to_0, _rootProgress);
                return result;
            }

            // Layer aggregator
            // Layer: Vector 3
            CompositionContainerShape ContainerShape_2()
            {
                var result = _c.CreateContainerShape();
                result.Scale = new Vector2(0F, 0F);
                var shapes = result.Shapes;
                shapes.Add(ContainerShape_3());
                shapes.Add(ContainerShape_4());
                StartProgressBoundAnimation(result, "Scale", ShapeVisibilityAnimation_1(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Layer: Vector 3
            CompositionContainerShape ContainerShape_3()
            {
                var result = _c.CreateContainerShape();
                result.Offset = new Vector2(120F, 120F);
                result.Scale = new Vector2(11F, 11F);
                // ShapeGroup: Vector 3 Scale:0.92308,0.92308
                result.Shapes.Add(SpriteShape_1());
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_30_to_90(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Layer: Vector 3
            CompositionContainerShape ContainerShape_4()
            {
                var result = _c.CreateContainerShape();
                result.Offset = new Vector2(120F, 120F);
                result.Scale = new Vector2(-11F, 11F);
                // ShapeGroup: Vector 4 Scale:0.92308,0.92308
                result.Shapes.Add(SpriteShape_2());
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_30_to_90, _rootProgress);
                return result;
            }

            // - PreComp layer: xmark to more U
            // Transforms for xmark to more U Scale(1,1,0)
            // Layer: w
            CompositionContainerShape ContainerShape_5()
            {
                var result = _c.CreateContainerShape();
                result.Scale = new Vector2(0F, 0F);
                result.Shapes.Add(ContainerShape_6());
                StartProgressBoundAnimation(result, "Scale", ShapeVisibilityAnimation_2(), _rootProgress);
                return result;
            }

            // - - PreComp layer: xmark to more U
            // - Transforms for xmark to more U Scale(1,1,0)
            // Layer: w
            CompositionContainerShape ContainerShape_6()
            {
                var result = _c.CreateContainerShape();
                result.Offset = new Vector2(120F, 120F);
                // ShapeGroup: w Scale:0.78,0.78
                result.Shapes.Add(SpriteShape_3());
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_m180(), _rootProgress);
                StartProgressBoundAnimation(result, "Scale.X", ScalarAnimation_10_to_10(), _rootProgress);
                StartProgressBoundAnimation(result, "Scale.Y", _scalarAnimation_10_to_10, _rootProgress);
                return result;
            }

            // - PreComp layer: xmark to more U
            // Transforms for xmark to more U Scale(1,1,0)
            // Layer: Vector 3
            CompositionContainerShape ContainerShape_7()
            {
                var result = _c.CreateContainerShape();
                result.Scale = new Vector2(0F, 0F);
                var shapes = result.Shapes;
                shapes.Add(ContainerShape_8());
                shapes.Add(ContainerShape_9());
                StartProgressBoundAnimation(result, "Scale", ShapeVisibilityAnimation_3(), _rootProgress);
                return result;
            }

            // - - PreComp layer: xmark to more U
            // - Transforms for xmark to more U Scale(1,1,0)
            // Layer: Vector 3
            CompositionContainerShape ContainerShape_8()
            {
                var result = _c.CreateContainerShape();
                result.Offset = new Vector2(120F, 120F);
                result.Scale = new Vector2(11F, 11F);
                // ShapeGroup: Vector 3
                result.Shapes.Add(SpriteShape_4());
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_90_to_135(), _rootProgress);
                return result;
            }

            // - - PreComp layer: xmark to more U
            // - Transforms for xmark to more U Scale(1,1,0)
            // Layer: Vector 3
            CompositionContainerShape ContainerShape_9()
            {
                var result = _c.CreateContainerShape();
                result.Offset = new Vector2(120F, 120F);
                result.Scale = new Vector2(-11F, 11F);
                // ShapeGroup: Vector 4
                result.Shapes.Add(SpriteShape_5());
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_90_to_45(), _rootProgress);
                return result;
            }

            CompositionPath Path_0()
            {
                var result = _path_0 = new CompositionPath(Geometry_00());
                return result;
            }

            CompositionPath Path_1()
            {
                var result = _path_1 = new CompositionPath(Geometry_07());
                return result;
            }

            CompositionPath Path_2()
            {
                var result = _path_2 = new CompositionPath(Geometry_08());
                return result;
            }

            // - - - Layer aggregator
            // - - Layer: w 2
            // ShapeGroup: w Scale:0.78,0.78
            // Path 3+Path 2+Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_0()
            {
                var result = _c.CreatePathGeometry();
                StartProgressBoundAnimation(result, "Path", PathKeyFrameAnimation_0(), RootProgress());
                return result;
            }

            // - - - Layer aggregator
            // - - Layer: Vector 3
            // ShapeGroup: Vector 3 Scale:0.92308,0.92308
            CompositionPathGeometry PathGeometry_1()
            {
                var result = _c.CreatePathGeometry(Path_1());
                StartProgressBoundAnimation(result, "TrimStart", TrimStartScalarAnimation_0p49_to_0(), _rootProgress);
                StartProgressBoundAnimation(result, "TrimEnd", TrimEndScalarAnimation_0p51_to_1(), _rootProgress);
                return result;
            }

            // - - - Layer aggregator
            // - - Layer: Vector 3
            // ShapeGroup: Vector 4 Scale:0.92308,0.92308
            CompositionPathGeometry PathGeometry_2()
            {
                var result = _c.CreatePathGeometry(_path_1);
                StartProgressBoundAnimation(result, "TrimStart", _trimStartScalarAnimation_0p49_to_0, _rootProgress);
                StartProgressBoundAnimation(result, "TrimEnd", _trimEndScalarAnimation_0p51_to_1, _rootProgress);
                return result;
            }

            // - - - - PreComp layer: xmark to more U
            // - - - Transforms for xmark to more U Scale(1,1,0)
            // - - Layer: w
            // ShapeGroup: w Scale:0.78,0.78
            // Path 3+Path 2+Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_3()
            {
                var result = _c.CreatePathGeometry();
                StartProgressBoundAnimation(result, "Path", PathKeyFrameAnimation_1(), _rootProgress);
                return result;
            }

            CompositionPathGeometry PathGeometry_4()
            {
                return _pathGeometry_4 = _c.CreatePathGeometry(_path_1);
            }

            // - - Layer aggregator
            // - Layer: w 2
            // Path 3+Path 2+Path 1
            CompositionSpriteShape SpriteShape_0()
            {
                // Scale:<0.78, 0.78>
                var geometry = PathGeometry_0();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.779999971F, 0F, 0F, 0.779999971F, 0F, 0F), ColorBrush_White());
                return result;
            }

            // - - Layer aggregator
            // - Layer: Vector 3
            // Path 1
            CompositionSpriteShape SpriteShape_1()
            {
                // Scale:<0.92308, 0.92308>
                var result = CreateSpriteShape(PathGeometry_1(), new Matrix3x2(0.923080027F, 0F, 0F, 0.923080027F, 0F, 0F));
                result.StrokeBrush = _colorBrush_White;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                StartProgressBoundAnimation(result, "StrokeThickness", StrokeThicknessScalarAnimation_3_to_1p5(), _rootProgress);
                return result;
            }

            // - - Layer aggregator
            // - Layer: Vector 3
            // Path 1
            CompositionSpriteShape SpriteShape_2()
            {
                // Scale:<0.92308, 0.92308>
                var result = CreateSpriteShape(PathGeometry_2(), new Matrix3x2(0.923080027F, 0F, 0F, 0.923080027F, 0F, 0F));
                result.StrokeBrush = _colorBrush_White;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                StartProgressBoundAnimation(result, "StrokeThickness", _strokeThicknessScalarAnimation_3_to_1p5, _rootProgress);
                return result;
            }

            // - - - PreComp layer: xmark to more U
            // - - Transforms for xmark to more U Scale(1,1,0)
            // - Layer: w
            // Path 3+Path 2+Path 1
            CompositionSpriteShape SpriteShape_3()
            {
                // Scale:<0.78, 0.78>
                var geometry = PathGeometry_3();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.779999971F, 0F, 0F, 0.779999971F, 0F, 0F), _colorBrush_White);
                return result;
            }

            // - - - PreComp layer: xmark to more U
            // - - Transforms for xmark to more U Scale(1,1,0)
            // - Layer: Vector 3
            // Path 1
            CompositionSpriteShape SpriteShape_4()
            {
                var result = _c.CreateSpriteShape(PathGeometry_4());
                result.Scale = new Vector2(0.923080027F, 0.923080027F);
                result.StrokeBrush = _colorBrush_White;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                StartProgressBoundAnimation(result, "StrokeThickness", StrokeThicknessScalarAnimation_1p5_to_4(), _rootProgress);
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_m90(), _rootProgress);
                return result;
            }

            // - - - PreComp layer: xmark to more U
            // - - Transforms for xmark to more U Scale(1,1,0)
            // - Layer: Vector 3
            // Path 1
            CompositionSpriteShape SpriteShape_5()
            {
                var result = _c.CreateSpriteShape(_pathGeometry_4);
                result.Scale = new Vector2(0.923080027F, 0.923080027F);
                result.StrokeBrush = _colorBrush_White;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                StartProgressBoundAnimation(result, "StrokeThickness", _strokeThicknessScalarAnimation_1p5_to_4, _rootProgress);
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_90_1(), _rootProgress);
                return result;
            }

            // PreComp layer: xmark to more U
            ContainerVisual ContainerVisual_0()
            {
                var result = _c.CreateContainerVisual();
                result.Clip = InsetClip_0();
                result.IsVisible = false;
                result.Size = new Vector2(240F, 240F);
                // Scale:<1, 1>
                result.TransformMatrix = new Matrix4x4(1F, 0F, 0F, 0F, 0F, 1F, 0F, 0F, 0F, 0F, 0F, 0F, 0F, 0F, 0F, 1F);
                // Transforms for xmark to more U Scale(1,1,0)
                result.Children.InsertAtTop(ShapeVisual_1());
                StartProgressBoundAnimation(result, "IsVisible", IsVisibleBooleanAnimation(), _rootProgress);
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                var children = result.Children;
                // Layer aggregator
                children.InsertAtTop(ShapeVisual_0());
                // PreComp layer: xmark to more U
                children.InsertAtTop(ContainerVisual_0());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.600000024F, 0F), new Vector2(0.400000006F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_1()
            {
                return _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction(new Vector2(0.600000024F, 0F), new Vector2(0.833000004F, 0.833000004F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_2()
            {
                return _cubicBezierEasingFunction_2 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.200000003F, 1F));
            }

            ExpressionAnimation RootProgress()
            {
                var result = _rootProgress = _c.CreateExpressionAnimation("_.Progress");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            // PreComp layer: xmark to more U
            InsetClip InsetClip_0()
            {
                var result = _c.CreateInsetClip();
                return result;
            }

            // - - - - Layer aggregator
            // - - - Layer: w 2
            // - ShapeGroup: w Scale:0.78,0.78
            // Path 3+Path 2+Path 1.PathGeometry
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_0()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_0(), StepThenHoldEasingFunction());
                // Frame 4.
                result.InsertKeyFrame(0.0533333346F, _path_0, HoldThenStepEasingFunction());
                // Frame 15.
                result.InsertKeyFrame(0.200000003F, new CompositionPath(Geometry_04()), CubicBezierEasingFunction_0());
                return result;
            }

            // - - - - - PreComp layer: xmark to more U
            // - - - - Transforms for xmark to more U Scale(1,1,0)
            // - - - Layer: w
            // - ShapeGroup: w Scale:0.78,0.78
            // Path 3+Path 2+Path 1.PathGeometry
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_1()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_2(), _stepThenHoldEasingFunction);
                // Frame 45.
                result.InsertKeyFrame(0.600000024F, _path_2, _holdThenStepEasingFunction);
                // Frame 59.
                result.InsertKeyFrame(0.786666691F, _path_0, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0F), new Vector2(0.833000004F, 1F)));
                return result;
            }

            // - - Layer aggregator
            // - Layer: w 2
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_90_0()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _holdThenStepEasingFunction);
                // Frame 16.
                result.InsertKeyFrame(0.213333338F, 90F, _c.CreateCubicBezierEasingFunction(new Vector2(0.400000006F, 0F), new Vector2(0.400000006F, 1F)));
                return result;
            }

            // - - - - PreComp layer: xmark to more U
            // - - - Transforms for xmark to more U Scale(1,1,0)
            // - - Layer: Vector 3
            // ShapeGroup: Vector 4
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_90_1()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _stepThenHoldEasingFunction);
                // Frame 30.
                result.InsertKeyFrame(0.400000006F, 0F, _holdThenStepEasingFunction);
                // Frame 45.
                result.InsertKeyFrame(0.600000024F, 90F, _cubicBezierEasingFunction_1);
                return result;
            }

            // - - - - PreComp layer: xmark to more U
            // - - - Transforms for xmark to more U Scale(1,1,0)
            // - - Layer: Vector 3
            // ShapeGroup: Vector 3
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_m90()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _stepThenHoldEasingFunction);
                // Frame 30.
                result.InsertKeyFrame(0.400000006F, 0F, _holdThenStepEasingFunction);
                // Frame 45.
                result.InsertKeyFrame(0.600000024F, -90F, _cubicBezierEasingFunction_1);
                return result;
            }

            // - - - PreComp layer: xmark to more U
            // - - Transforms for xmark to more U Scale(1,1,0)
            // - Layer: w
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_m180()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _stepThenHoldEasingFunction);
                // Frame 45.
                result.InsertKeyFrame(0.600000024F, 0F, _holdThenStepEasingFunction);
                // Frame 62.
                result.InsertKeyFrame(0.826666653F, -200F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.400000006F, 1F)));
                // Frame 70.
                result.InsertKeyFrame(0.933333337F, -180F, _cubicBezierEasingFunction_0);
                return result;
            }

            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_30_to_90()
            {
                // Frame 0.
                var result = _rotationAngleInDegreesScalarAnimation_30_to_90 = CreateScalarKeyFrameAnimation(0F, 30F, _stepThenHoldEasingFunction);
                // Frame 14.
                result.InsertKeyFrame(0.186666667F, 30F, _holdThenStepEasingFunction);
                // Frame 29.
                result.InsertKeyFrame(0.386666656F, 90F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0F, 1F)));
                return result;
            }

            // - - - PreComp layer: xmark to more U
            // - - Transforms for xmark to more U Scale(1,1,0)
            // - Layer: Vector 3
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_90_to_45()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 90F, _stepThenHoldEasingFunction);
                // Frame 30.
                result.InsertKeyFrame(0.400000006F, 90F, _holdThenStepEasingFunction);
                // Frame 45.
                result.InsertKeyFrame(0.600000024F, 45F, _cubicBezierEasingFunction_1);
                return result;
            }

            // - - - PreComp layer: xmark to more U
            // - - Transforms for xmark to more U Scale(1,1,0)
            // - Layer: Vector 3
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_90_to_135()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 90F, _stepThenHoldEasingFunction);
                // Frame 30.
                result.InsertKeyFrame(0.400000006F, 90F, _holdThenStepEasingFunction);
                // Frame 45.
                result.InsertKeyFrame(0.600000024F, 135F, _cubicBezierEasingFunction_1);
                return result;
            }

            // Scale
            ScalarKeyFrameAnimation ScalarAnimation_10_to_0()
            {
                // Frame 0.
                var result = _scalarAnimation_10_to_0 = CreateScalarKeyFrameAnimation(0F, 10F, _holdThenStepEasingFunction);
                // Frame 10.
                result.InsertKeyFrame(0.13333334F, 15F, _cubicBezierEasingFunction_0);
                // Frame 15.
                result.InsertKeyFrame(0.200000003F, 10F, CubicBezierEasingFunction_1());
                // Frame 16.
                result.InsertKeyFrame(0.213333338F, 0F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 1F)));
                return result;
            }

            // Scale
            ScalarKeyFrameAnimation ScalarAnimation_10_to_10()
            {
                // Frame 0.
                var result = _scalarAnimation_10_to_10 = CreateScalarKeyFrameAnimation(0F, 10F, _stepThenHoldEasingFunction);
                // Frame 45.
                result.InsertKeyFrame(0.600000024F, 10F, _holdThenStepEasingFunction);
                // Frame 54.
                result.InsertKeyFrame(0.720000029F, 13F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.699999988F, 1F)));
                // Frame 62.
                result.InsertKeyFrame(0.826666653F, 9.5F, _c.CreateCubicBezierEasingFunction(new Vector2(0.300000012F, 0F), new Vector2(0.400000006F, 1F)));
                // Frame 70.
                result.InsertKeyFrame(0.933333337F, 10F, _cubicBezierEasingFunction_0);
                return result;
            }

            // StrokeThickness
            ScalarKeyFrameAnimation StrokeThicknessScalarAnimation_1p5_to_4()
            {
                // Frame 0.
                var result = _strokeThicknessScalarAnimation_1p5_to_4 = CreateScalarKeyFrameAnimation(0F, 1.5F, _stepThenHoldEasingFunction);
                // Frame 30.
                result.InsertKeyFrame(0.400000006F, 1.5F, _holdThenStepEasingFunction);
                // Frame 45.
                result.InsertKeyFrame(0.600000024F, 4F, _cubicBezierEasingFunction_1);
                return result;
            }

            // StrokeThickness
            ScalarKeyFrameAnimation StrokeThicknessScalarAnimation_3_to_1p5()
            {
                // Frame 0.
                var result = _strokeThicknessScalarAnimation_3_to_1p5 = CreateScalarKeyFrameAnimation(0F, 3F, _stepThenHoldEasingFunction);
                // Frame 14.
                result.InsertKeyFrame(0.186666667F, 3F, _holdThenStepEasingFunction);
                // Frame 29.
                result.InsertKeyFrame(0.386666656F, 1.5F, _cubicBezierEasingFunction_2);
                return result;
            }

            // TrimEnd
            ScalarKeyFrameAnimation TrimEndScalarAnimation_0p51_to_1()
            {
                // Frame 0.
                var result = _trimEndScalarAnimation_0p51_to_1 = CreateScalarKeyFrameAnimation(0F, 0.50999999F, _stepThenHoldEasingFunction);
                // Frame 14.
                result.InsertKeyFrame(0.186666667F, 0.50999999F, _holdThenStepEasingFunction);
                // Frame 29.
                result.InsertKeyFrame(0.386666656F, 1F, _cubicBezierEasingFunction_2);
                return result;
            }

            // TrimStart
            ScalarKeyFrameAnimation TrimStartScalarAnimation_0p49_to_0()
            {
                // Frame 0.
                var result = _trimStartScalarAnimation_0p49_to_0 = CreateScalarKeyFrameAnimation(0F, 0.49000001F, _stepThenHoldEasingFunction);
                // Frame 14.
                result.InsertKeyFrame(0.186666667F, 0.49000001F, _holdThenStepEasingFunction);
                // Frame 29.
                result.InsertKeyFrame(0.386666656F, 0F, CubicBezierEasingFunction_2());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(240F, 240F);
                var shapes = result.Shapes;
                // Layer: w 2
                shapes.Add(ContainerShape_0());
                // Layer: Vector 3
                shapes.Add(ContainerShape_2());
                return result;
            }

            // PreComp layer: xmark to more U
            // Layer aggregator
            ShapeVisual ShapeVisual_1()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(240F, 240F);
                var shapes = result.Shapes;
                // Layer: w
                shapes.Add(ContainerShape_5());
                // Layer: Vector 3
                shapes.Add(ContainerShape_7());
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // - Layer aggregator
            // Layer: w 2
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_0()
            {
                // Frame 30.
                var result = CreateVector2KeyFrameAnimation(0.400000006F, new Vector2(0F, 0F), _holdThenStepEasingFunction);
                return result;
            }

            // - Layer aggregator
            // Layer: Vector 3
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_1()
            {
                // Frame 14.
                var result = CreateVector2KeyFrameAnimation(0.186666667F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                // Frame 30.
                result.InsertKeyFrame(0.400000006F, new Vector2(0F, 0F), _holdThenStepEasingFunction);
                return result;
            }

            // - - PreComp layer: xmark to more U
            // - Transforms for xmark to more U Scale(1,1,0)
            // Layer: w
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_2()
            {
                // Frame 45.
                var result = CreateVector2KeyFrameAnimation(0.600000024F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                return result;
            }

            // - - PreComp layer: xmark to more U
            // - Transforms for xmark to more U Scale(1,1,0)
            // Layer: Vector 3
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_3()
            {
                // Frame 30.
                var result = CreateVector2KeyFrameAnimation(0.400000006F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                // Frame 45.
                result.InsertKeyFrame(0.600000024F, new Vector2(0F, 0F), _holdThenStepEasingFunction);
                return result;
            }

            internal ReactionsMore_AnimatedVisual_UAPv11(
                Compositor compositor,
                Color foreground
                )
            {
                _c = compositor;
                _f = foreground;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(240F, 240F);
            void IDisposable.Dispose() => _root?.Dispose();

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 11);
            }
        }

        sealed class ReactionsMore_AnimatedVisual_UAPv7 : Microsoft.UI.Xaml.Controls.IAnimatedVisual
        {
            const long c_durationTicks = 12500000;
            readonly Compositor _c;
            readonly Color _f;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            CanvasGeometry _geometry_2;
            CompositionColorBrush _colorBrush_White;
            CompositionPath _path;
            CompositionPathGeometry _pathGeometry_4;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            CubicBezierEasingFunction _cubicBezierEasingFunction_1;
            CubicBezierEasingFunction _cubicBezierEasingFunction_2;
            ExpressionAnimation _rootProgress;
            ScalarKeyFrameAnimation _rotationAngleInDegreesScalarAnimation_30_to_90;
            ScalarKeyFrameAnimation _scalarAnimation_10_to_0;
            ScalarKeyFrameAnimation _scalarAnimation_10_to_10;
            ScalarKeyFrameAnimation _strokeThicknessScalarAnimation_1p5_to_4;
            ScalarKeyFrameAnimation _strokeThicknessScalarAnimation_3_to_1p5;
            ScalarKeyFrameAnimation _trimEndScalarAnimation_0p51_to_1;
            ScalarKeyFrameAnimation _trimStartScalarAnimation_0p49_to_0;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            BooleanKeyFrameAnimation CreateBooleanKeyFrameAnimation(float initialProgress, bool initialValue)
            {
                var result = _c.CreateBooleanKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue);
                return result;
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            // PreComp layer: xmark to more U
            BooleanKeyFrameAnimation IsVisibleBooleanAnimation()
            {
                // Frame 30.
                var result = CreateBooleanKeyFrameAnimation(0.400000006F, true);
                return result;
            }

            // - - - - - Layer aggregator
            // - - - - Layer: w 2
            // - - ShapeGroup: w Scale:0.78,0.78
            // - Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_0()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_1(), Geometry_2(), Geometry_3() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            // - - - - - - Layer aggregator
            // - - - - - Layer: w 2
            // - - - ShapeGroup: w Scale:0.78,0.78
            // - - Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_1()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(7.7329998F, -2.25F));
                    builder.AddCubicBezier(new Vector2(9.01099968F, -2.25F), new Vector2(10F, -1.25800002F), new Vector2(10F, 0F));
                    builder.AddCubicBezier(new Vector2(10F, 1.227F), new Vector2(8.96899986F, 2.25F), new Vector2(7.7329998F, 2.25F));
                    builder.AddCubicBezier(new Vector2(6.47599983F, 2.25F), new Vector2(5.45599985F, 1.227F), new Vector2(5.45599985F, 0F));
                    builder.AddCubicBezier(new Vector2(5.45599985F, -1.24800003F), new Vector2(6.47599983F, -2.25F), new Vector2(7.7329998F, -2.25F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_2()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0.00499999989F, -2.25F));
                    builder.AddCubicBezier(new Vector2(1.27199996F, -2.25F), new Vector2(2.26200008F, -1.25800002F), new Vector2(2.26200008F, 0F));
                    builder.AddCubicBezier(new Vector2(2.26200008F, 1.227F), new Vector2(1.23099995F, 2.25F), new Vector2(0.00499999989F, 2.25F));
                    builder.AddCubicBezier(new Vector2(-1.24199998F, 2.25F), new Vector2(-2.26200008F, 1.227F), new Vector2(-2.26200008F, 0F));
                    builder.AddCubicBezier(new Vector2(-2.26200008F, -1.24800003F), new Vector2(-1.24199998F, -2.25F), new Vector2(0.00499999989F, -2.25F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = _geometry_2 = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - Layer aggregator
            // - - - - - Layer: w 2
            // - - - ShapeGroup: w Scale:0.78,0.78
            // - - Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_3()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-7.7329998F, -2.25F));
                    builder.AddCubicBezier(new Vector2(-6.44500017F, -2.25F), new Vector2(-5.4460001F, -1.25800002F), new Vector2(-5.4460001F, 0F));
                    builder.AddCubicBezier(new Vector2(-5.4460001F, 1.227F), new Vector2(-6.48600006F, 2.25F), new Vector2(-7.7329998F, 2.25F));
                    builder.AddCubicBezier(new Vector2(-8.97999954F, 2.25F), new Vector2(-10F, 1.227F), new Vector2(-10F, 0F));
                    builder.AddCubicBezier(new Vector2(-10F, -1.24800003F), new Vector2(-8.97999954F, -2.25F), new Vector2(-7.7329998F, -2.25F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_4()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(5F, -5F));
                    builder.AddLine(new Vector2(-5F, 5F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - PreComp layer: xmark to more U
            // - - - - - Transforms for xmark to more U Scale(1,1,0)
            // - - - - Layer: w
            // - - ShapeGroup: w Scale:0.78,0.78
            // - Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_5()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_6(), _geometry_2, Geometry_7() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            // - - - - - - - PreComp layer: xmark to more U
            // - - - - - - Transforms for xmark to more U Scale(1,1,0)
            // - - - - - Layer: w
            // - - - ShapeGroup: w Scale:0.78,0.78
            // - - Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_6()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(6.66400003F, -2.25F));
                    builder.AddCubicBezier(new Vector2(7.94199991F, -2.25F), new Vector2(8.93099976F, -1.25800002F), new Vector2(8.93099976F, 0F));
                    builder.AddCubicBezier(new Vector2(8.93099976F, 1.227F), new Vector2(7.9000001F, 2.25F), new Vector2(6.66400003F, 2.25F));
                    builder.AddCubicBezier(new Vector2(5.40700006F, 2.25F), new Vector2(4.38600016F, 1.227F), new Vector2(4.38600016F, 0F));
                    builder.AddCubicBezier(new Vector2(4.38600016F, -1.24800003F), new Vector2(5.40700006F, -2.25F), new Vector2(6.66400003F, -2.25F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - PreComp layer: xmark to more U
            // - - - - - - Transforms for xmark to more U Scale(1,1,0)
            // - - - - - Layer: w
            // - - - ShapeGroup: w Scale:0.78,0.78
            // - - Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_7()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-6.66400003F, -2.25F));
                    builder.AddCubicBezier(new Vector2(-5.37599993F, -2.25F), new Vector2(-4.37599993F, -1.25800002F), new Vector2(-4.37599993F, 0F));
                    builder.AddCubicBezier(new Vector2(-4.37599993F, 1.227F), new Vector2(-5.41699982F, 2.25F), new Vector2(-6.66400003F, 2.25F));
                    builder.AddCubicBezier(new Vector2(-7.91099977F, 2.25F), new Vector2(-8.93099976F, 1.227F), new Vector2(-8.93099976F, 0F));
                    builder.AddCubicBezier(new Vector2(-8.93099976F, -1.24800003F), new Vector2(-7.91099977F, -2.25F), new Vector2(-6.66400003F, -2.25F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CompositionColorBrush ColorBrush_White()
            {
                return _colorBrush_White = _c.CreateColorBrush(Color.FromArgb(0xFF, _f.R, _f.G, _f.B));
            }

            // Layer aggregator
            // Layer: w 2
            CompositionContainerShape ContainerShape_0()
            {
                var result = _c.CreateContainerShape();
                result.Shapes.Add(ContainerShape_1());
                StartProgressBoundAnimation(result, "Scale", ShapeVisibilityAnimation_0(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Layer: w 2
            CompositionContainerShape ContainerShape_1()
            {
                var result = _c.CreateContainerShape();
                result.Offset = new Vector2(120F, 120F);
                // ShapeGroup: w Scale:0.78,0.78
                result.Shapes.Add(SpriteShape_0());
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_90_0(), RootProgress());
                StartProgressBoundAnimation(result, "Scale.X", ScalarAnimation_10_to_0(), _rootProgress);
                StartProgressBoundAnimation(result, "Scale.Y", _scalarAnimation_10_to_0, _rootProgress);
                return result;
            }

            // Layer aggregator
            // Layer: Vector 3
            CompositionContainerShape ContainerShape_2()
            {
                var result = _c.CreateContainerShape();
                result.Scale = new Vector2(0F, 0F);
                var shapes = result.Shapes;
                shapes.Add(ContainerShape_3());
                shapes.Add(ContainerShape_4());
                StartProgressBoundAnimation(result, "Scale", ShapeVisibilityAnimation_1(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Layer: Vector 3
            CompositionContainerShape ContainerShape_3()
            {
                var result = _c.CreateContainerShape();
                result.Offset = new Vector2(120F, 120F);
                result.Scale = new Vector2(11F, 11F);
                // ShapeGroup: Vector 3 Scale:0.92308,0.92308
                result.Shapes.Add(SpriteShape_1());
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_30_to_90(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Layer: Vector 3
            CompositionContainerShape ContainerShape_4()
            {
                var result = _c.CreateContainerShape();
                result.Offset = new Vector2(120F, 120F);
                result.Scale = new Vector2(-11F, 11F);
                // ShapeGroup: Vector 4 Scale:0.92308,0.92308
                result.Shapes.Add(SpriteShape_2());
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_30_to_90, _rootProgress);
                return result;
            }

            // - PreComp layer: xmark to more U
            // Transforms for xmark to more U Scale(1,1,0)
            // Layer: w
            CompositionContainerShape ContainerShape_5()
            {
                var result = _c.CreateContainerShape();
                result.Scale = new Vector2(0F, 0F);
                result.Shapes.Add(ContainerShape_6());
                StartProgressBoundAnimation(result, "Scale", ShapeVisibilityAnimation_2(), _rootProgress);
                return result;
            }

            // - - PreComp layer: xmark to more U
            // - Transforms for xmark to more U Scale(1,1,0)
            // Layer: w
            CompositionContainerShape ContainerShape_6()
            {
                var result = _c.CreateContainerShape();
                result.Offset = new Vector2(120F, 120F);
                // ShapeGroup: w Scale:0.78,0.78
                result.Shapes.Add(SpriteShape_3());
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_m180(), _rootProgress);
                StartProgressBoundAnimation(result, "Scale.X", ScalarAnimation_10_to_10(), _rootProgress);
                StartProgressBoundAnimation(result, "Scale.Y", _scalarAnimation_10_to_10, _rootProgress);
                return result;
            }

            // - PreComp layer: xmark to more U
            // Transforms for xmark to more U Scale(1,1,0)
            // Layer: Vector 3
            CompositionContainerShape ContainerShape_7()
            {
                var result = _c.CreateContainerShape();
                result.Scale = new Vector2(0F, 0F);
                var shapes = result.Shapes;
                shapes.Add(ContainerShape_8());
                shapes.Add(ContainerShape_9());
                StartProgressBoundAnimation(result, "Scale", ShapeVisibilityAnimation_3(), _rootProgress);
                return result;
            }

            // - - PreComp layer: xmark to more U
            // - Transforms for xmark to more U Scale(1,1,0)
            // Layer: Vector 3
            CompositionContainerShape ContainerShape_8()
            {
                var result = _c.CreateContainerShape();
                result.Offset = new Vector2(120F, 120F);
                result.Scale = new Vector2(11F, 11F);
                // ShapeGroup: Vector 3
                result.Shapes.Add(SpriteShape_4());
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_90_to_135(), _rootProgress);
                return result;
            }

            // - - PreComp layer: xmark to more U
            // - Transforms for xmark to more U Scale(1,1,0)
            // Layer: Vector 3
            CompositionContainerShape ContainerShape_9()
            {
                var result = _c.CreateContainerShape();
                result.Offset = new Vector2(120F, 120F);
                result.Scale = new Vector2(-11F, 11F);
                // ShapeGroup: Vector 4
                result.Shapes.Add(SpriteShape_5());
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_90_to_45(), _rootProgress);
                return result;
            }

            CompositionPath Path()
            {
                var result = _path = new CompositionPath(Geometry_4());
                return result;
            }

            // - - - Layer aggregator
            // - - Layer: w 2
            // ShapeGroup: w Scale:0.78,0.78
            // Path 3+Path 2+Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_0()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_0()));
            }

            // - - - Layer aggregator
            // - - Layer: Vector 3
            // ShapeGroup: Vector 3 Scale:0.92308,0.92308
            CompositionPathGeometry PathGeometry_1()
            {
                var result = _c.CreatePathGeometry(Path());
                StartProgressBoundAnimation(result, "TrimStart", TrimStartScalarAnimation_0p49_to_0(), _rootProgress);
                StartProgressBoundAnimation(result, "TrimEnd", TrimEndScalarAnimation_0p51_to_1(), _rootProgress);
                return result;
            }

            // - - - Layer aggregator
            // - - Layer: Vector 3
            // ShapeGroup: Vector 4 Scale:0.92308,0.92308
            CompositionPathGeometry PathGeometry_2()
            {
                var result = _c.CreatePathGeometry(_path);
                StartProgressBoundAnimation(result, "TrimStart", _trimStartScalarAnimation_0p49_to_0, _rootProgress);
                StartProgressBoundAnimation(result, "TrimEnd", _trimEndScalarAnimation_0p51_to_1, _rootProgress);
                return result;
            }

            // - - - - PreComp layer: xmark to more U
            // - - - Transforms for xmark to more U Scale(1,1,0)
            // - - Layer: w
            // ShapeGroup: w Scale:0.78,0.78
            // Path 3+Path 2+Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_3()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_5()));
            }

            CompositionPathGeometry PathGeometry_4()
            {
                return _pathGeometry_4 = _c.CreatePathGeometry(_path);
            }

            // - - Layer aggregator
            // - Layer: w 2
            // Path 3+Path 2+Path 1
            CompositionSpriteShape SpriteShape_0()
            {
                // Scale:<0.78, 0.78>
                var geometry = PathGeometry_0();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.779999971F, 0F, 0F, 0.779999971F, 0F, 0F), ColorBrush_White());
                return result;
            }

            // - - Layer aggregator
            // - Layer: Vector 3
            // Path 1
            CompositionSpriteShape SpriteShape_1()
            {
                // Scale:<0.92308, 0.92308>
                var result = CreateSpriteShape(PathGeometry_1(), new Matrix3x2(0.923080027F, 0F, 0F, 0.923080027F, 0F, 0F));
                result.StrokeBrush = _colorBrush_White;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                StartProgressBoundAnimation(result, "StrokeThickness", StrokeThicknessScalarAnimation_3_to_1p5(), _rootProgress);
                return result;
            }

            // - - Layer aggregator
            // - Layer: Vector 3
            // Path 1
            CompositionSpriteShape SpriteShape_2()
            {
                // Scale:<0.92308, 0.92308>
                var result = CreateSpriteShape(PathGeometry_2(), new Matrix3x2(0.923080027F, 0F, 0F, 0.923080027F, 0F, 0F));
                result.StrokeBrush = _colorBrush_White;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                StartProgressBoundAnimation(result, "StrokeThickness", _strokeThicknessScalarAnimation_3_to_1p5, _rootProgress);
                return result;
            }

            // - - - PreComp layer: xmark to more U
            // - - Transforms for xmark to more U Scale(1,1,0)
            // - Layer: w
            // Path 3+Path 2+Path 1
            CompositionSpriteShape SpriteShape_3()
            {
                // Scale:<0.78, 0.78>
                var geometry = PathGeometry_3();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.779999971F, 0F, 0F, 0.779999971F, 0F, 0F), _colorBrush_White);
                return result;
            }

            // - - - PreComp layer: xmark to more U
            // - - Transforms for xmark to more U Scale(1,1,0)
            // - Layer: Vector 3
            // Path 1
            CompositionSpriteShape SpriteShape_4()
            {
                var result = _c.CreateSpriteShape(PathGeometry_4());
                result.Scale = new Vector2(0.923080027F, 0.923080027F);
                result.StrokeBrush = _colorBrush_White;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                StartProgressBoundAnimation(result, "StrokeThickness", StrokeThicknessScalarAnimation_1p5_to_4(), _rootProgress);
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_m90(), _rootProgress);
                return result;
            }

            // - - - PreComp layer: xmark to more U
            // - - Transforms for xmark to more U Scale(1,1,0)
            // - Layer: Vector 3
            // Path 1
            CompositionSpriteShape SpriteShape_5()
            {
                var result = _c.CreateSpriteShape(_pathGeometry_4);
                result.Scale = new Vector2(0.923080027F, 0.923080027F);
                result.StrokeBrush = _colorBrush_White;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                StartProgressBoundAnimation(result, "StrokeThickness", _strokeThicknessScalarAnimation_1p5_to_4, _rootProgress);
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_90_1(), _rootProgress);
                return result;
            }

            // PreComp layer: xmark to more U
            ContainerVisual ContainerVisual_0()
            {
                var result = _c.CreateContainerVisual();
                result.Clip = InsetClip_0();
                result.IsVisible = false;
                result.Size = new Vector2(240F, 240F);
                // Scale:<1, 1>
                result.TransformMatrix = new Matrix4x4(1F, 0F, 0F, 0F, 0F, 1F, 0F, 0F, 0F, 0F, 0F, 0F, 0F, 0F, 0F, 1F);
                // Transforms for xmark to more U Scale(1,1,0)
                result.Children.InsertAtTop(ShapeVisual_1());
                StartProgressBoundAnimation(result, "IsVisible", IsVisibleBooleanAnimation(), _rootProgress);
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                var children = result.Children;
                // Layer aggregator
                children.InsertAtTop(ShapeVisual_0());
                // PreComp layer: xmark to more U
                children.InsertAtTop(ContainerVisual_0());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.600000024F, 0F), new Vector2(0.400000006F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_1()
            {
                return _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction(new Vector2(0.600000024F, 0F), new Vector2(0.833000004F, 0.833000004F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_2()
            {
                return _cubicBezierEasingFunction_2 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.200000003F, 1F));
            }

            ExpressionAnimation RootProgress()
            {
                var result = _rootProgress = _c.CreateExpressionAnimation("_.Progress");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            // PreComp layer: xmark to more U
            InsetClip InsetClip_0()
            {
                var result = _c.CreateInsetClip();
                return result;
            }

            // - - Layer aggregator
            // - Layer: w 2
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_90_0()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, HoldThenStepEasingFunction());
                // Frame 16.
                result.InsertKeyFrame(0.213333338F, 90F, _c.CreateCubicBezierEasingFunction(new Vector2(0.400000006F, 0F), new Vector2(0.400000006F, 1F)));
                return result;
            }

            // - - - - PreComp layer: xmark to more U
            // - - - Transforms for xmark to more U Scale(1,1,0)
            // - - Layer: Vector 3
            // ShapeGroup: Vector 4
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_90_1()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _stepThenHoldEasingFunction);
                // Frame 30.
                result.InsertKeyFrame(0.400000006F, 0F, _holdThenStepEasingFunction);
                // Frame 45.
                result.InsertKeyFrame(0.600000024F, 90F, _cubicBezierEasingFunction_1);
                return result;
            }

            // - - - - PreComp layer: xmark to more U
            // - - - Transforms for xmark to more U Scale(1,1,0)
            // - - Layer: Vector 3
            // ShapeGroup: Vector 3
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_m90()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _stepThenHoldEasingFunction);
                // Frame 30.
                result.InsertKeyFrame(0.400000006F, 0F, _holdThenStepEasingFunction);
                // Frame 45.
                result.InsertKeyFrame(0.600000024F, -90F, _cubicBezierEasingFunction_1);
                return result;
            }

            // - - - PreComp layer: xmark to more U
            // - - Transforms for xmark to more U Scale(1,1,0)
            // - Layer: w
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_m180()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _stepThenHoldEasingFunction);
                // Frame 45.
                result.InsertKeyFrame(0.600000024F, 0F, _holdThenStepEasingFunction);
                // Frame 62.
                result.InsertKeyFrame(0.826666653F, -200F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.400000006F, 1F)));
                // Frame 70.
                result.InsertKeyFrame(0.933333337F, -180F, _cubicBezierEasingFunction_0);
                return result;
            }

            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_30_to_90()
            {
                // Frame 0.
                var result = _rotationAngleInDegreesScalarAnimation_30_to_90 = CreateScalarKeyFrameAnimation(0F, 30F, _stepThenHoldEasingFunction);
                // Frame 14.
                result.InsertKeyFrame(0.186666667F, 30F, _holdThenStepEasingFunction);
                // Frame 29.
                result.InsertKeyFrame(0.386666656F, 90F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0F, 1F)));
                return result;
            }

            // - - - PreComp layer: xmark to more U
            // - - Transforms for xmark to more U Scale(1,1,0)
            // - Layer: Vector 3
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_90_to_45()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 90F, _stepThenHoldEasingFunction);
                // Frame 30.
                result.InsertKeyFrame(0.400000006F, 90F, _holdThenStepEasingFunction);
                // Frame 45.
                result.InsertKeyFrame(0.600000024F, 45F, _cubicBezierEasingFunction_1);
                return result;
            }

            // - - - PreComp layer: xmark to more U
            // - - Transforms for xmark to more U Scale(1,1,0)
            // - Layer: Vector 3
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_90_to_135()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 90F, _stepThenHoldEasingFunction);
                // Frame 30.
                result.InsertKeyFrame(0.400000006F, 90F, _holdThenStepEasingFunction);
                // Frame 45.
                result.InsertKeyFrame(0.600000024F, 135F, _cubicBezierEasingFunction_1);
                return result;
            }

            // Scale
            ScalarKeyFrameAnimation ScalarAnimation_10_to_0()
            {
                // Frame 0.
                var result = _scalarAnimation_10_to_0 = CreateScalarKeyFrameAnimation(0F, 10F, _holdThenStepEasingFunction);
                // Frame 10.
                result.InsertKeyFrame(0.13333334F, 15F, CubicBezierEasingFunction_0());
                // Frame 15.
                result.InsertKeyFrame(0.200000003F, 10F, CubicBezierEasingFunction_1());
                // Frame 16.
                result.InsertKeyFrame(0.213333338F, 0F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 1F)));
                return result;
            }

            // Scale
            ScalarKeyFrameAnimation ScalarAnimation_10_to_10()
            {
                // Frame 0.
                var result = _scalarAnimation_10_to_10 = CreateScalarKeyFrameAnimation(0F, 10F, _stepThenHoldEasingFunction);
                // Frame 45.
                result.InsertKeyFrame(0.600000024F, 10F, _holdThenStepEasingFunction);
                // Frame 54.
                result.InsertKeyFrame(0.720000029F, 13F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.699999988F, 1F)));
                // Frame 62.
                result.InsertKeyFrame(0.826666653F, 9.5F, _c.CreateCubicBezierEasingFunction(new Vector2(0.300000012F, 0F), new Vector2(0.400000006F, 1F)));
                // Frame 70.
                result.InsertKeyFrame(0.933333337F, 10F, _cubicBezierEasingFunction_0);
                return result;
            }

            // StrokeThickness
            ScalarKeyFrameAnimation StrokeThicknessScalarAnimation_1p5_to_4()
            {
                // Frame 0.
                var result = _strokeThicknessScalarAnimation_1p5_to_4 = CreateScalarKeyFrameAnimation(0F, 1.5F, _stepThenHoldEasingFunction);
                // Frame 30.
                result.InsertKeyFrame(0.400000006F, 1.5F, _holdThenStepEasingFunction);
                // Frame 45.
                result.InsertKeyFrame(0.600000024F, 4F, _cubicBezierEasingFunction_1);
                return result;
            }

            // StrokeThickness
            ScalarKeyFrameAnimation StrokeThicknessScalarAnimation_3_to_1p5()
            {
                // Frame 0.
                var result = _strokeThicknessScalarAnimation_3_to_1p5 = CreateScalarKeyFrameAnimation(0F, 3F, _stepThenHoldEasingFunction);
                // Frame 14.
                result.InsertKeyFrame(0.186666667F, 3F, _holdThenStepEasingFunction);
                // Frame 29.
                result.InsertKeyFrame(0.386666656F, 1.5F, _cubicBezierEasingFunction_2);
                return result;
            }

            // TrimEnd
            ScalarKeyFrameAnimation TrimEndScalarAnimation_0p51_to_1()
            {
                // Frame 0.
                var result = _trimEndScalarAnimation_0p51_to_1 = CreateScalarKeyFrameAnimation(0F, 0.50999999F, _stepThenHoldEasingFunction);
                // Frame 14.
                result.InsertKeyFrame(0.186666667F, 0.50999999F, _holdThenStepEasingFunction);
                // Frame 29.
                result.InsertKeyFrame(0.386666656F, 1F, _cubicBezierEasingFunction_2);
                return result;
            }

            // TrimStart
            ScalarKeyFrameAnimation TrimStartScalarAnimation_0p49_to_0()
            {
                // Frame 0.
                var result = _trimStartScalarAnimation_0p49_to_0 = CreateScalarKeyFrameAnimation(0F, 0.49000001F, StepThenHoldEasingFunction());
                // Frame 14.
                result.InsertKeyFrame(0.186666667F, 0.49000001F, _holdThenStepEasingFunction);
                // Frame 29.
                result.InsertKeyFrame(0.386666656F, 0F, CubicBezierEasingFunction_2());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(240F, 240F);
                var shapes = result.Shapes;
                // Layer: w 2
                shapes.Add(ContainerShape_0());
                // Layer: Vector 3
                shapes.Add(ContainerShape_2());
                return result;
            }

            // PreComp layer: xmark to more U
            // Layer aggregator
            ShapeVisual ShapeVisual_1()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(240F, 240F);
                var shapes = result.Shapes;
                // Layer: w
                shapes.Add(ContainerShape_5());
                // Layer: Vector 3
                shapes.Add(ContainerShape_7());
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // - Layer aggregator
            // Layer: w 2
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_0()
            {
                // Frame 30.
                var result = CreateVector2KeyFrameAnimation(0.400000006F, new Vector2(0F, 0F), _holdThenStepEasingFunction);
                return result;
            }

            // - Layer aggregator
            // Layer: Vector 3
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_1()
            {
                // Frame 14.
                var result = CreateVector2KeyFrameAnimation(0.186666667F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                // Frame 30.
                result.InsertKeyFrame(0.400000006F, new Vector2(0F, 0F), _holdThenStepEasingFunction);
                return result;
            }

            // - - PreComp layer: xmark to more U
            // - Transforms for xmark to more U Scale(1,1,0)
            // Layer: w
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_2()
            {
                // Frame 45.
                var result = CreateVector2KeyFrameAnimation(0.600000024F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                return result;
            }

            // - - PreComp layer: xmark to more U
            // - Transforms for xmark to more U Scale(1,1,0)
            // Layer: Vector 3
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_3()
            {
                // Frame 30.
                var result = CreateVector2KeyFrameAnimation(0.400000006F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                // Frame 45.
                result.InsertKeyFrame(0.600000024F, new Vector2(0F, 0F), _holdThenStepEasingFunction);
                return result;
            }

            internal ReactionsMore_AnimatedVisual_UAPv7(
                Compositor compositor,
                Color foreground
                )
            {
                _c = compositor;
                _f = foreground;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(240F, 240F);
            void IDisposable.Dispose() => _root?.Dispose();

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 7);
            }
        }
    }
}
