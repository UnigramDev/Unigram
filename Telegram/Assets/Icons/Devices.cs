//
// Copyright Fela Ameghino 2015-2024
//
// Distributed under the GNU General Public License v3.0. (See accompanying
// file LICENSE or copy at https://www.gnu.org/licenses/gpl-3.0.txt)
//
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           7.1.0+ge1fa92580f
//       
//       Command:
//           LottieGen -Language CSharp -Namespace Telegram.Assets.Icons -Public -WinUIVersion 2.7 -InputFile Devices.json
//       
//       Input file:
//           Devices.json (6805 bytes created 17:41+01:00 Dec 21 2021)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ___________________________________________________________
// |       Object stats       | UAP v11 count | UAP v7 count |
// |__________________________|_______________|______________|
// | All CompositionObjects   |            70 |           56 |
// |--------------------------+---------------+--------------|
// | Expression animators     |             8 |            6 |
// | KeyFrame animators       |             8 |            6 |
// | Reference parameters     |             8 |            6 |
// | Expression operations    |             0 |            0 |
// |--------------------------+---------------+--------------|
// | Animated brushes         |             - |            - |
// | Animated gradient stops  |             - |            - |
// | ExpressionAnimations     |             1 |            1 |
// | PathKeyFrameAnimations   |             2 |            - |
// |--------------------------+---------------+--------------|
// | ContainerVisuals         |             1 |            1 |
// | ShapeVisuals             |             1 |            1 |
// |--------------------------+---------------+--------------|
// | ContainerShapes          |             - |            - |
// | CompositionSpriteShapes  |             3 |            3 |
// |--------------------------+---------------+--------------|
// | Brushes                  |             3 |            3 |
// | Gradient stops           |             2 |            2 |
// | CompositionVisualSurface |             - |            - |
// -----------------------------------------------------------
using Microsoft.Graphics.Canvas.Geometry;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.Graphics;
using Windows.UI;
using Microsoft.UI;
using Microsoft.UI.Composition;

namespace Telegram.Assets.Icons
{
    // Name:        u_devices
    // Frame rate:  60 fps
    // Frame count: 30
    // Duration:    500.0 mS
    sealed partial class Devices
        : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
        , Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
    {
        // Animation duration: 0.500 seconds.
        internal const long c_durationTicks = 5000000;

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
        {
            object ignored = null;
            return TryCreateAnimatedVisual(compositor, out ignored);
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;

            if (Devices_AnimatedVisual_UAPv11.IsRuntimeCompatible())
            {
                return
                    new Devices_AnimatedVisual_UAPv11(
                        compositor
                        );
            }

            if (Devices_AnimatedVisual_UAPv7.IsRuntimeCompatible())
            {
                return
                    new Devices_AnimatedVisual_UAPv7(
                        compositor
                        );
            }

            return null;
        }

        /// <summary>
        /// Gets the number of frames in the animation.
        /// </summary>
        public double FrameCount => 30d;

        /// <summary>
        /// Gets the frame rate of the animation.
        /// </summary>
        public double Framerate => 60d;

        /// <summary>
        /// Gets the duration of the animation.
        /// </summary>
        public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);

        /// <summary>
        /// Converts a zero-based frame number to the corresponding progress value denoting the
        /// start of the frame.
        /// </summary>
        public double FrameToProgress(double frameNumber)
        {
            return frameNumber / 30d;
        }

        /// <summary>
        /// Returns a map from marker names to corresponding progress values.
        /// </summary>
        public IReadOnlyDictionary<string, double> Markers =>
            new DictionaryStringDouble
            {
                { "NormalToPointerOver_Start", 0.0 },
                { "NormalToPointerOver_End", 1 },
            };

        /// <summary>
        /// Sets the color property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetColorProperty(string propertyName, Color value)
        {
        }

        /// <summary>
        /// Sets the scalar property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetScalarProperty(string propertyName, double value)
        {
        }

        sealed partial class Devices_AnimatedVisual_UAPv11 : Microsoft.UI.Xaml.Controls.IAnimatedVisual
        {
            const long c_durationTicks = 5000000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            CompositionPath _path_0;
            CompositionPath _path_1;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            ExpressionAnimation _rootProgress;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;
            Vector2KeyFrameAnimation _scaleVector2Animation_1;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            PathKeyFrameAnimation CreatePathKeyFrameAnimation(float initialProgress, CompositionPath initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreatePathKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CanvasGeometry Geometry_0()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_1(), Geometry_2() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            CanvasGeometry Geometry_1()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, 50F));
                    builder.AddCubicBezier(new Vector2(0F, 50F), new Vector2(75F, 50F), new Vector2(75F, 50F));
                    builder.AddCubicBezier(new Vector2(77.7610016F, 50F), new Vector2(80F, 47.7610016F), new Vector2(80F, 45F));
                    builder.AddCubicBezier(new Vector2(80F, 42.2389984F), new Vector2(77.7610016F, 40F), new Vector2(75F, 40F));
                    builder.AddCubicBezier(new Vector2(75F, 40F), new Vector2(0F, 40F), new Vector2(0F, 40F));
                    builder.AddCubicBezier(new Vector2(0F, 40F), new Vector2(0F, 50F), new Vector2(0F, 50F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_2()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-70F, -55F));
                    builder.AddCubicBezier(new Vector2(-70F, -63.2840004F), new Vector2(-63.2840004F, -70F), new Vector2(-55F, -70F));
                    builder.AddCubicBezier(new Vector2(-55F, -70F), new Vector2(55F, -70F), new Vector2(55F, -70F));
                    builder.AddCubicBezier(new Vector2(63.2840004F, -70F), new Vector2(70F, -63.2840004F), new Vector2(70F, -55F));
                    builder.AddCubicBezier(new Vector2(70F, -55F), new Vector2(70F, 15F), new Vector2(70F, 15F));
                    builder.AddCubicBezier(new Vector2(70F, 23.2840004F), new Vector2(63.2840004F, 30F), new Vector2(55F, 30F));
                    builder.AddCubicBezier(new Vector2(55F, 30F), new Vector2(0F, 30F), new Vector2(0F, 30F));
                    builder.AddCubicBezier(new Vector2(0F, 30F), new Vector2(0F, -20F), new Vector2(0F, -20F));
                    builder.AddCubicBezier(new Vector2(0F, -31.0459995F), new Vector2(-8.95400047F, -40F), new Vector2(-20F, -40F));
                    builder.AddCubicBezier(new Vector2(-20F, -40F), new Vector2(-70F, -40F), new Vector2(-70F, -40F));
                    builder.AddCubicBezier(new Vector2(-70F, -40F), new Vector2(-70F, -55F), new Vector2(-70F, -55F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_3()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_4(), Geometry_5() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            CanvasGeometry Geometry_4()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-30F, 50F));
                    builder.AddCubicBezier(new Vector2(-30F, 50F), new Vector2(75F, 50F), new Vector2(75F, 50F));
                    builder.AddCubicBezier(new Vector2(77.7610016F, 50F), new Vector2(80F, 47.7610016F), new Vector2(80F, 45F));
                    builder.AddCubicBezier(new Vector2(80F, 42.2389984F), new Vector2(77.7610016F, 40F), new Vector2(75F, 40F));
                    builder.AddCubicBezier(new Vector2(75F, 40F), new Vector2(-30F, 40F), new Vector2(-30F, 40F));
                    builder.AddCubicBezier(new Vector2(-30F, 40F), new Vector2(-30F, 50F), new Vector2(-30F, 50F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_5()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-70F, -55F));
                    builder.AddCubicBezier(new Vector2(-70F, -63.2840004F), new Vector2(-63.2840004F, -70F), new Vector2(-55F, -70F));
                    builder.AddCubicBezier(new Vector2(-55F, -70F), new Vector2(55F, -70F), new Vector2(55F, -70F));
                    builder.AddCubicBezier(new Vector2(63.2840004F, -70F), new Vector2(70F, -63.2840004F), new Vector2(70F, -55F));
                    builder.AddCubicBezier(new Vector2(70F, -55F), new Vector2(70F, 15F), new Vector2(70F, 15F));
                    builder.AddCubicBezier(new Vector2(70F, 23.2840004F), new Vector2(63.2840004F, 30F), new Vector2(55F, 30F));
                    builder.AddCubicBezier(new Vector2(55F, 30F), new Vector2(-30F, 30F), new Vector2(-30F, 30F));
                    builder.AddCubicBezier(new Vector2(-30F, 30F), new Vector2(-30F, -20F), new Vector2(-30F, -20F));
                    builder.AddCubicBezier(new Vector2(-30F, -31.0459995F), new Vector2(-38.9539986F, -40F), new Vector2(-50F, -40F));
                    builder.AddCubicBezier(new Vector2(-50F, -40F), new Vector2(-70F, -40F), new Vector2(-70F, -40F));
                    builder.AddCubicBezier(new Vector2(-70F, -40F), new Vector2(-70F, -55F), new Vector2(-70F, -55F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: icon
            // - - - ShapeGroup: Group 4
            // - Path
            CanvasGeometry Geometry_6()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-80F, -15F));
                    builder.AddCubicBezier(new Vector2(-80F, -23.2840004F), new Vector2(-73.2839966F, -30F), new Vector2(-65F, -30F));
                    builder.AddCubicBezier(new Vector2(-65F, -30F), new Vector2(-25F, -30F), new Vector2(-25F, -30F));
                    builder.AddCubicBezier(new Vector2(-16.7159996F, -30F), new Vector2(-10F, -23.2840004F), new Vector2(-10F, -15F));
                    builder.AddCubicBezier(new Vector2(-10F, -15F), new Vector2(-10F, 65F), new Vector2(-10F, 65F));
                    builder.AddCubicBezier(new Vector2(-10F, 73.2839966F), new Vector2(-16.7159996F, 80F), new Vector2(-25F, 80F));
                    builder.AddCubicBezier(new Vector2(-25F, 80F), new Vector2(-65F, 80F), new Vector2(-65F, 80F));
                    builder.AddCubicBezier(new Vector2(-73.2839966F, 80F), new Vector2(-80F, 73.2839966F), new Vector2(-80F, 65F));
                    builder.AddCubicBezier(new Vector2(-80F, 65F), new Vector2(-80F, -15F), new Vector2(-80F, -15F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: icon
            // - - - ShapeGroup: Group 4
            // - Path
            CanvasGeometry Geometry_7()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-10F, -15F));
                    builder.AddCubicBezier(new Vector2(-10F, -23.2840004F), new Vector2(-16.7159996F, -30F), new Vector2(-25F, -30F));
                    builder.AddCubicBezier(new Vector2(-25F, -30F), new Vector2(-65F, -30F), new Vector2(-65F, -30F));
                    builder.AddCubicBezier(new Vector2(-73.2839966F, -30F), new Vector2(-80F, -23.2840004F), new Vector2(-80F, -15F));
                    builder.AddCubicBezier(new Vector2(-80F, -15F), new Vector2(-80F, 65F), new Vector2(-80F, 65F));
                    builder.AddCubicBezier(new Vector2(-80F, 73.2839966F), new Vector2(-73.2839966F, 80F), new Vector2(-65F, 80F));
                    builder.AddCubicBezier(new Vector2(-65F, 80F), new Vector2(-25F, 80F), new Vector2(-25F, 80F));
                    builder.AddCubicBezier(new Vector2(-16.7159996F, 80F), new Vector2(-10F, 73.2839966F), new Vector2(-10F, 65F));
                    builder.AddCubicBezier(new Vector2(-10F, 65F), new Vector2(-10F, -15F), new Vector2(-10F, -15F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Shape tree root for layer: icon
            // - - ShapeGroup: Group 1
            CanvasGeometry Geometry_8()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(49.9780006F, 155F));
                    builder.AddLine(new Vector2(60F, 155F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - Shape tree root for layer: icon
            // ShapeGroup: Group 6
            CompositionColorBrush ColorBrush_AlmostDarkGray_FF9AA0A8()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0x9A, 0xA0, 0xA8));
            }

            // - Shape tree root for layer: icon
            // ShapeGroup: Group 1
            CompositionColorBrush ColorBrush_White()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xFF, 0xFF, 0xFF));
            }

            // - - Shape tree root for layer: icon
            // - ShapeGroup: Group 4
            // Stop 0
            CompositionColorGradientStop GradientStop_0_AlmostSkyBlue_FF63C1EC()
            {
                return _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0x63, 0xC1, 0xEC));
            }

            // - - Shape tree root for layer: icon
            // - ShapeGroup: Group 4
            // Stop 1
            CompositionColorGradientStop GradientStop_1_AlmostRoyalBlue_FF3B85D3()
            {
                return _c.CreateColorGradientStop(1F, Color.FromArgb(0xFF, 0x3B, 0x85, 0xD3));
            }

            // - Shape tree root for layer: icon
            // ShapeGroup: Group 4
            CompositionLinearGradientBrush LinearGradientBrush()
            {
                var result = _c.CreateLinearGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0_AlmostSkyBlue_FF63C1EC());
                colorStops.Add(GradientStop_1_AlmostRoyalBlue_FF3B85D3());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-45.5180016F, 10.4300003F);
                result.EndPoint = new Vector2(-44.0410004F, 80.0410004F);
                return result;
            }

            CompositionPath Path_0()
            {
                var result = _path_0 = new CompositionPath(Geometry_0());
                return result;
            }

            CompositionPath Path_1()
            {
                var result = _path_1 = new CompositionPath(Geometry_3());
                return result;
            }

            // - Shape tree root for layer: icon
            // ShapeGroup: Group 6
            // Path 2+Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_0()
            {
                var result = _c.CreatePathGeometry();
                StartProgressBoundAnimation(result, "Path", PathKeyFrameAnimation_0(), RootProgress());
                return result;
            }

            // - Shape tree root for layer: icon
            // ShapeGroup: Group 4
            CompositionPathGeometry PathGeometry_1()
            {
                var result = _c.CreatePathGeometry();
                StartProgressBoundAnimation(result, "Path", PathKeyFrameAnimation_1(), _rootProgress);
                return result;
            }

            // - Shape tree root for layer: icon
            // ShapeGroup: Group 1
            CompositionPathGeometry PathGeometry_2()
            {
                var result = _c.CreatePathGeometry(new CompositionPath(Geometry_8()));
                StartProgressBoundAnimation(result, "TrimStart", TrimStartScalarAnimation_0_to_0(), _rootProgress);
                StartProgressBoundAnimation(result, "TrimEnd", TrimEndScalarAnimation_1_to_1(), _rootProgress);
                return result;
            }

            // Shape tree root for layer: icon
            // Path 2+Path 1
            CompositionSpriteShape SpriteShape_0()
            {
                var result = _c.CreateSpriteShape(PathGeometry_0());
                result.Offset = new Vector2(100F, 100F);
                result.FillBrush = ColorBrush_AlmostDarkGray_FF9AA0A8();
                StartProgressBoundAnimation(result, "Scale", ScaleVector2Animation_0(), _rootProgress);
                return result;
            }

            // Shape tree root for layer: icon
            // Path 1
            CompositionSpriteShape SpriteShape_1()
            {
                var result = _c.CreateSpriteShape(PathGeometry_1());
                result.Offset = new Vector2(100F, 100F);
                result.FillBrush = LinearGradientBrush();
                StartProgressBoundAnimation(result, "Scale", ScaleVector2Animation_1(), _rootProgress);
                return result;
            }

            // Shape tree root for layer: icon
            // Path 1
            CompositionSpriteShape SpriteShape_2()
            {
                var result = _c.CreateSpriteShape(PathGeometry_2());
                result.CenterPoint = new Vector2(100F, 100F);
                result.StrokeBrush = ColorBrush_White();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 5F;
                StartProgressBoundAnimation(result, "StrokeThickness", StrokeThicknessScalarAnimation_10_to_10(), _rootProgress);
                StartProgressBoundAnimation(result, "Scale", _scaleVector2Animation_1, _rootProgress);
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                // Shape tree root for layer: icon
                result.Children.InsertAtTop(ShapeVisual_0());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.600000024F, 0F), new Vector2(0.400000006F, 1F));
            }

            ExpressionAnimation RootProgress()
            {
                var result = _rootProgress = _c.CreateExpressionAnimation("_.Progress");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            // - - Shape tree root for layer: icon
            // - ShapeGroup: Group 6
            // Path 2+Path 1.PathGeometry
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_0()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_0(), StepThenHoldEasingFunction());
                // Frame 2.
                result.InsertKeyFrame(0.0666666701F, _path_0, HoldThenStepEasingFunction());
                // Frame 14.
                result.InsertKeyFrame(0.466666669F, Path_1(), _c.CreateCubicBezierEasingFunction(new Vector2(0.600000024F, 0F), new Vector2(0.833000004F, 0.833000004F)));
                // Frame 15.
                result.InsertKeyFrame(0.5F, _path_1, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 0.833000004F)));
                // Frame 29.
                result.InsertKeyFrame(0.966666639F, _path_0, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.400000006F, 1F)));
                return result;
            }

            // - - Shape tree root for layer: icon
            // - ShapeGroup: Group 4
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_1()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, new CompositionPath(Geometry_6()), _holdThenStepEasingFunction);
                // Frame 29.
                result.InsertKeyFrame(0.966666639F, new CompositionPath(Geometry_7()), _cubicBezierEasingFunction_0);
                return result;
            }

            // - Shape tree root for layer: icon
            // ShapeGroup: Group 1
            // StrokeThickness
            ScalarKeyFrameAnimation StrokeThicknessScalarAnimation_10_to_10()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 10F, _stepThenHoldEasingFunction);
                // Frame 8.
                result.InsertKeyFrame(0.266666681F, 10F, _holdThenStepEasingFunction);
                // Frame 12.
                result.InsertKeyFrame(0.400000006F, 0F, _cubicBezierEasingFunction_0);
                // Frame 17.
                result.InsertKeyFrame(0.566666663F, 0F, _cubicBezierEasingFunction_0);
                // Frame 21.
                result.InsertKeyFrame(0.699999988F, 10F, _cubicBezierEasingFunction_0);
                return result;
            }

            // - - Shape tree root for layer: icon
            // - ShapeGroup: Group 1
            // TrimEnd
            ScalarKeyFrameAnimation TrimEndScalarAnimation_1_to_1()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 1F, _holdThenStepEasingFunction);
                // Frame 12.
                result.InsertKeyFrame(0.400000006F, 0.5F, _cubicBezierEasingFunction_0);
                // Frame 17.
                result.InsertKeyFrame(0.566666663F, 0.5F, _cubicBezierEasingFunction_0);
                // Frame 29.
                result.InsertKeyFrame(0.966666639F, 1F, _cubicBezierEasingFunction_0);
                return result;
            }

            // - - Shape tree root for layer: icon
            // - ShapeGroup: Group 1
            // TrimStart
            ScalarKeyFrameAnimation TrimStartScalarAnimation_0_to_0()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _holdThenStepEasingFunction);
                // Frame 12.
                result.InsertKeyFrame(0.400000006F, 0.5F, _cubicBezierEasingFunction_0);
                // Frame 17.
                result.InsertKeyFrame(0.566666663F, 0.5F, _cubicBezierEasingFunction_0);
                // Frame 29.
                result.InsertKeyFrame(0.966666639F, 0F, _cubicBezierEasingFunction_0);
                return result;
            }

            // Shape tree root for layer: icon
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(200F, 200F);
                var shapes = result.Shapes;
                // ShapeGroup: Group 6
                shapes.Add(SpriteShape_0());
                // ShapeGroup: Group 4
                shapes.Add(SpriteShape_1());
                // ShapeGroup: Group 1
                shapes.Add(SpriteShape_2());
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // - Shape tree root for layer: icon
            // ShapeGroup: Group 6
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_0()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                // Frame 8.
                result.InsertKeyFrame(0.266666681F, new Vector2(1.12F, 1.12F), CubicBezierEasingFunction_0());
                // Frame 16.
                result.InsertKeyFrame(0.533333361F, new Vector2(0.949999988F, 0.949999988F), _cubicBezierEasingFunction_0);
                // Frame 24.
                result.InsertKeyFrame(0.800000012F, new Vector2(1F, 1F), _cubicBezierEasingFunction_0);
                return result;
            }

            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_1()
            {
                // Frame 0.
                var result = _scaleVector2Animation_1 = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), _stepThenHoldEasingFunction);
                // Frame 3.
                result.InsertKeyFrame(0.100000001F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                // Frame 11.
                result.InsertKeyFrame(0.366666675F, new Vector2(1.12F, 1.12F), _cubicBezierEasingFunction_0);
                // Frame 19.
                result.InsertKeyFrame(0.633333325F, new Vector2(0.949999988F, 0.949999988F), _cubicBezierEasingFunction_0);
                // Frame 27.
                result.InsertKeyFrame(0.899999976F, new Vector2(1F, 1F), _cubicBezierEasingFunction_0);
                return result;
            }

            internal Devices_AnimatedVisual_UAPv11(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(200F, 200F);
            void IDisposable.Dispose() => _root?.Dispose();

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 11);
            }
        }

        sealed partial class Devices_AnimatedVisual_UAPv7 : Microsoft.UI.Xaml.Controls.IAnimatedVisual
        {
            const long c_durationTicks = 5000000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            ExpressionAnimation _rootProgress;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;
            Vector2KeyFrameAnimation _scaleVector2Animation_1;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            // - - - Shape tree root for layer: icon
            // - - ShapeGroup: Group 6
            // - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_0()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_1(), Geometry_2() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            // - - - - Shape tree root for layer: icon
            // - - - ShapeGroup: Group 6
            // - - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_1()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, 50F));
                    builder.AddLine(new Vector2(75F, 50F));
                    builder.AddCubicBezier(new Vector2(77.7610016F, 50F), new Vector2(80F, 47.7610016F), new Vector2(80F, 45F));
                    builder.AddCubicBezier(new Vector2(80F, 42.2389984F), new Vector2(77.7610016F, 40F), new Vector2(75F, 40F));
                    builder.AddLine(new Vector2(0F, 40F));
                    builder.AddLine(new Vector2(0F, 50F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: icon
            // - - - ShapeGroup: Group 6
            // - - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_2()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-70F, -55F));
                    builder.AddCubicBezier(new Vector2(-70F, -63.2840004F), new Vector2(-63.2840004F, -70F), new Vector2(-55F, -70F));
                    builder.AddLine(new Vector2(55F, -70F));
                    builder.AddCubicBezier(new Vector2(63.2840004F, -70F), new Vector2(70F, -63.2840004F), new Vector2(70F, -55F));
                    builder.AddLine(new Vector2(70F, 15F));
                    builder.AddCubicBezier(new Vector2(70F, 23.2840004F), new Vector2(63.2840004F, 30F), new Vector2(55F, 30F));
                    builder.AddLine(new Vector2(0F, 30F));
                    builder.AddLine(new Vector2(0F, -20F));
                    builder.AddCubicBezier(new Vector2(0F, -31.0459995F), new Vector2(-8.95400047F, -40F), new Vector2(-20F, -40F));
                    builder.AddLine(new Vector2(-70F, -40F));
                    builder.AddLine(new Vector2(-70F, -55F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Shape tree root for layer: icon
            // - - ShapeGroup: Group 4
            CanvasGeometry Geometry_3()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-80F, -15F));
                    builder.AddCubicBezier(new Vector2(-80F, -23.2840004F), new Vector2(-73.2839966F, -30F), new Vector2(-65F, -30F));
                    builder.AddLine(new Vector2(-25F, -30F));
                    builder.AddCubicBezier(new Vector2(-16.7159996F, -30F), new Vector2(-10F, -23.2840004F), new Vector2(-10F, -15F));
                    builder.AddLine(new Vector2(-10F, 65F));
                    builder.AddCubicBezier(new Vector2(-10F, 73.2839966F), new Vector2(-16.7159996F, 80F), new Vector2(-25F, 80F));
                    builder.AddLine(new Vector2(-65F, 80F));
                    builder.AddCubicBezier(new Vector2(-73.2839966F, 80F), new Vector2(-80F, 73.2839966F), new Vector2(-80F, 65F));
                    builder.AddLine(new Vector2(-80F, -15F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Shape tree root for layer: icon
            // - - ShapeGroup: Group 1
            CanvasGeometry Geometry_4()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(49.9780006F, 155F));
                    builder.AddLine(new Vector2(60F, 155F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - Shape tree root for layer: icon
            // ShapeGroup: Group 6
            CompositionColorBrush ColorBrush_AlmostDarkGray_FF9AA0A8()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0x9A, 0xA0, 0xA8));
            }

            // - Shape tree root for layer: icon
            // ShapeGroup: Group 1
            CompositionColorBrush ColorBrush_White()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xFF, 0xFF, 0xFF));
            }

            // - - Shape tree root for layer: icon
            // - ShapeGroup: Group 4
            // Stop 0
            CompositionColorGradientStop GradientStop_0_AlmostSkyBlue_FF63C1EC()
            {
                return _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0x63, 0xC1, 0xEC));
            }

            // - - Shape tree root for layer: icon
            // - ShapeGroup: Group 4
            // Stop 1
            CompositionColorGradientStop GradientStop_1_AlmostRoyalBlue_FF3B85D3()
            {
                return _c.CreateColorGradientStop(1F, Color.FromArgb(0xFF, 0x3B, 0x85, 0xD3));
            }

            // - Shape tree root for layer: icon
            // ShapeGroup: Group 4
            CompositionLinearGradientBrush LinearGradientBrush()
            {
                var result = _c.CreateLinearGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0_AlmostSkyBlue_FF63C1EC());
                colorStops.Add(GradientStop_1_AlmostRoyalBlue_FF3B85D3());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-45.5180016F, 10.4300003F);
                result.EndPoint = new Vector2(-44.0410004F, 80.0410004F);
                return result;
            }

            // - Shape tree root for layer: icon
            // ShapeGroup: Group 6
            // Path 2+Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_0()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_0()));
            }

            // - Shape tree root for layer: icon
            // ShapeGroup: Group 4
            CompositionPathGeometry PathGeometry_1()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_3()));
            }

            // - Shape tree root for layer: icon
            // ShapeGroup: Group 1
            CompositionPathGeometry PathGeometry_2()
            {
                var result = _c.CreatePathGeometry(new CompositionPath(Geometry_4()));
                StartProgressBoundAnimation(result, "TrimStart", TrimStartScalarAnimation_0_to_0(), _rootProgress);
                StartProgressBoundAnimation(result, "TrimEnd", TrimEndScalarAnimation_1_to_1(), _rootProgress);
                return result;
            }

            // Shape tree root for layer: icon
            // Path 2+Path 1
            CompositionSpriteShape SpriteShape_0()
            {
                var result = _c.CreateSpriteShape(PathGeometry_0());
                result.Offset = new Vector2(100F, 100F);
                result.FillBrush = ColorBrush_AlmostDarkGray_FF9AA0A8();
                StartProgressBoundAnimation(result, "Scale", ScaleVector2Animation_0(), RootProgress());
                return result;
            }

            // Shape tree root for layer: icon
            // Path 1
            CompositionSpriteShape SpriteShape_1()
            {
                var result = _c.CreateSpriteShape(PathGeometry_1());
                result.Offset = new Vector2(100F, 100F);
                result.FillBrush = LinearGradientBrush();
                StartProgressBoundAnimation(result, "Scale", ScaleVector2Animation_1(), _rootProgress);
                return result;
            }

            // Shape tree root for layer: icon
            // Path 1
            CompositionSpriteShape SpriteShape_2()
            {
                var result = _c.CreateSpriteShape(PathGeometry_2());
                result.CenterPoint = new Vector2(100F, 100F);
                result.StrokeBrush = ColorBrush_White();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 5F;
                StartProgressBoundAnimation(result, "StrokeThickness", StrokeThicknessScalarAnimation_10_to_10(), _rootProgress);
                StartProgressBoundAnimation(result, "Scale", _scaleVector2Animation_1, _rootProgress);
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                // Shape tree root for layer: icon
                result.Children.InsertAtTop(ShapeVisual_0());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.600000024F, 0F), new Vector2(0.400000006F, 1F));
            }

            ExpressionAnimation RootProgress()
            {
                var result = _rootProgress = _c.CreateExpressionAnimation("_.Progress");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            // - Shape tree root for layer: icon
            // ShapeGroup: Group 1
            // StrokeThickness
            ScalarKeyFrameAnimation StrokeThicknessScalarAnimation_10_to_10()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 10F, _stepThenHoldEasingFunction);
                // Frame 8.
                result.InsertKeyFrame(0.266666681F, 10F, _holdThenStepEasingFunction);
                // Frame 12.
                result.InsertKeyFrame(0.400000006F, 0F, _cubicBezierEasingFunction_0);
                // Frame 17.
                result.InsertKeyFrame(0.566666663F, 0F, _cubicBezierEasingFunction_0);
                // Frame 21.
                result.InsertKeyFrame(0.699999988F, 10F, _cubicBezierEasingFunction_0);
                return result;
            }

            // - - Shape tree root for layer: icon
            // - ShapeGroup: Group 1
            // TrimEnd
            ScalarKeyFrameAnimation TrimEndScalarAnimation_1_to_1()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 1F, _holdThenStepEasingFunction);
                // Frame 12.
                result.InsertKeyFrame(0.400000006F, 0.5F, _cubicBezierEasingFunction_0);
                // Frame 17.
                result.InsertKeyFrame(0.566666663F, 0.5F, _cubicBezierEasingFunction_0);
                // Frame 29.
                result.InsertKeyFrame(0.966666639F, 1F, _cubicBezierEasingFunction_0);
                return result;
            }

            // - - Shape tree root for layer: icon
            // - ShapeGroup: Group 1
            // TrimStart
            ScalarKeyFrameAnimation TrimStartScalarAnimation_0_to_0()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _holdThenStepEasingFunction);
                // Frame 12.
                result.InsertKeyFrame(0.400000006F, 0.5F, _cubicBezierEasingFunction_0);
                // Frame 17.
                result.InsertKeyFrame(0.566666663F, 0.5F, _cubicBezierEasingFunction_0);
                // Frame 29.
                result.InsertKeyFrame(0.966666639F, 0F, _cubicBezierEasingFunction_0);
                return result;
            }

            // Shape tree root for layer: icon
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(200F, 200F);
                var shapes = result.Shapes;
                // ShapeGroup: Group 6
                shapes.Add(SpriteShape_0());
                // ShapeGroup: Group 4
                shapes.Add(SpriteShape_1());
                // ShapeGroup: Group 1
                shapes.Add(SpriteShape_2());
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // - Shape tree root for layer: icon
            // ShapeGroup: Group 6
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_0()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                // Frame 8.
                result.InsertKeyFrame(0.266666681F, new Vector2(1.12F, 1.12F), CubicBezierEasingFunction_0());
                // Frame 16.
                result.InsertKeyFrame(0.533333361F, new Vector2(0.949999988F, 0.949999988F), _cubicBezierEasingFunction_0);
                // Frame 24.
                result.InsertKeyFrame(0.800000012F, new Vector2(1F, 1F), _cubicBezierEasingFunction_0);
                return result;
            }

            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_1()
            {
                // Frame 0.
                var result = _scaleVector2Animation_1 = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.100000001F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                // Frame 11.
                result.InsertKeyFrame(0.366666675F, new Vector2(1.12F, 1.12F), _cubicBezierEasingFunction_0);
                // Frame 19.
                result.InsertKeyFrame(0.633333325F, new Vector2(0.949999988F, 0.949999988F), _cubicBezierEasingFunction_0);
                // Frame 27.
                result.InsertKeyFrame(0.899999976F, new Vector2(1F, 1F), _cubicBezierEasingFunction_0);
                return result;
            }

            internal Devices_AnimatedVisual_UAPv7(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(200F, 200F);
            void IDisposable.Dispose() => _root?.Dispose();

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 7);
            }
        }
    }
}
