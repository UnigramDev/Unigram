//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           7.1.2-build.24+g767465b091
//       
//       Command:
//           LottieGen -GenerateColorBindings -Language CSharp -Namespace Telegram.Assets.Icons -Public -WinUIVersion 2.8 -InputFile Dots.json
//       
//       Input file:
//           Dots.json (4081 bytes created 16:32+04:00 Apr 24 2023)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ___________________________________________________________
// |       Object stats       | UAP v15 count | UAP v7 count |
// |__________________________|_______________|______________|
// | All CompositionObjects   |            51 |           59 |
// |--------------------------+---------------+--------------|
// | Expression animators     |             4 |            8 |
// | KeyFrame animators       |             5 |            5 |
// | Reference parameters     |             6 |           10 |
// | Expression operations    |             4 |            4 |
// |--------------------------+---------------+--------------|
// | Animated brushes         |             1 |            1 |
// | Animated gradient stops  |             - |            - |
// | ExpressionAnimations     |             2 |            2 |
// | PathKeyFrameAnimations   |             - |            - |
// |--------------------------+---------------+--------------|
// | ContainerVisuals         |             2 |            2 |
// | ShapeVisuals             |             1 |            1 |
// |--------------------------+---------------+--------------|
// | ContainerShapes          |             - |            - |
// | CompositionSpriteShapes  |             3 |            3 |
// |--------------------------+---------------+--------------|
// | Brushes                  |             1 |            1 |
// | Gradient stops           |             - |            - |
// | CompositionVisualSurface |             - |            - |
// -----------------------------------------------------------
using Microsoft.Graphics.Canvas.Geometry;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.Graphics;
using Windows.UI;
using Microsoft.UI;
using Microsoft.UI.Composition;

namespace Telegram.Assets.Icons
{
    // Name:        ccaDots
    // Frame rate:  60 fps
    // Frame count: 60
    // Duration:    1000.0 mS
    // ___________________________________________________________
    // | Theme property |   Accessor   | Type  |  Default value  |
    // |________________|______________|_______|_________________|
    // | #000000        | Foreground   | Color | #FF000000 Black |
    // -----------------------------------------------------------
    public sealed partial class Dots
        : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
        , Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
    {
        // Animation duration: 1.000 seconds.
        internal const long c_durationTicks = 10000000;

        // Theme property: Foreground.
        internal static readonly Color c_themeForeground = Color.FromArgb(0xFF, 0x00, 0x00, 0x00);

        CompositionPropertySet _themeProperties;
        Color _themeForeground = c_themeForeground;

        // Theme properties.
        public Color Foreground
        {
            get => _themeForeground;
            set
            {
                _themeForeground = value;
                if (_themeProperties != null)
                {
                    _themeProperties.InsertVector4("Foreground", ColorAsVector4((Color)_themeForeground));
                }
            }
        }

        static Vector4 ColorAsVector4(Color color) => new Vector4(color.R, color.G, color.B, color.A);

        CompositionPropertySet EnsureThemeProperties(Compositor compositor)
        {
            if (_themeProperties == null)
            {
                _themeProperties = compositor.CreatePropertySet();
                _themeProperties.InsertVector4("Foreground", ColorAsVector4((Color)Foreground));
            }
            return _themeProperties;
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
        {
            object ignored = null;
            return TryCreateAnimatedVisual(compositor, out ignored);
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;
            EnsureThemeProperties(compositor);

            if (Dots_AnimatedVisual_UAPv15.IsRuntimeCompatible())
            {
                var res =
                    new Dots_AnimatedVisual_UAPv15(
                        compositor,
                        _themeProperties
                        );
                res.CreateAnimations();
                return res;
            }

            if (Dots_AnimatedVisual_UAPv7.IsRuntimeCompatible())
            {
                var res =
                    new Dots_AnimatedVisual_UAPv7(
                        compositor,
                        _themeProperties
                        );
                res.CreateAnimations();
                return res;
            }

            return null;
        }

        /// <summary>
        /// Gets the number of frames in the animation.
        /// </summary>
        public double FrameCount => 60d;

        /// <summary>
        /// Gets the frame rate of the animation.
        /// </summary>
        public double Framerate => 60d;

        /// <summary>
        /// Gets the duration of the animation.
        /// </summary>
        public TimeSpan Duration => TimeSpan.FromTicks(10000000);

        /// <summary>
        /// Converts a zero-based frame number to the corresponding progress value denoting the
        /// start of the frame.
        /// </summary>
        public double FrameToProgress(double frameNumber)
        {
            return frameNumber / 60d;
        }

        /// <summary>
        /// Returns a map from marker names to corresponding progress values.
        /// </summary>
        public IReadOnlyDictionary<string, double> Markers =>
            new Dictionary<string, double>
            {
            };

        /// <summary>
        /// Sets the color property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetColorProperty(string propertyName, Color value)
        {
            if (propertyName == "Foreground")
            {
                _themeForeground = value;
            }
            else
            {
                return;
            }

            if (_themeProperties != null)
            {
                _themeProperties.InsertVector4(propertyName, ColorAsVector4(value));
            }
        }

        /// <summary>
        /// Sets the scalar property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetScalarProperty(string propertyName, double value)
        {
        }

        sealed partial class Dots_AnimatedVisual_UAPv15 : Microsoft.UI.Xaml.Controls.IAnimatedVisual2
        {
            const long c_durationTicks = 10000000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            readonly CompositionPropertySet _themeProperties;
            AnimationController _animationController_0;
            CompositionColorBrush _themeColor_Foreground;
            CompositionSpriteShape _spriteShape_0;
            CompositionSpriteShape _spriteShape_1;
            CompositionSpriteShape _spriteShape_2;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            AnimationController AnimationController_0()
            {
                if (_animationController_0 != null) { return _animationController_0; }
                var result = _animationController_0 = _c.CreateAnimationController();
                result.Pause();
                BindProperty(_animationController_0, "Progress", "_.Progress", "_", _root);
                return result;
            }

            // - - - - PreComp layer: Comp 1
            // - - - Layer aggregator
            // - - ShapeGroup: Group 1
            CanvasGeometry Geometry_0()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(102.400002F, -32F));
                    builder.AddCubicBezier(new Vector2(120.072998F, -32F), new Vector2(134.399994F, -17.6730003F), new Vector2(134.399994F, 0F));
                    builder.AddCubicBezier(new Vector2(134.399994F, 17.6730003F), new Vector2(120.072998F, 32F), new Vector2(102.400002F, 32F));
                    builder.AddCubicBezier(new Vector2(84.7269974F, 32F), new Vector2(70.4000015F, 17.6730003F), new Vector2(70.4000015F, 0F));
                    builder.AddCubicBezier(new Vector2(70.4000015F, -17.6730003F), new Vector2(84.7269974F, -32F), new Vector2(102.400002F, -32F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Comp 1
            // - - - Layer aggregator
            // - - ShapeGroup: Group 1
            CanvasGeometry Geometry_1()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, -32F));
                    builder.AddCubicBezier(new Vector2(17.6730003F, -32F), new Vector2(32F, -17.6730003F), new Vector2(32F, 0F));
                    builder.AddCubicBezier(new Vector2(32F, 17.6730003F), new Vector2(17.6730003F, 32F), new Vector2(0F, 32F));
                    builder.AddCubicBezier(new Vector2(-17.6730003F, 32F), new Vector2(-32F, 17.6730003F), new Vector2(-32F, 0F));
                    builder.AddCubicBezier(new Vector2(-32F, -17.6730003F), new Vector2(-17.6730003F, -32F), new Vector2(0F, -32F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Comp 1
            // - - - Layer aggregator
            // - - ShapeGroup: Group 1
            CanvasGeometry Geometry_2()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-102.400002F, -32F));
                    builder.AddCubicBezier(new Vector2(-84.7269974F, -32F), new Vector2(-70.4000015F, -17.6730003F), new Vector2(-70.4000015F, 0F));
                    builder.AddCubicBezier(new Vector2(-70.4000015F, 17.6730003F), new Vector2(-84.7269974F, 32F), new Vector2(-102.400002F, 32F));
                    builder.AddCubicBezier(new Vector2(-120.072998F, 32F), new Vector2(-134.399994F, 17.6730003F), new Vector2(-134.399994F, 0F));
                    builder.AddCubicBezier(new Vector2(-134.399994F, -17.6730003F), new Vector2(-120.072998F, -32F), new Vector2(-102.400002F, -32F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // Color bound to theme property value: Foreground
            CompositionColorBrush ThemeColor_Foreground()
            {
                if (_themeColor_Foreground != null) { return _themeColor_Foreground; }
                var result = _themeColor_Foreground = _c.CreateColorBrush();
                BindProperty(_themeColor_Foreground, "Color", "ColorRGB(_theme.Foreground.W,_theme.Foreground.X,_theme.Foreground.Y,_theme.Foreground.Z)", "_theme", _themeProperties);
                return result;
            }

            // - - PreComp layer: Comp 1
            // - Layer aggregator
            // ShapeGroup: Group 1
            CompositionPathGeometry PathGeometry_0()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_0()));
            }

            // - - PreComp layer: Comp 1
            // - Layer aggregator
            // ShapeGroup: Group 1
            CompositionPathGeometry PathGeometry_1()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_1()));
            }

            // - - PreComp layer: Comp 1
            // - Layer aggregator
            // ShapeGroup: Group 1
            CompositionPathGeometry PathGeometry_2()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_2()));
            }

            // - PreComp layer: Comp 1
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_0()
            {
                if (_spriteShape_0 != null) { return _spriteShape_0; }
                var result = _spriteShape_0 = _c.CreateSpriteShape(PathGeometry_0());
                result.FillBrush = ThemeColor_Foreground();
                return result;
            }

            // - PreComp layer: Comp 1
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_1()
            {
                if (_spriteShape_1 != null) { return _spriteShape_1; }
                var result = _spriteShape_1 = _c.CreateSpriteShape(PathGeometry_1());
                result.FillBrush = ThemeColor_Foreground();
                return result;
            }

            // - PreComp layer: Comp 1
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_2()
            {
                if (_spriteShape_2 != null) { return _spriteShape_2; }
                var result = _spriteShape_2 = _c.CreateSpriteShape(PathGeometry_2());
                result.FillBrush = ThemeColor_Foreground();
                return result;
            }

            // Transforms for Comp 1 Scale(0.095,0.095,0), Offset(-232,-213,0)
            ContainerVisual ContainerVisual_0()
            {
                var result = _c.CreateContainerVisual();
                result.Clip = InsetClip_0();
                result.Size = new Vector2(512F, 512F);
                // Offset:<-0.32000732, 18.679993>, Scale:<0.095, 0.095>
                result.TransformMatrix = new Matrix4x4(0.0949999988F, 0F, 0F, 0F, 0F, 0.0949999988F, 0F, 0F, 0F, 0F, 0F, 0F, -0.320007324F, 18.6799927F, 0F, 1F);
                // Layer aggregator
                result.Children.InsertAtTop(ShapeVisual_0());
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                if (_root != null) { return _root; }
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                propertySet.InsertScalar("t0", 0F);
                propertySet.InsertScalar("t1", 0F);
                // PreComp layer: Comp 1
                result.Children.InsertAtTop(ContainerVisual_0());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return (_cubicBezierEasingFunction_0 == null)
                    ? _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.699999988F, 0F), new Vector2(0.699999988F, 1F))
                    : _cubicBezierEasingFunction_0;
            }

            // PreComp layer: Comp 1
            InsetClip InsetClip_0()
            {
                var result = _c.CreateInsetClip();
                return result;
            }

            ScalarKeyFrameAnimation t0ScalarAnimation_0_to_1()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 20.
                result.InsertKeyFrame(0.333333313F, 1F, CubicBezierEasingFunction_0());
                return result;
            }

            ScalarKeyFrameAnimation t1ScalarAnimation_0_to_1()
            {
                // Frame 12.
                var result = CreateScalarKeyFrameAnimation(0.200000018F, 0F, StepThenHoldEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 32.
                result.InsertKeyFrame(0.533333302F, 1F, CubicBezierEasingFunction_0());
                return result;
            }

            // PreComp layer: Comp 1
            // Layer aggregator
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(512F, 512F);
                var shapes = result.Shapes;
                // ShapeGroup: Group 1
                shapes.Add(SpriteShape_0());
                // ShapeGroup: Group 1
                shapes.Add(SpriteShape_1());
                // ShapeGroup: Group 1
                shapes.Add(SpriteShape_2());
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                if (_holdThenStepEasingFunction != null) { return _holdThenStepEasingFunction; }
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                if (_stepThenHoldEasingFunction != null) { return _stepThenHoldEasingFunction; }
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // - - PreComp layer: Comp 1
            // - Layer aggregator
            // ShapeGroup: Group 1
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_0()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(291F, 256F), HoldThenStepEasingFunction());
                // Frame 40.
                result.InsertKeyFrame(0.666666687F, new Vector2(16.1620007F, 255.968994F), _c.CreateCubicBezierEasingFunction(new Vector2(0.300000012F, 0F), new Vector2(0.400000006F, 1F)));
                return result;
            }

            // - - PreComp layer: Comp 1
            // - Layer aggregator
            // ShapeGroup: Group 1
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_1()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(256F, 256F), HoldThenStepEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 20.
                result.InsertExpressionKeyFrame(0.333333313F, "Pow(1-_.t0,3)*Vector2(256,256)+(3*Square(1-_.t0)*_.t0*Vector2(257.75,146))+(3*(1-_.t0)*Square(_.t0)*Vector2(388,183.75))+(Pow(_.t0,3)*Vector2(393.25,276.969))", StepThenHoldEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.333333343F, new Vector2(393.25F, 276.968994F), StepThenHoldEasingFunction());
                // Frame 30.
                result.InsertKeyFrame(0.5F, new Vector2(393.25F, 255.968994F), _c.CreateCubicBezierEasingFunction(new Vector2(0.300000012F, 0F), new Vector2(0.419999987F, 1F)));
                return result;
            }

            // - - PreComp layer: Comp 1
            // - Layer aggregator
            // ShapeGroup: Group 1
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_2()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(221F, 256F), StepThenHoldEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 12.
                result.InsertKeyFrame(0.200000003F, new Vector2(221F, 256F), HoldThenStepEasingFunction());
                // Frame 32.
                result.InsertExpressionKeyFrame(0.533333302F, "Pow(1-_.t1,3)*Vector2(221,256)+(3*Square(1-_.t1)*_.t1*Vector2(220.4,137))+(3*(1-_.t1)*Square(_.t1)*Vector2(356.9,183))+(Pow(_.t1,3)*Vector2(358.338,275.469))", StepThenHoldEasingFunction());
                // Frame 32.
                result.InsertKeyFrame(0.533333361F, new Vector2(358.338013F, 275.468994F), StepThenHoldEasingFunction());
                // Frame 42.
                result.InsertKeyFrame(0.699999988F, new Vector2(358.338013F, 255.968994F), _c.CreateCubicBezierEasingFunction(new Vector2(0.319999993F, 0F), new Vector2(0.400000006F, 1F)));
                return result;
            }

            internal Dots_AnimatedVisual_UAPv15(
                Compositor compositor,
                CompositionPropertySet themeProperties
                )
            {
                _c = compositor;
                _themeProperties = themeProperties;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(48F, 60F);
            void IDisposable.Dispose() => _root?.Dispose();

            public void CreateAnimations()
            {
                _spriteShape_0.StartAnimation("Offset", OffsetVector2Animation_0(), AnimationController_0());
                _spriteShape_1.StartAnimation("Offset", OffsetVector2Animation_1(), AnimationController_0());
                _spriteShape_2.StartAnimation("Offset", OffsetVector2Animation_2(), AnimationController_0());
                _root.Properties.StartAnimation("t0", t0ScalarAnimation_0_to_1(), AnimationController_0());
                _root.Properties.StartAnimation("t1", t1ScalarAnimation_0_to_1(), AnimationController_0());
            }

            public void DestroyAnimations()
            {
                _spriteShape_0.StopAnimation("Offset");
                _spriteShape_1.StopAnimation("Offset");
                _spriteShape_2.StopAnimation("Offset");
                _root.Properties.StopAnimation("t0");
                _root.Properties.StopAnimation("t1");
            }

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 15);
            }
        }

        sealed partial class Dots_AnimatedVisual_UAPv7 : Microsoft.UI.Xaml.Controls.IAnimatedVisual2
        {
            const long c_durationTicks = 10000000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            readonly CompositionPropertySet _themeProperties;
            CompositionColorBrush _themeColor_Foreground;
            CompositionSpriteShape _spriteShape_0;
            CompositionSpriteShape _spriteShape_1;
            CompositionSpriteShape _spriteShape_2;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            ExpressionAnimation _rootProgress;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            // - - - - PreComp layer: Comp 1
            // - - - Layer aggregator
            // - - ShapeGroup: Group 1
            CanvasGeometry Geometry_0()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(102.400002F, -32F));
                    builder.AddCubicBezier(new Vector2(120.072998F, -32F), new Vector2(134.399994F, -17.6730003F), new Vector2(134.399994F, 0F));
                    builder.AddCubicBezier(new Vector2(134.399994F, 17.6730003F), new Vector2(120.072998F, 32F), new Vector2(102.400002F, 32F));
                    builder.AddCubicBezier(new Vector2(84.7269974F, 32F), new Vector2(70.4000015F, 17.6730003F), new Vector2(70.4000015F, 0F));
                    builder.AddCubicBezier(new Vector2(70.4000015F, -17.6730003F), new Vector2(84.7269974F, -32F), new Vector2(102.400002F, -32F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Comp 1
            // - - - Layer aggregator
            // - - ShapeGroup: Group 1
            CanvasGeometry Geometry_1()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, -32F));
                    builder.AddCubicBezier(new Vector2(17.6730003F, -32F), new Vector2(32F, -17.6730003F), new Vector2(32F, 0F));
                    builder.AddCubicBezier(new Vector2(32F, 17.6730003F), new Vector2(17.6730003F, 32F), new Vector2(0F, 32F));
                    builder.AddCubicBezier(new Vector2(-17.6730003F, 32F), new Vector2(-32F, 17.6730003F), new Vector2(-32F, 0F));
                    builder.AddCubicBezier(new Vector2(-32F, -17.6730003F), new Vector2(-17.6730003F, -32F), new Vector2(0F, -32F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Comp 1
            // - - - Layer aggregator
            // - - ShapeGroup: Group 1
            CanvasGeometry Geometry_2()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-102.400002F, -32F));
                    builder.AddCubicBezier(new Vector2(-84.7269974F, -32F), new Vector2(-70.4000015F, -17.6730003F), new Vector2(-70.4000015F, 0F));
                    builder.AddCubicBezier(new Vector2(-70.4000015F, 17.6730003F), new Vector2(-84.7269974F, 32F), new Vector2(-102.400002F, 32F));
                    builder.AddCubicBezier(new Vector2(-120.072998F, 32F), new Vector2(-134.399994F, 17.6730003F), new Vector2(-134.399994F, 0F));
                    builder.AddCubicBezier(new Vector2(-134.399994F, -17.6730003F), new Vector2(-120.072998F, -32F), new Vector2(-102.400002F, -32F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // Color bound to theme property value: Foreground
            CompositionColorBrush ThemeColor_Foreground()
            {
                if (_themeColor_Foreground != null) { return _themeColor_Foreground; }
                var result = _themeColor_Foreground = _c.CreateColorBrush();
                BindProperty(_themeColor_Foreground, "Color", "ColorRGB(_theme.Foreground.W,_theme.Foreground.X,_theme.Foreground.Y,_theme.Foreground.Z)", "_theme", _themeProperties);
                return result;
            }

            // - - PreComp layer: Comp 1
            // - Layer aggregator
            // ShapeGroup: Group 1
            CompositionPathGeometry PathGeometry_0()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_0()));
            }

            // - - PreComp layer: Comp 1
            // - Layer aggregator
            // ShapeGroup: Group 1
            CompositionPathGeometry PathGeometry_1()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_1()));
            }

            // - - PreComp layer: Comp 1
            // - Layer aggregator
            // ShapeGroup: Group 1
            CompositionPathGeometry PathGeometry_2()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_2()));
            }

            // - PreComp layer: Comp 1
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_0()
            {
                if (_spriteShape_0 != null) { return _spriteShape_0; }
                var result = _spriteShape_0 = _c.CreateSpriteShape(PathGeometry_0());
                result.FillBrush = ThemeColor_Foreground();
                return result;
            }

            // - PreComp layer: Comp 1
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_1()
            {
                if (_spriteShape_1 != null) { return _spriteShape_1; }
                var result = _spriteShape_1 = _c.CreateSpriteShape(PathGeometry_1());
                result.FillBrush = ThemeColor_Foreground();
                return result;
            }

            // - PreComp layer: Comp 1
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_2()
            {
                if (_spriteShape_2 != null) { return _spriteShape_2; }
                var result = _spriteShape_2 = _c.CreateSpriteShape(PathGeometry_2());
                result.FillBrush = ThemeColor_Foreground();
                return result;
            }

            // Transforms for Comp 1 Scale(0.095,0.095,0), Offset(-232,-213,0)
            ContainerVisual ContainerVisual_0()
            {
                var result = _c.CreateContainerVisual();
                result.Clip = InsetClip_0();
                result.Size = new Vector2(512F, 512F);
                // Offset:<-0.32000732, 18.679993>, Scale:<0.095, 0.095>
                result.TransformMatrix = new Matrix4x4(0.0949999988F, 0F, 0F, 0F, 0F, 0.0949999988F, 0F, 0F, 0F, 0F, 0F, 0F, -0.320007324F, 18.6799927F, 0F, 1F);
                // Layer aggregator
                result.Children.InsertAtTop(ShapeVisual_0());
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                if (_root != null) { return _root; }
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                propertySet.InsertScalar("t0", 0F);
                propertySet.InsertScalar("t1", 0F);
                // PreComp layer: Comp 1
                result.Children.InsertAtTop(ContainerVisual_0());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return (_cubicBezierEasingFunction_0 == null)
                    ? _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.699999988F, 0F), new Vector2(0.699999988F, 1F))
                    : _cubicBezierEasingFunction_0;
            }

            ExpressionAnimation RootProgress()
            {
                if (_rootProgress != null) { return _rootProgress; }
                var result = _rootProgress = _c.CreateExpressionAnimation("_.Progress");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            // PreComp layer: Comp 1
            InsetClip InsetClip_0()
            {
                var result = _c.CreateInsetClip();
                return result;
            }

            ScalarKeyFrameAnimation t0ScalarAnimation_0_to_1()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 20.
                result.InsertKeyFrame(0.333333313F, 1F, CubicBezierEasingFunction_0());
                return result;
            }

            ScalarKeyFrameAnimation t1ScalarAnimation_0_to_1()
            {
                // Frame 12.
                var result = CreateScalarKeyFrameAnimation(0.200000018F, 0F, StepThenHoldEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 32.
                result.InsertKeyFrame(0.533333302F, 1F, CubicBezierEasingFunction_0());
                return result;
            }

            // PreComp layer: Comp 1
            // Layer aggregator
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(512F, 512F);
                var shapes = result.Shapes;
                // ShapeGroup: Group 1
                shapes.Add(SpriteShape_0());
                // ShapeGroup: Group 1
                shapes.Add(SpriteShape_1());
                // ShapeGroup: Group 1
                shapes.Add(SpriteShape_2());
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                if (_holdThenStepEasingFunction != null) { return _holdThenStepEasingFunction; }
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                if (_stepThenHoldEasingFunction != null) { return _stepThenHoldEasingFunction; }
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // - - PreComp layer: Comp 1
            // - Layer aggregator
            // ShapeGroup: Group 1
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_0()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(291F, 256F), HoldThenStepEasingFunction());
                // Frame 40.
                result.InsertKeyFrame(0.666666687F, new Vector2(16.1620007F, 255.968994F), _c.CreateCubicBezierEasingFunction(new Vector2(0.300000012F, 0F), new Vector2(0.400000006F, 1F)));
                return result;
            }

            // - - PreComp layer: Comp 1
            // - Layer aggregator
            // ShapeGroup: Group 1
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_1()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(256F, 256F), HoldThenStepEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 20.
                result.InsertExpressionKeyFrame(0.333333313F, "Pow(1-_.t0,3)*Vector2(256,256)+(3*Square(1-_.t0)*_.t0*Vector2(257.75,146))+(3*(1-_.t0)*Square(_.t0)*Vector2(388,183.75))+(Pow(_.t0,3)*Vector2(393.25,276.969))", StepThenHoldEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.333333343F, new Vector2(393.25F, 276.968994F), StepThenHoldEasingFunction());
                // Frame 30.
                result.InsertKeyFrame(0.5F, new Vector2(393.25F, 255.968994F), _c.CreateCubicBezierEasingFunction(new Vector2(0.300000012F, 0F), new Vector2(0.419999987F, 1F)));
                return result;
            }

            // - - PreComp layer: Comp 1
            // - Layer aggregator
            // ShapeGroup: Group 1
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_2()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(221F, 256F), StepThenHoldEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 12.
                result.InsertKeyFrame(0.200000003F, new Vector2(221F, 256F), HoldThenStepEasingFunction());
                // Frame 32.
                result.InsertExpressionKeyFrame(0.533333302F, "Pow(1-_.t1,3)*Vector2(221,256)+(3*Square(1-_.t1)*_.t1*Vector2(220.4,137))+(3*(1-_.t1)*Square(_.t1)*Vector2(356.9,183))+(Pow(_.t1,3)*Vector2(358.338,275.469))", StepThenHoldEasingFunction());
                // Frame 32.
                result.InsertKeyFrame(0.533333361F, new Vector2(358.338013F, 275.468994F), StepThenHoldEasingFunction());
                // Frame 42.
                result.InsertKeyFrame(0.699999988F, new Vector2(358.338013F, 255.968994F), _c.CreateCubicBezierEasingFunction(new Vector2(0.319999993F, 0F), new Vector2(0.400000006F, 1F)));
                return result;
            }

            internal Dots_AnimatedVisual_UAPv7(
                Compositor compositor,
                CompositionPropertySet themeProperties
                )
            {
                _c = compositor;
                _themeProperties = themeProperties;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(48F, 60F);
            void IDisposable.Dispose() => _root?.Dispose();

            public void CreateAnimations()
            {
                StartProgressBoundAnimation(_spriteShape_0, "Offset", OffsetVector2Animation_0(), RootProgress());
                StartProgressBoundAnimation(_spriteShape_1, "Offset", OffsetVector2Animation_1(), RootProgress());
                StartProgressBoundAnimation(_spriteShape_2, "Offset", OffsetVector2Animation_2(), RootProgress());
                StartProgressBoundAnimation(_root.Properties, "t0", t0ScalarAnimation_0_to_1(), RootProgress());
                StartProgressBoundAnimation(_root.Properties, "t1", t1ScalarAnimation_0_to_1(), RootProgress());
            }

            public void DestroyAnimations()
            {
                _spriteShape_0.StopAnimation("Offset");
                _spriteShape_1.StopAnimation("Offset");
                _spriteShape_2.StopAnimation("Offset");
                _root.Properties.StopAnimation("t0");
                _root.Properties.StopAnimation("t1");
            }

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 7);
            }
        }
    }
}
