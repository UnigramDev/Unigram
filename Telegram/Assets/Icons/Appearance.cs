//
// Copyright Fela Ameghino 2015-2024
//
// Distributed under the GNU General Public License v3.0. (See accompanying
// file LICENSE or copy at https://www.gnu.org/licenses/gpl-3.0.txt)
//
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           7.1.0+ge1fa92580f
//       
//       Command:
//           LottieGen -Language CSharp -Namespace Telegram.Assets.Icons -Public -WinUIVersion 2.7 -InputFile Appearance.json
//       
//       Input file:
//           Appearance.json (7050 bytes created 17:41+01:00 Dec 21 2021)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ___________________________________________________________
// |       Object stats       | UAP v11 count | UAP v7 count |
// |__________________________|_______________|______________|
// | All CompositionObjects   |            88 |           80 |
// |--------------------------+---------------+--------------|
// | Expression animators     |            10 |            8 |
// | KeyFrame animators       |            10 |            8 |
// | Reference parameters     |            10 |            8 |
// | Expression operations    |             0 |            0 |
// |--------------------------+---------------+--------------|
// | Animated brushes         |             2 |            2 |
// | Animated gradient stops  |             - |            - |
// | ExpressionAnimations     |             1 |            1 |
// | PathKeyFrameAnimations   |             2 |            - |
// |--------------------------+---------------+--------------|
// | ContainerVisuals         |             1 |            1 |
// | ShapeVisuals             |             2 |            2 |
// |--------------------------+---------------+--------------|
// | ContainerShapes          |             1 |            1 |
// | CompositionSpriteShapes  |             3 |            3 |
// |--------------------------+---------------+--------------|
// | Brushes                  |             3 |            3 |
// | Gradient stops           |             4 |            4 |
// | CompositionVisualSurface |             - |            - |
// -----------------------------------------------------------
using Microsoft.Graphics.Canvas.Geometry;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.Graphics;
using Windows.UI;
using Microsoft.UI.Composition;

namespace Telegram.Assets.Icons
{
    // Name:        u_brush
    // Frame rate:  60 fps
    // Frame count: 30
    // Duration:    500.0 mS
    sealed class Appearance
        : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
        , Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
    {
        // Animation duration: 0.500 seconds.
        internal const long c_durationTicks = 5000000;

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
        {
            object ignored = null;
            return TryCreateAnimatedVisual(compositor, out ignored);
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;

            if (Appearance_AnimatedVisual_UAPv11.IsRuntimeCompatible())
            {
                return
                    new Appearance_AnimatedVisual_UAPv11(
                        compositor
                        );
            }

            if (Appearance_AnimatedVisual_UAPv7.IsRuntimeCompatible())
            {
                return
                    new Appearance_AnimatedVisual_UAPv7(
                        compositor
                        );
            }

            return null;
        }

        /// <summary>
        /// Gets the number of frames in the animation.
        /// </summary>
        public double FrameCount => 30d;

        /// <summary>
        /// Gets the frame rate of the animation.
        /// </summary>
        public double Framerate => 60d;

        /// <summary>
        /// Gets the duration of the animation.
        /// </summary>
        public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);

        /// <summary>
        /// Converts a zero-based frame number to the corresponding progress value denoting the
        /// start of the frame.
        /// </summary>
        public double FrameToProgress(double frameNumber)
        {
            return frameNumber / 30d;
        }

        /// <summary>
        /// Returns a map from marker names to corresponding progress values.
        /// </summary>
        public IReadOnlyDictionary<string, double> Markers =>
            new Dictionary<string, double>
            {
                { "NormalToPointerOver_Start", 0.0 },
                { "NormalToPointerOver_End", 1 },
            };

        /// <summary>
        /// Sets the color property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetColorProperty(string propertyName, Color value)
        {
        }

        /// <summary>
        /// Sets the scalar property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetScalarProperty(string propertyName, double value)
        {
        }

        sealed class Appearance_AnimatedVisual_UAPv11 : Microsoft.UI.Xaml.Controls.IAnimatedVisual
        {
            const long c_durationTicks = 5000000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            CompositionPath _path_0;
            CompositionPath _path_1;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            CubicBezierEasingFunction _cubicBezierEasingFunction_1;
            ExpressionAnimation _rootProgress;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            PathKeyFrameAnimation CreatePathKeyFrameAnimation(float initialProgress, CompositionPath initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreatePathKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            // - - - Opacity for layer: line
            // - -  Offset:<0, 2>
            CanvasGeometry Geometry_0()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(73.7789993F, 0.515999973F));
                    builder.AddCubicBezier(new Vector2(44.2350006F, 6.32800007F), new Vector2(18.0669994F, 8.47799969F), new Vector2(-4.72399998F, 6.96600008F));
                    builder.AddCubicBezier(new Vector2(-27.5149994F, 5.454F), new Vector2(-50.5330009F, 0.307000011F), new Vector2(-73.7789993F, -8.47799969F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_1()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(61.8129997F, -45.7249985F));
                    builder.AddCubicBezier(new Vector2(61.8129997F, -45.7249985F), new Vector2(72.1179962F, -59.4640007F), new Vector2(72.1179962F, -59.4640007F));
                    builder.AddCubicBezier(new Vector2(76.6409988F, -65.4940033F), new Vector2(76.0410004F, -73.9329987F), new Vector2(70.7109985F, -79.2630005F));
                    builder.AddCubicBezier(new Vector2(64.7949982F, -85.1780014F), new Vector2(55.2050018F, -85.1780014F), new Vector2(49.2890015F, -79.2630005F));
                    builder.AddCubicBezier(new Vector2(49.2890015F, -79.2630005F), new Vector2(26.8250008F, -56.7989998F), new Vector2(26.8250008F, -56.7989998F));
                    builder.AddCubicBezier(new Vector2(15.6099997F, -45.5839996F), new Vector2(4.66300011F, -34.1040001F), new Vector2(-6.00600004F, -22.368F));
                    builder.AddCubicBezier(new Vector2(-6.00600004F, -22.368F), new Vector2(-26.3330002F, -0.00800000038F), new Vector2(-26.3330002F, -0.00800000038F));
                    builder.AddCubicBezier(new Vector2(-33.7840004F, 8.18799973F), new Vector2(-32.901001F, 20.9419994F), new Vector2(-24.3920002F, 28.0330009F));
                    builder.AddCubicBezier(new Vector2(-16.3570004F, 34.7290001F), new Vector2(-4.46500015F, 33.8759995F), new Vector2(2.53200006F, 26.1009998F));
                    builder.AddCubicBezier(new Vector2(2.53200006F, 26.1009998F), new Vector2(5.10500002F, 23.243F), new Vector2(5.10500002F, 23.243F));
                    builder.AddCubicBezier(new Vector2(25.0249996F, 1.11000001F), new Vector2(43.9459991F, -21.9029999F), new Vector2(61.8129997F, -45.7249985F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Shape tree root for layer: icon
            // - - - ShapeGroup: Group 3 Offset:<100, 100>
            // - Path
            CanvasGeometry Geometry_2()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(39.3370018F, -71.9120026F));
                    builder.AddCubicBezier(new Vector2(39.3370018F, -71.9120026F), new Vector2(32.5909996F, -87.7050018F), new Vector2(32.5909996F, -87.7050018F));
                    builder.AddCubicBezier(new Vector2(29.6299992F, -94.637001F), new Vector2(22.0219994F, -98.336998F), new Vector2(14.7410002F, -96.3860016F));
                    builder.AddCubicBezier(new Vector2(6.65999985F, -94.2200012F), new Vector2(1.86500001F, -85.9150009F), new Vector2(4.03000021F, -77.8339996F));
                    builder.AddCubicBezier(new Vector2(4.03000021F, -77.8339996F), new Vector2(12.2530003F, -47.1479988F), new Vector2(12.2530003F, -47.1479988F));
                    builder.AddCubicBezier(new Vector2(16.3579998F, -31.8279991F), new Vector2(20.8269997F, -16.6079998F), new Vector2(25.6560001F, -1.5F));
                    builder.AddCubicBezier(new Vector2(25.6560001F, -1.5F), new Vector2(34.8569984F, 27.2840004F), new Vector2(34.8569984F, 27.2840004F));
                    builder.AddCubicBezier(new Vector2(38.2290001F, 37.8349991F), new Vector2(49.7150002F, 43.4469986F), new Vector2(60.1110001F, 39.6230011F));
                    builder.AddCubicBezier(new Vector2(69.9280014F, 36.012001F), new Vector2(75.1350021F, 25.2880001F), new Vector2(71.9000015F, 15.3409996F));
                    builder.AddCubicBezier(new Vector2(71.9000015F, 15.3409996F), new Vector2(70.7109985F, 11.684F), new Vector2(70.7109985F, 11.684F));
                    builder.AddCubicBezier(new Vector2(61.5029984F, -16.6340008F), new Vector2(51.0340004F, -44.5279999F), new Vector2(39.3370018F, -71.9120026F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_3()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-5.00099993F, 40.026001F));
                    builder.AddCubicBezier(new Vector2(-5.00099993F, 56.5950012F), new Vector2(-23.4330006F, 70.026001F), new Vector2(-40.0009995F, 70.026001F));
                    builder.AddCubicBezier(new Vector2(-55F, 70.026001F), new Vector2(-70F, 70.026001F), new Vector2(-70F, 60.026001F));
                    builder.AddCubicBezier(new Vector2(-70F, 50.026001F), new Vector2(-60.0009995F, 55.026001F), new Vector2(-60.0009995F, 40.026001F));
                    builder.AddCubicBezier(new Vector2(-60.0009995F, 23.4570007F), new Vector2(-46.5690002F, 10.026F), new Vector2(-30.0009995F, 10.026F));
                    builder.AddCubicBezier(new Vector2(-13.4320002F, 10.026F), new Vector2(-5.00099993F, 23.4570007F), new Vector2(-5.00099993F, 40.026001F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Shape tree root for layer: icon
            // - - - ShapeGroup: Group 3 Offset:<100, 100>
            // - Path
            CanvasGeometry Geometry_4()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(76.0490036F, 25.9090004F));
                    builder.AddCubicBezier(new Vector2(90.4110031F, 36.9210014F), new Vector2(83.3209991F, 41.0709991F), new Vector2(83.3209991F, 57.25F));
                    builder.AddCubicBezier(new Vector2(83.3209991F, 70.6139984F), new Vector2(93.5070038F, 68.0979996F), new Vector2(89.487999F, 73.6039963F));
                    builder.AddCubicBezier(new Vector2(85.4690018F, 79.1100006F), new Vector2(64.7470016F, 81.1039963F), new Vector2(51.757F, 73.6039963F));
                    builder.AddCubicBezier(new Vector2(37.4080009F, 65.3190002F), new Vector2(32.4920006F, 46.9720001F), new Vector2(40.776001F, 32.6230011F));
                    builder.AddCubicBezier(new Vector2(49.0600014F, 18.2740002F), new Vector2(61.6870003F, 14.8970003F), new Vector2(76.0490036F, 25.9090004F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - Opacity for layer: line
            // Offset:<0, 2>
            CompositionColorBrush ColorBrush_AlmostSandyBrown_FFF0AF46()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xF0, 0xAF, 0x46));
            }

            // - - - Shape tree root for layer: icon
            // - ShapeGroup: Group 3 Offset:<100, 100>
            // Stop 0
            CompositionColorGradientStop GradientStop_0_AlmostSandyBrown_FFEFAF46()
            {
                return _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0xEF, 0xAF, 0x46));
            }

            // - - - Shape tree root for layer: icon
            // - ShapeGroup: Group 3 Offset:<100, 100>
            // Stop 0
            CompositionColorGradientStop GradientStop_0_AlmostSilver_FFADB5BD()
            {
                return _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0xAD, 0xB5, 0xBD));
            }

            // - - - Shape tree root for layer: icon
            // - ShapeGroup: Group 3 Offset:<100, 100>
            // Stop 1
            CompositionColorGradientStop GradientStop_1_AlmostChocolate_FFD66837()
            {
                return _c.CreateColorGradientStop(1F, Color.FromArgb(0xFF, 0xD6, 0x68, 0x37));
            }

            // - - - Shape tree root for layer: icon
            // - ShapeGroup: Group 3 Offset:<100, 100>
            // Stop 1
            CompositionColorGradientStop GradientStop_1_AlmostDimGray_FF60666A()
            {
                return _c.CreateColorGradientStop(1F, Color.FromArgb(0xFF, 0x60, 0x66, 0x6A));
            }

            // Shape tree root for layer: icon
            CompositionContainerShape ContainerShape()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(100F, 100F);
                var shapes = result.Shapes;
                // ShapeGroup: Group 3 Offset:<100, 100>
                shapes.Add(SpriteShape_1());
                // ShapeGroup: Group 3 Offset:<100, 100>
                shapes.Add(SpriteShape_2());
                StartProgressBoundAnimation(result, "Scale", ScaleVector2Animation(), _rootProgress);
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation(), _rootProgress);
                return result;
            }

            // - - Shape tree root for layer: icon
            // ShapeGroup: Group 3 Offset:<100, 100>
            CompositionLinearGradientBrush LinearGradientBrush_0()
            {
                var result = _c.CreateLinearGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0_AlmostSilver_FFADB5BD());
                colorStops.Add(GradientStop_1_AlmostDimGray_FF60666A());
                result.MappingMode = CompositionMappingMode.Absolute;
                StartProgressBoundAnimation(result, "StartPoint", StartPointVector2Animation_0(), _rootProgress);
                StartProgressBoundAnimation(result, "EndPoint", EndPointVector2Animation_0(), _rootProgress);
                return result;
            }

            // - - Shape tree root for layer: icon
            // ShapeGroup: Group 3 Offset:<100, 100>
            CompositionLinearGradientBrush LinearGradientBrush_1()
            {
                var result = _c.CreateLinearGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0_AlmostSandyBrown_FFEFAF46());
                colorStops.Add(GradientStop_1_AlmostChocolate_FFD66837());
                result.MappingMode = CompositionMappingMode.Absolute;
                StartProgressBoundAnimation(result, "StartPoint", StartPointVector2Animation_1(), _rootProgress);
                StartProgressBoundAnimation(result, "EndPoint", EndPointVector2Animation_1(), _rootProgress);
                return result;
            }

            CompositionPath Path_0()
            {
                var result = _path_0 = new CompositionPath(Geometry_1());
                return result;
            }

            CompositionPath Path_1()
            {
                var result = _path_1 = new CompositionPath(Geometry_3());
                return result;
            }

            // - Opacity for layer: line
            // Offset:<0, 2>
            CompositionPathGeometry PathGeometry_0()
            {
                var result = _c.CreatePathGeometry(new CompositionPath(Geometry_0()));
                StartProgressBoundAnimation(result, "TrimEnd", TrimEndScalarAnimation_0_to_0p93(), RootProgress());
                return result;
            }

            // - - Shape tree root for layer: icon
            // ShapeGroup: Group 3 Offset:<100, 100>
            CompositionPathGeometry PathGeometry_1()
            {
                var result = _c.CreatePathGeometry();
                StartProgressBoundAnimation(result, "Path", PathKeyFrameAnimation_0(), _rootProgress);
                return result;
            }

            // - - Shape tree root for layer: icon
            // ShapeGroup: Group 3 Offset:<100, 100>
            CompositionPathGeometry PathGeometry_2()
            {
                var result = _c.CreatePathGeometry();
                StartProgressBoundAnimation(result, "Path", PathKeyFrameAnimation_1(), _rootProgress);
                return result;
            }

            // Opacity for layer: line
            // Path 1
            CompositionSpriteShape SpriteShape_0()
            {
                // Offset:<110.789, 173.616>
                var result = CreateSpriteShape(PathGeometry_0(), new Matrix3x2(1F, 0F, 0F, 1F, 110.789001F, 173.615997F));
                result.StrokeBrush = ColorBrush_AlmostSandyBrown_FFF0AF46();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 5F;
                result.StrokeThickness = 10F;
                return result;
            }

            // - Shape tree root for layer: icon
            // Path 1
            CompositionSpriteShape SpriteShape_1()
            {
                // Offset:<100, 100>
                var geometry = PathGeometry_1();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 100F, 100F), LinearGradientBrush_0());
                return result;
            }

            // - Shape tree root for layer: icon
            // Path 1
            CompositionSpriteShape SpriteShape_2()
            {
                // Offset:<100, 100>
                var geometry = PathGeometry_2();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 100F, 100F), LinearGradientBrush_1());
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                var children = result.Children;
                // Opacity for layer: line
                children.InsertAtTop(ShapeVisual_0());
                // Shape tree root for layer: icon
                children.InsertAtTop(ShapeVisual_1());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.600000024F, 0F), new Vector2(0.400000006F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_1()
            {
                return _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 0.833000004F));
            }

            ExpressionAnimation RootProgress()
            {
                var result = _rootProgress = _c.CreateExpressionAnimation("_.Progress");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            // - - - Shape tree root for layer: icon
            // - ShapeGroup: Group 3 Offset:<100, 100>
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_0()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_0(), _holdThenStepEasingFunction);
                // Frame 8.
                result.InsertKeyFrame(0.266666681F, new CompositionPath(Geometry_2()), _cubicBezierEasingFunction_0);
                // Frame 29.
                result.InsertKeyFrame(0.966666639F, _path_0, _cubicBezierEasingFunction_0);
                return result;
            }

            // - - - Shape tree root for layer: icon
            // - ShapeGroup: Group 3 Offset:<100, 100>
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_1()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_1(), _holdThenStepEasingFunction);
                // Frame 8.
                result.InsertKeyFrame(0.266666681F, new CompositionPath(Geometry_4()), _cubicBezierEasingFunction_0);
                // Frame 29.
                result.InsertKeyFrame(0.966666639F, _path_1, _cubicBezierEasingFunction_0);
                return result;
            }

            // Opacity for layer: line
            // Layer opacity animation
            ScalarKeyFrameAnimation OpacityScalarAnimation_0p5_to_0()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0.5F, _stepThenHoldEasingFunction);
                // Frame 20.
                result.InsertKeyFrame(0.666666687F, 0.5F, _holdThenStepEasingFunction);
                // Frame 29.
                result.InsertKeyFrame(0.966666639F, 0F, _cubicBezierEasingFunction_0);
                return result;
            }

            // - - Opacity for layer: line
            // -  Offset:<0, 2>
            // TrimEnd
            ScalarKeyFrameAnimation TrimEndScalarAnimation_0_to_0p93()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                // Frame 8.
                result.InsertKeyFrame(0.266666681F, 0F, HoldThenStepEasingFunction());
                // Frame 29.
                result.InsertKeyFrame(0.966666639F, 0.930000007F, CubicBezierEasingFunction_0());
                return result;
            }

            // Shape tree root for layer: line
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(200F, 200F);
                // Offset:<0, 2>
                result.Shapes.Add(SpriteShape_0());
                StartProgressBoundAnimation(result, "Opacity", OpacityScalarAnimation_0p5_to_0(), _rootProgress);
                return result;
            }

            // Shape tree root for layer: icon
            ShapeVisual ShapeVisual_1()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(200F, 200F);
                result.Shapes.Add(ContainerShape());
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // - - - Shape tree root for layer: icon
            // - ShapeGroup: Group 3 Offset:<100, 100>
            // EndPoint
            Vector2KeyFrameAnimation EndPointVector2Animation_0()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(28.6739998F, 2.94099998F), _holdThenStepEasingFunction);
                // Frame 8.
                result.InsertKeyFrame(0.266666681F, new Vector2(66.7210007F, 11.5410004F), _cubicBezierEasingFunction_0);
                // Frame 29.
                result.InsertKeyFrame(0.966666639F, new Vector2(28.6739998F, 2.94099998F), _cubicBezierEasingFunction_0);
                return result;
            }

            // - - - Shape tree root for layer: icon
            // - ShapeGroup: Group 3 Offset:<100, 100>
            // EndPoint
            Vector2KeyFrameAnimation EndPointVector2Animation_1()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(-17.7910004F, 58.4510002F), _holdThenStepEasingFunction);
                // Frame 8.
                result.InsertKeyFrame(0.266666681F, new Vector2(81.6230011F, 56.0699997F), _cubicBezierEasingFunction_0);
                // Frame 29.
                result.InsertKeyFrame(0.966666639F, new Vector2(-17.7910004F, 58.4510002F), _cubicBezierEasingFunction_0);
                return result;
            }

            // - Shape tree root for layer: icon
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), _stepThenHoldEasingFunction);
                // Frame 8.
                result.InsertKeyFrame(0.266666681F, new Vector2(0F, 0F), _holdThenStepEasingFunction);
                // Frame 19.
                result.InsertKeyFrame(0.633333325F, new Vector2(0F, 7F), CubicBezierEasingFunction_1());
                // Frame 29.
                result.InsertKeyFrame(0.966666639F, new Vector2(0F, 0F), _cubicBezierEasingFunction_1);
                return result;
            }

            // - Shape tree root for layer: icon
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                // Frame 4.
                result.InsertKeyFrame(0.13333334F, new Vector2(1.08000004F, 1.08000004F), _cubicBezierEasingFunction_0);
                // Frame 8.
                result.InsertKeyFrame(0.266666681F, new Vector2(1F, 1F), _cubicBezierEasingFunction_0);
                // Frame 19.
                result.InsertKeyFrame(0.633333325F, new Vector2(1.10000002F, 1.10000002F), _c.CreateCubicBezierEasingFunction(new Vector2(0.416999996F, 0F), new Vector2(0.740999997F, 1F)));
                // Frame 29.
                result.InsertKeyFrame(0.966666639F, new Vector2(1F, 1F), _c.CreateCubicBezierEasingFunction(new Vector2(0.497999996F, 0F), new Vector2(0.77700001F, 1F)));
                return result;
            }

            // - - - Shape tree root for layer: icon
            // - ShapeGroup: Group 3 Offset:<100, 100>
            // StartPoint
            Vector2KeyFrameAnimation StartPointVector2Animation_0()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(-1.50999999F, -27.6459999F), _holdThenStepEasingFunction);
                // Frame 8.
                result.InsertKeyFrame(0.266666681F, new Vector2(10.6700001F, -67.2229996F), _cubicBezierEasingFunction_0);
                // Frame 29.
                result.InsertKeyFrame(0.966666639F, new Vector2(-1.50999999F, -27.6459999F), _cubicBezierEasingFunction_0);
                return result;
            }

            // - - - Shape tree root for layer: icon
            // - ShapeGroup: Group 3 Offset:<100, 100>
            // StartPoint
            Vector2KeyFrameAnimation StartPointVector2Animation_1()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(-50.6679993F, 23.9120007F), _holdThenStepEasingFunction);
                // Frame 8.
                result.InsertKeyFrame(0.266666681F, new Vector2(40.4860001F, 51.1949997F), _cubicBezierEasingFunction_0);
                // Frame 29.
                result.InsertKeyFrame(0.966666639F, new Vector2(-50.6679993F, 23.9120007F), _cubicBezierEasingFunction_0);
                return result;
            }

            internal Appearance_AnimatedVisual_UAPv11(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(200F, 200F);
            void IDisposable.Dispose() => _root?.Dispose();

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 11);
            }
        }

        sealed class Appearance_AnimatedVisual_UAPv7 : Microsoft.UI.Xaml.Controls.IAnimatedVisual
        {
            const long c_durationTicks = 5000000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            CubicBezierEasingFunction _cubicBezierEasingFunction_1;
            ExpressionAnimation _rootProgress;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            // - - - Opacity for layer: line
            // - -  Offset:<0, 2>
            CanvasGeometry Geometry_0()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(73.7789993F, 0.515999973F));
                    builder.AddCubicBezier(new Vector2(44.2350006F, 6.32800007F), new Vector2(18.0669994F, 8.47799969F), new Vector2(-4.72399998F, 6.96600008F));
                    builder.AddCubicBezier(new Vector2(-27.5149994F, 5.454F), new Vector2(-50.5330009F, 0.307000011F), new Vector2(-73.7789993F, -8.47799969F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: icon
            // - - ShapeGroup: Group 3 Offset:<100, 100>
            CanvasGeometry Geometry_1()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(61.8129997F, -45.7249985F));
                    builder.AddLine(new Vector2(72.1179962F, -59.4640007F));
                    builder.AddCubicBezier(new Vector2(76.6409988F, -65.4940033F), new Vector2(76.0410004F, -73.9329987F), new Vector2(70.7109985F, -79.2630005F));
                    builder.AddCubicBezier(new Vector2(64.7949982F, -85.1780014F), new Vector2(55.2050018F, -85.1780014F), new Vector2(49.2890015F, -79.2630005F));
                    builder.AddLine(new Vector2(26.8250008F, -56.7989998F));
                    builder.AddCubicBezier(new Vector2(15.6099997F, -45.5839996F), new Vector2(4.66300011F, -34.1040001F), new Vector2(-6.00600004F, -22.368F));
                    builder.AddLine(new Vector2(-26.3330002F, -0.00800000038F));
                    builder.AddCubicBezier(new Vector2(-33.7840004F, 8.18799973F), new Vector2(-32.901001F, 20.9419994F), new Vector2(-24.3920002F, 28.0330009F));
                    builder.AddCubicBezier(new Vector2(-16.3570004F, 34.7290001F), new Vector2(-4.46500015F, 33.8759995F), new Vector2(2.53200006F, 26.1009998F));
                    builder.AddLine(new Vector2(5.10500002F, 23.243F));
                    builder.AddCubicBezier(new Vector2(25.0249996F, 1.11000001F), new Vector2(43.9459991F, -21.9029999F), new Vector2(61.8129997F, -45.7249985F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: icon
            // - - ShapeGroup: Group 3 Offset:<100, 100>
            CanvasGeometry Geometry_2()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-5.00099993F, 40.026001F));
                    builder.AddCubicBezier(new Vector2(-5.00099993F, 56.5950012F), new Vector2(-23.4330006F, 70.026001F), new Vector2(-40.0009995F, 70.026001F));
                    builder.AddCubicBezier(new Vector2(-55F, 70.026001F), new Vector2(-70F, 70.026001F), new Vector2(-70F, 60.026001F));
                    builder.AddCubicBezier(new Vector2(-70F, 50.026001F), new Vector2(-60.0009995F, 55.026001F), new Vector2(-60.0009995F, 40.026001F));
                    builder.AddCubicBezier(new Vector2(-60.0009995F, 23.4570007F), new Vector2(-46.5690002F, 10.026F), new Vector2(-30.0009995F, 10.026F));
                    builder.AddCubicBezier(new Vector2(-13.4320002F, 10.026F), new Vector2(-5.00099993F, 23.4570007F), new Vector2(-5.00099993F, 40.026001F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - Opacity for layer: line
            // Offset:<0, 2>
            CompositionColorBrush ColorBrush_AlmostSandyBrown_FFF0AF46()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xF0, 0xAF, 0x46));
            }

            // - - - Shape tree root for layer: icon
            // - ShapeGroup: Group 3 Offset:<100, 100>
            // Stop 0
            CompositionColorGradientStop GradientStop_0_AlmostSandyBrown_FFEFAF46()
            {
                return _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0xEF, 0xAF, 0x46));
            }

            // - - - Shape tree root for layer: icon
            // - ShapeGroup: Group 3 Offset:<100, 100>
            // Stop 0
            CompositionColorGradientStop GradientStop_0_AlmostSilver_FFADB5BD()
            {
                return _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0xAD, 0xB5, 0xBD));
            }

            // - - - Shape tree root for layer: icon
            // - ShapeGroup: Group 3 Offset:<100, 100>
            // Stop 1
            CompositionColorGradientStop GradientStop_1_AlmostChocolate_FFD66837()
            {
                return _c.CreateColorGradientStop(1F, Color.FromArgb(0xFF, 0xD6, 0x68, 0x37));
            }

            // - - - Shape tree root for layer: icon
            // - ShapeGroup: Group 3 Offset:<100, 100>
            // Stop 1
            CompositionColorGradientStop GradientStop_1_AlmostDimGray_FF60666A()
            {
                return _c.CreateColorGradientStop(1F, Color.FromArgb(0xFF, 0x60, 0x66, 0x6A));
            }

            // Shape tree root for layer: icon
            CompositionContainerShape ContainerShape()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(100F, 100F);
                var shapes = result.Shapes;
                // ShapeGroup: Group 3 Offset:<100, 100>
                shapes.Add(SpriteShape_1());
                // ShapeGroup: Group 3 Offset:<100, 100>
                shapes.Add(SpriteShape_2());
                StartProgressBoundAnimation(result, "Scale", ScaleVector2Animation(), _rootProgress);
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation(), _rootProgress);
                return result;
            }

            // - - Shape tree root for layer: icon
            // ShapeGroup: Group 3 Offset:<100, 100>
            CompositionLinearGradientBrush LinearGradientBrush_0()
            {
                var result = _c.CreateLinearGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0_AlmostSilver_FFADB5BD());
                colorStops.Add(GradientStop_1_AlmostDimGray_FF60666A());
                result.MappingMode = CompositionMappingMode.Absolute;
                StartProgressBoundAnimation(result, "StartPoint", StartPointVector2Animation_0(), _rootProgress);
                StartProgressBoundAnimation(result, "EndPoint", EndPointVector2Animation_0(), _rootProgress);
                return result;
            }

            // - - Shape tree root for layer: icon
            // ShapeGroup: Group 3 Offset:<100, 100>
            CompositionLinearGradientBrush LinearGradientBrush_1()
            {
                var result = _c.CreateLinearGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0_AlmostSandyBrown_FFEFAF46());
                colorStops.Add(GradientStop_1_AlmostChocolate_FFD66837());
                result.MappingMode = CompositionMappingMode.Absolute;
                StartProgressBoundAnimation(result, "StartPoint", StartPointVector2Animation_1(), _rootProgress);
                StartProgressBoundAnimation(result, "EndPoint", EndPointVector2Animation_1(), _rootProgress);
                return result;
            }

            // - Opacity for layer: line
            // Offset:<0, 2>
            CompositionPathGeometry PathGeometry_0()
            {
                var result = _c.CreatePathGeometry(new CompositionPath(Geometry_0()));
                StartProgressBoundAnimation(result, "TrimEnd", TrimEndScalarAnimation_0_to_0p93(), RootProgress());
                return result;
            }

            // - - Shape tree root for layer: icon
            // ShapeGroup: Group 3 Offset:<100, 100>
            CompositionPathGeometry PathGeometry_1()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_1()));
            }

            // - - Shape tree root for layer: icon
            // ShapeGroup: Group 3 Offset:<100, 100>
            CompositionPathGeometry PathGeometry_2()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_2()));
            }

            // Opacity for layer: line
            // Path 1
            CompositionSpriteShape SpriteShape_0()
            {
                // Offset:<110.789, 173.616>
                var result = CreateSpriteShape(PathGeometry_0(), new Matrix3x2(1F, 0F, 0F, 1F, 110.789001F, 173.615997F));
                result.StrokeBrush = ColorBrush_AlmostSandyBrown_FFF0AF46();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 5F;
                result.StrokeThickness = 10F;
                return result;
            }

            // - Shape tree root for layer: icon
            // Path 1
            CompositionSpriteShape SpriteShape_1()
            {
                // Offset:<100, 100>
                var geometry = PathGeometry_1();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 100F, 100F), LinearGradientBrush_0());
                return result;
            }

            // - Shape tree root for layer: icon
            // Path 1
            CompositionSpriteShape SpriteShape_2()
            {
                // Offset:<100, 100>
                var geometry = PathGeometry_2();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 100F, 100F), LinearGradientBrush_1());
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                var children = result.Children;
                // Opacity for layer: line
                children.InsertAtTop(ShapeVisual_0());
                // Shape tree root for layer: icon
                children.InsertAtTop(ShapeVisual_1());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.600000024F, 0F), new Vector2(0.400000006F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_1()
            {
                return _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 0.833000004F));
            }

            ExpressionAnimation RootProgress()
            {
                var result = _rootProgress = _c.CreateExpressionAnimation("_.Progress");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            // Opacity for layer: line
            // Layer opacity animation
            ScalarKeyFrameAnimation OpacityScalarAnimation_0p5_to_0()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0.5F, _stepThenHoldEasingFunction);
                // Frame 20.
                result.InsertKeyFrame(0.666666687F, 0.5F, _holdThenStepEasingFunction);
                // Frame 29.
                result.InsertKeyFrame(0.966666639F, 0F, _cubicBezierEasingFunction_0);
                return result;
            }

            // - - Opacity for layer: line
            // -  Offset:<0, 2>
            // TrimEnd
            ScalarKeyFrameAnimation TrimEndScalarAnimation_0_to_0p93()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                // Frame 8.
                result.InsertKeyFrame(0.266666681F, 0F, HoldThenStepEasingFunction());
                // Frame 29.
                result.InsertKeyFrame(0.966666639F, 0.930000007F, CubicBezierEasingFunction_0());
                return result;
            }

            // Shape tree root for layer: line
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(200F, 200F);
                // Offset:<0, 2>
                result.Shapes.Add(SpriteShape_0());
                StartProgressBoundAnimation(result, "Opacity", OpacityScalarAnimation_0p5_to_0(), _rootProgress);
                return result;
            }

            // Shape tree root for layer: icon
            ShapeVisual ShapeVisual_1()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(200F, 200F);
                result.Shapes.Add(ContainerShape());
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // - - - Shape tree root for layer: icon
            // - ShapeGroup: Group 3 Offset:<100, 100>
            // EndPoint
            Vector2KeyFrameAnimation EndPointVector2Animation_0()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(28.6739998F, 2.94099998F), _holdThenStepEasingFunction);
                // Frame 8.
                result.InsertKeyFrame(0.266666681F, new Vector2(66.7210007F, 11.5410004F), _cubicBezierEasingFunction_0);
                // Frame 29.
                result.InsertKeyFrame(0.966666639F, new Vector2(28.6739998F, 2.94099998F), _cubicBezierEasingFunction_0);
                return result;
            }

            // - - - Shape tree root for layer: icon
            // - ShapeGroup: Group 3 Offset:<100, 100>
            // EndPoint
            Vector2KeyFrameAnimation EndPointVector2Animation_1()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(-17.7910004F, 58.4510002F), _holdThenStepEasingFunction);
                // Frame 8.
                result.InsertKeyFrame(0.266666681F, new Vector2(81.6230011F, 56.0699997F), _cubicBezierEasingFunction_0);
                // Frame 29.
                result.InsertKeyFrame(0.966666639F, new Vector2(-17.7910004F, 58.4510002F), _cubicBezierEasingFunction_0);
                return result;
            }

            // - Shape tree root for layer: icon
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), _stepThenHoldEasingFunction);
                // Frame 8.
                result.InsertKeyFrame(0.266666681F, new Vector2(0F, 0F), _holdThenStepEasingFunction);
                // Frame 19.
                result.InsertKeyFrame(0.633333325F, new Vector2(0F, 7F), CubicBezierEasingFunction_1());
                // Frame 29.
                result.InsertKeyFrame(0.966666639F, new Vector2(0F, 0F), _cubicBezierEasingFunction_1);
                return result;
            }

            // - Shape tree root for layer: icon
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                // Frame 4.
                result.InsertKeyFrame(0.13333334F, new Vector2(1.08000004F, 1.08000004F), _cubicBezierEasingFunction_0);
                // Frame 8.
                result.InsertKeyFrame(0.266666681F, new Vector2(1F, 1F), _cubicBezierEasingFunction_0);
                // Frame 19.
                result.InsertKeyFrame(0.633333325F, new Vector2(1.10000002F, 1.10000002F), _c.CreateCubicBezierEasingFunction(new Vector2(0.416999996F, 0F), new Vector2(0.740999997F, 1F)));
                // Frame 29.
                result.InsertKeyFrame(0.966666639F, new Vector2(1F, 1F), _c.CreateCubicBezierEasingFunction(new Vector2(0.497999996F, 0F), new Vector2(0.77700001F, 1F)));
                return result;
            }

            // - - - Shape tree root for layer: icon
            // - ShapeGroup: Group 3 Offset:<100, 100>
            // StartPoint
            Vector2KeyFrameAnimation StartPointVector2Animation_0()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(-1.50999999F, -27.6459999F), _holdThenStepEasingFunction);
                // Frame 8.
                result.InsertKeyFrame(0.266666681F, new Vector2(10.6700001F, -67.2229996F), _cubicBezierEasingFunction_0);
                // Frame 29.
                result.InsertKeyFrame(0.966666639F, new Vector2(-1.50999999F, -27.6459999F), _cubicBezierEasingFunction_0);
                return result;
            }

            // - - - Shape tree root for layer: icon
            // - ShapeGroup: Group 3 Offset:<100, 100>
            // StartPoint
            Vector2KeyFrameAnimation StartPointVector2Animation_1()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(-50.6679993F, 23.9120007F), _holdThenStepEasingFunction);
                // Frame 8.
                result.InsertKeyFrame(0.266666681F, new Vector2(40.4860001F, 51.1949997F), _cubicBezierEasingFunction_0);
                // Frame 29.
                result.InsertKeyFrame(0.966666639F, new Vector2(-50.6679993F, 23.9120007F), _cubicBezierEasingFunction_0);
                return result;
            }

            internal Appearance_AnimatedVisual_UAPv7(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(200F, 200F);
            void IDisposable.Dispose() => _root?.Dispose();

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 7);
            }
        }
    }
}
