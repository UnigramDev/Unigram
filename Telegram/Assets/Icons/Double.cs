//
// Copyright Fela Ameghino 2015-2024
//
// Distributed under the GNU General Public License v3.0. (See accompanying
// file LICENSE or copy at https://www.gnu.org/licenses/gpl-3.0.txt)
//
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           7.1.0-build.5+g109463c06a
//       
//       Command:
//           LottieGen -DisableTranslationOptimizer -GenerateColorBindings -Language CSharp -MinimumUapVersion 8 -Namespace Telegram.Assets.Icons -Public -WinUIVersion 2.7 -InputFile double.json
//       
//       Input file:
//           double.json (7049 bytes created 15:50+02:00 Jun 14 2022)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ___________________________________________________________
// |       Object stats       | UAP v11 count | UAP v8 count |
// |__________________________|_______________|______________|
// | All CompositionObjects   |           183 |          143 |
// |--------------------------+---------------+--------------|
// | Expression animators     |            17 |           13 |
// | KeyFrame animators       |             9 |            5 |
// | Reference parameters     |            16 |           12 |
// | Expression operations    |            16 |           16 |
// |--------------------------+---------------+--------------|
// | Animated brushes         |             4 |            4 |
// | Animated gradient stops  |             - |            - |
// | ExpressionAnimations     |            13 |            9 |
// | PathKeyFrameAnimations   |             4 |            - |
// |--------------------------+---------------+--------------|
// | ContainerVisuals         |             5 |            5 |
// | ShapeVisuals             |             2 |            2 |
// |--------------------------+---------------+--------------|
// | ContainerShapes          |            13 |           13 |
// | CompositionSpriteShapes  |             4 |            4 |
// |--------------------------+---------------+--------------|
// | Brushes                  |             7 |            7 |
// | Gradient stops           |             - |            - |
// | CompositionVisualSurface |             2 |            2 |
// -----------------------------------------------------------
using Microsoft.Graphics.Canvas;
using Microsoft.Graphics.Canvas.Effects;
using Microsoft.Graphics.Canvas.Geometry;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.Graphics;
using Windows.UI;
using Microsoft.UI;
using Microsoft.UI.Composition;

namespace Telegram.Assets.Icons
{
    // Name:        double
    // Frame rate:  60 fps
    // Frame count: 120
    // Duration:    2000.0 mS
    // ___________________________________________________________
    // | Theme property |   Accessor   | Type  |  Default value  |
    // |________________|______________|_______|_________________|
    // | #000000        | Color_000000 | Color | #FF000000 Black |
    // | #E877FF        | Color_E877FF | Color |    #FFE877FF    |
    // -----------------------------------------------------------
    public sealed partial class Double
        : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
        , Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
    {
        // Animation duration: 2.000 seconds.
        internal const long c_durationTicks = 20000000;

        // Theme property: Color_000000.
        internal static readonly Color c_themeColor_000000 = Color.FromArgb(0xFF, 0xFF, 0xFF, 0xFF);

        // Theme property: Color_E877FF.
        internal static readonly Color c_themeColor_E877FF = Color.FromArgb(0xFF, 0xE8, 0x77, 0xFF);

        CompositionPropertySet _themeProperties;
        Color _themeColor_000000 = c_themeColor_000000;
        Color _themeColor_E877FF = c_themeColor_E877FF;

        // Theme properties.
        public Color Color_000000
        {
            get => _themeColor_000000;
            set
            {
                _themeColor_000000 = value;
                if (_themeProperties != null)
                {
                    _themeProperties.InsertVector4("Color_000000", ColorAsVector4((Color)_themeColor_000000));
                }
            }
        }

        public Color Color_E877FF
        {
            get => _themeColor_E877FF;
            set
            {
                _themeColor_E877FF = value;
                if (_themeProperties != null)
                {
                    _themeProperties.InsertVector4("Color_E877FF", ColorAsVector4((Color)_themeColor_E877FF));
                }
            }
        }

        static Vector4 ColorAsVector4(Color color) => new Vector4(color.R, color.G, color.B, color.A);

        CompositionPropertySet EnsureThemeProperties(Compositor compositor)
        {
            if (_themeProperties == null)
            {
                _themeProperties = compositor.CreatePropertySet();
                _themeProperties.InsertVector4("Color_000000", ColorAsVector4((Color)Color_000000));
                _themeProperties.InsertVector4("Color_E877FF", ColorAsVector4((Color)Color_E877FF));
            }
            return _themeProperties;
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
        {
            object ignored = null;
            return TryCreateAnimatedVisual(compositor, out ignored);
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;
            EnsureThemeProperties(compositor);

            if (Double_AnimatedVisual_UAPv11.IsRuntimeCompatible())
            {
                var res =
                    new Double_AnimatedVisual_UAPv11(
                        compositor,
                        _themeProperties
                        );
                res.CreateAnimations();
                return res;
            }

            if (Double_AnimatedVisual_UAPv8.IsRuntimeCompatible())
            {
                var res =
                    new Double_AnimatedVisual_UAPv8(
                        compositor,
                        _themeProperties
                        );
                res.CreateAnimations();
                return res;
            }

            return null;
        }

        /// <summary>
        /// Gets the number of frames in the animation.
        /// </summary>
        public double FrameCount => 120d;

        /// <summary>
        /// Gets the frame rate of the animation.
        /// </summary>
        public double Framerate => 60d;

        /// <summary>
        /// Gets the duration of the animation.
        /// </summary>
        public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);

        /// <summary>
        /// Converts a zero-based frame number to the corresponding progress value denoting the
        /// start of the frame.
        /// </summary>
        public double FrameToProgress(double frameNumber)
        {
            return frameNumber / 120d;
        }

        /// <summary>
        /// Returns a map from marker names to corresponding progress values.
        /// </summary>
        public IReadOnlyDictionary<string, double> Markers =>
            new Dictionary<string, double>
            {
                { "NormalToPointerOver_Start", 0.0 },
                { "NormalToPointerOver_End", 1 },
            };

        /// <summary>
        /// Sets the color property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetColorProperty(string propertyName, Color value)
        {
            if (propertyName == "Color_000000")
            {
                _themeColor_000000 = value;
            }
            else if (propertyName == "Color_E877FF")
            {
                _themeColor_E877FF = value;
            }
            else
            {
                return;
            }

            if (_themeProperties != null)
            {
                _themeProperties.InsertVector4(propertyName, ColorAsVector4(value));
            }
        }

        /// <summary>
        /// Sets the scalar property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetScalarProperty(string propertyName, double value)
        {
        }

        sealed partial class Double_AnimatedVisual_UAPv11 : Microsoft.UI.Xaml.Controls.IAnimatedVisual
        {
            const long c_durationTicks = 20000000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            readonly CompositionPropertySet _themeProperties;
            CompositionColorBrush _themeColor_Color_000000;
            CompositionColorBrush _themeColor_Color_E877FF_0;
            CompositionColorBrush _themeColor_Color_E877FF_1;
            CompositionColorBrush _themeColor_Color_E877FF_2;
            CompositionContainerShape _containerShape_04;
            CompositionPath _path_0;
            CompositionPath _path_1;
            CompositionPath _path_2;
            CompositionPath _path_3;
            CompositionPathGeometry _pathGeometry_0;
            CompositionPathGeometry _pathGeometry_1;
            CompositionPathGeometry _pathGeometry_2;
            CompositionPathGeometry _pathGeometry_3;
            ContainerVisual _root;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            PathKeyFrameAnimation CreatePathKeyFrameAnimation(float initialProgress, CompositionPath initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreatePathKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CanvasGeometry Geometry_00()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(12F, -5F));
                    builder.AddCubicBezier(new Vector2(12F, -5F), new Vector2(12F, 5F), new Vector2(12F, 5F));
                    builder.AddCubicBezier(new Vector2(12F, 7.20900011F), new Vector2(10.2089996F, 9F), new Vector2(8F, 9F));
                    builder.AddCubicBezier(new Vector2(8F, 9F), new Vector2(-8F, 9F), new Vector2(-8F, 9F));
                    builder.AddCubicBezier(new Vector2(-10.2089996F, 9F), new Vector2(-12F, 7.20900011F), new Vector2(-12F, 5F));
                    builder.AddCubicBezier(new Vector2(-12F, 5F), new Vector2(-12F, -5F), new Vector2(-12F, -5F));
                    builder.AddCubicBezier(new Vector2(-12F, -7.20900011F), new Vector2(-10.2089996F, -9F), new Vector2(-8F, -9F));
                    builder.AddCubicBezier(new Vector2(-8F, -9F), new Vector2(8F, -9F), new Vector2(8F, -9F));
                    builder.AddCubicBezier(new Vector2(10.2089996F, -9F), new Vector2(12F, -7.20900011F), new Vector2(12F, -5F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - Shape tree root for layer: block
            // - - - - - ShapeGroup: Rectangle 111
            // - - - Path 1
            // - Path
            CanvasGeometry Geometry_01()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(14.7919998F, -5F));
                    builder.AddCubicBezier(new Vector2(14.7919998F, -5F), new Vector2(13.125F, 5F), new Vector2(13.125F, 5F));
                    builder.AddCubicBezier(new Vector2(13.125F, 7.20900011F), new Vector2(11.3339996F, 9F), new Vector2(9.125F, 9F));
                    builder.AddCubicBezier(new Vector2(9.125F, 9F), new Vector2(-8F, 9F), new Vector2(-8F, 9F));
                    builder.AddCubicBezier(new Vector2(-10.2089996F, 9F), new Vector2(-12F, 7.20900011F), new Vector2(-12F, 5F));
                    builder.AddCubicBezier(new Vector2(-12F, 5F), new Vector2(-10.3330002F, -5F), new Vector2(-10.3330002F, -5F));
                    builder.AddCubicBezier(new Vector2(-10.3330002F, -7.20900011F), new Vector2(-8.54199982F, -9F), new Vector2(-6.33300018F, -9F));
                    builder.AddCubicBezier(new Vector2(-6.33300018F, -9F), new Vector2(10.7919998F, -9F), new Vector2(10.7919998F, -9F));
                    builder.AddCubicBezier(new Vector2(13.0010004F, -9F), new Vector2(14.7919998F, -7.20900011F), new Vector2(14.7919998F, -5F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - Shape tree root for layer: block
            // - - - - - ShapeGroup: Rectangle 111
            // - - - Path 1
            // - Path
            CanvasGeometry Geometry_02()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(12F, -5F));
                    builder.AddCubicBezier(new Vector2(12F, -5F), new Vector2(12F, 5F), new Vector2(12F, 5F));
                    builder.AddCubicBezier(new Vector2(12F, 7.20900011F), new Vector2(10.2089996F, 9F), new Vector2(8F, 9F));
                    builder.AddCubicBezier(new Vector2(8F, 9F), new Vector2(-8F, 9F), new Vector2(-8F, 9F));
                    builder.AddCubicBezier(new Vector2(-10.2089996F, 9F), new Vector2(-12F, 7.20900011F), new Vector2(-12F, 5F));
                    builder.AddCubicBezier(new Vector2(-12F, 5F), new Vector2(-12F, -5F), new Vector2(-12F, -5F));
                    builder.AddCubicBezier(new Vector2(-12F, -7.20900011F), new Vector2(-10.2089996F, -9F), new Vector2(-8F, -9F));
                    builder.AddCubicBezier(new Vector2(-8F, -9F), new Vector2(8F, -9F), new Vector2(8F, -9F));
                    builder.AddCubicBezier(new Vector2(10.2089996F, -9F), new Vector2(12F, -7.20900011F), new Vector2(12F, -5F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_03()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-2.5F, -2F));
                    builder.AddCubicBezier(new Vector2(-2.5F, -2F), new Vector2(-2.5F, -2.5F), new Vector2(-2.5F, -2.5F));
                    builder.AddCubicBezier(new Vector2(-2.5F, -3.32800007F), new Vector2(-1.82799995F, -4F), new Vector2(-1F, -4F));
                    builder.AddCubicBezier(new Vector2(-1F, -4F), new Vector2(0.337000012F, -4F), new Vector2(0.337000012F, -4F));
                    builder.AddCubicBezier(new Vector2(1.53199995F, -4F), new Vector2(2.5F, -3.03200006F), new Vector2(2.5F, -1.83700001F));
                    builder.AddCubicBezier(new Vector2(2.5F, -1.01800001F), new Vector2(2.03699994F, -0.268000007F), new Vector2(1.30400002F, 0.0979999974F));
                    builder.AddCubicBezier(new Vector2(1.30400002F, 0.0979999974F), new Vector2(-1.39400005F, 1.44700003F), new Vector2(-1.39400005F, 1.44700003F));
                    builder.AddCubicBezier(new Vector2(-2.07200003F, 1.78600001F), new Vector2(-2.5F, 2.47799993F), new Vector2(-2.5F, 3.23600006F));
                    builder.AddCubicBezier(new Vector2(-2.5F, 3.23600006F), new Vector2(-2.5F, 4F), new Vector2(-2.5F, 4F));
                    builder.AddCubicBezier(new Vector2(-2.5F, 4F), new Vector2(2.5F, 4F), new Vector2(2.5F, 4F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - - Shape tree root for layer: x2
            // - - - - - - - Transforms: x2
            // - - - - - ShapeGroup: Vector 75
            // - - - Path 1
            // - Path
            CanvasGeometry Geometry_04()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-0.833000004F, -2F));
                    builder.AddCubicBezier(new Vector2(-0.833000004F, -2F), new Vector2(-0.833000004F, -2.5F), new Vector2(-0.833000004F, -2.5F));
                    builder.AddCubicBezier(new Vector2(-0.833000004F, -3.32800007F), new Vector2(-0.160999998F, -4F), new Vector2(0.666999996F, -4F));
                    builder.AddCubicBezier(new Vector2(0.666999996F, -4F), new Vector2(2.00399995F, -4F), new Vector2(2.00399995F, -4F));
                    builder.AddCubicBezier(new Vector2(3.19899988F, -4F), new Vector2(4.16699982F, -3.03200006F), new Vector2(4.16699982F, -1.83700001F));
                    builder.AddCubicBezier(new Vector2(4.16699982F, -1.01800001F), new Vector2(2.03699994F, -0.268000007F), new Vector2(1.30400002F, 0.0979999974F));
                    builder.AddCubicBezier(new Vector2(1.30400002F, 0.0979999974F), new Vector2(-1.39400005F, 1.44700003F), new Vector2(-1.39400005F, 1.44700003F));
                    builder.AddCubicBezier(new Vector2(-2.07200003F, 1.78600001F), new Vector2(-2.5F, 2.47799993F), new Vector2(-2.5F, 3.23600006F));
                    builder.AddCubicBezier(new Vector2(-2.5F, 3.23600006F), new Vector2(-2.5F, 4F), new Vector2(-2.5F, 4F));
                    builder.AddCubicBezier(new Vector2(-2.5F, 4F), new Vector2(2.5F, 4F), new Vector2(2.5F, 4F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - - Shape tree root for layer: x2
            // - - - - - - - Transforms: x2
            // - - - - - ShapeGroup: Vector 75
            // - - - Path 1
            // - Path
            CanvasGeometry Geometry_05()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-2.5F, -2F));
                    builder.AddCubicBezier(new Vector2(-2.5F, -2F), new Vector2(-2.5F, -2.5F), new Vector2(-2.5F, -2.5F));
                    builder.AddCubicBezier(new Vector2(-2.5F, -3.32800007F), new Vector2(-1.82799995F, -4F), new Vector2(-1F, -4F));
                    builder.AddCubicBezier(new Vector2(-1F, -4F), new Vector2(0.337000012F, -4F), new Vector2(0.337000012F, -4F));
                    builder.AddCubicBezier(new Vector2(1.53199995F, -4F), new Vector2(2.5F, -3.03200006F), new Vector2(2.5F, -1.83700001F));
                    builder.AddCubicBezier(new Vector2(2.5F, -1.01800001F), new Vector2(2.03699994F, -0.268000007F), new Vector2(1.30400002F, 0.0979999974F));
                    builder.AddCubicBezier(new Vector2(1.30400002F, 0.0979999974F), new Vector2(-1.39400005F, 1.44700003F), new Vector2(-1.39400005F, 1.44700003F));
                    builder.AddCubicBezier(new Vector2(-2.07200003F, 1.78600001F), new Vector2(-2.5F, 2.47799993F), new Vector2(-2.5F, 3.23600006F));
                    builder.AddCubicBezier(new Vector2(-2.5F, 3.23600006F), new Vector2(-2.5F, 4F), new Vector2(-2.5F, 4F));
                    builder.AddCubicBezier(new Vector2(-2.5F, 4F), new Vector2(2.5F, 4F), new Vector2(2.5F, 4F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_06()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-3F, 4F));
                    builder.AddCubicBezier(new Vector2(-3F, 4F), new Vector2(3F, -4F), new Vector2(3F, -4F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - - Shape tree root for layer: x2
            // - - - - - - - Transforms: x2
            // - - - - - ShapeGroup: Vector 74
            // - - - Path 1
            // - Path
            CanvasGeometry Geometry_07()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-3F, 4F));
                    builder.AddCubicBezier(new Vector2(-3F, 4F), new Vector2(4.66699982F, -4F), new Vector2(4.66699982F, -4F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - - Shape tree root for layer: x2
            // - - - - - - - Transforms: x2
            // - - - - - ShapeGroup: Vector 74
            // - - - Path 1
            // - Path
            CanvasGeometry Geometry_08()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-3F, 4F));
                    builder.AddCubicBezier(new Vector2(-3F, 4F), new Vector2(3F, -4F), new Vector2(3F, -4F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_09()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(3F, 4F));
                    builder.AddCubicBezier(new Vector2(3F, 4F), new Vector2(-3F, -4F), new Vector2(-3F, -4F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - - Shape tree root for layer: x2
            // - - - - - - - Transforms: x2
            // - - - - - ShapeGroup: Vector 73
            // - - - Path 1
            // - Path
            CanvasGeometry Geometry_10()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(3F, 4F));
                    builder.AddCubicBezier(new Vector2(3F, 4F), new Vector2(-1.33299994F, -4F), new Vector2(-1.33299994F, -4F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - - Shape tree root for layer: x2
            // - - - - - - - Transforms: x2
            // - - - - - ShapeGroup: Vector 73
            // - - - Path 1
            // - Path
            CanvasGeometry Geometry_11()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(3F, 4F));
                    builder.AddCubicBezier(new Vector2(3F, 4F), new Vector2(-3F, -4F), new Vector2(-3F, -4F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Shape tree root for layer: block
            // - - ShapeGroup: Rectangle 111
            // Path 1
            // Color bound to theme property value: Color_000000
            CompositionColorBrush ThemeColor_Color_000000()
            {
                if (_themeColor_Color_000000 != null) { return _themeColor_Color_000000; }
                var result = _themeColor_Color_000000 = _c.CreateColorBrush();
                BindProperty(_themeColor_Color_000000, "Color", "ColorRGB(_theme.Color_000000.W,_theme.Color_000000.X,_theme.Color_000000.Y,_theme.Color_000000.Z)", "_theme", _themeProperties);
                return result;
            }

            // - - - - - - Shape tree root for layer: x2
            // - - - - Transforms: x2
            // - - ShapeGroup: Vector 75
            // Path 1
            // Color bound to theme property value: Color_E877FF
            CompositionColorBrush ThemeColor_Color_E877FF_0()
            {
                if (_themeColor_Color_E877FF_0 != null) { return _themeColor_Color_E877FF_0; }
                var result = _themeColor_Color_E877FF_0 = _c.CreateColorBrush();
                BindProperty(_themeColor_Color_E877FF_0, "Color", "ColorRGB(_theme.Color_E877FF.W,_theme.Color_E877FF.X,_theme.Color_E877FF.Y,_theme.Color_E877FF.Z)", "_theme", _themeProperties);
                return result;
            }

            // - - - - - - Shape tree root for layer: x2
            // - - - - Transforms: x2
            // - - ShapeGroup: Vector 74
            // Path 1
            // Color bound to theme property value: Color_E877FF
            CompositionColorBrush ThemeColor_Color_E877FF_1()
            {
                if (_themeColor_Color_E877FF_1 != null) { return _themeColor_Color_E877FF_1; }
                var result = _themeColor_Color_E877FF_1 = _c.CreateColorBrush();
                BindProperty(_themeColor_Color_E877FF_1, "Color", "ColorRGB(_theme.Color_E877FF.W,_theme.Color_E877FF.X,_theme.Color_E877FF.Y,_theme.Color_E877FF.Z)", "_theme", _themeProperties);
                return result;
            }

            // - - - - - - Shape tree root for layer: x2
            // - - - - Transforms: x2
            // - - ShapeGroup: Vector 73
            // Path 1
            // Color bound to theme property value: Color_E877FF
            CompositionColorBrush ThemeColor_Color_E877FF_2()
            {
                if (_themeColor_Color_E877FF_2 != null) { return _themeColor_Color_E877FF_2; }
                var result = _themeColor_Color_E877FF_2 = _c.CreateColorBrush();
                BindProperty(_themeColor_Color_E877FF_2, "Color", "ColorRGB(_theme.Color_E877FF.W,_theme.Color_E877FF.X,_theme.Color_E877FF.Y,_theme.Color_E877FF.Z)", "_theme", _themeProperties);
                return result;
            }

            // Shape tree root for layer: block
            CompositionContainerShape ContainerShape_00()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 0F);
                result.Offset = new Vector2(15F, 15F);
                result.RotationAngleInDegrees = 0F;
                result.Scale = new Vector2(0.166669995F, 0.166669995F);
                result.Shapes.Add(ContainerShape_01());
                return result;
            }

            // - Shape tree root for layer: block
            CompositionContainerShape ContainerShape_01()
            {
                var result = _c.CreateContainerShape();
                // ShapeGroup: Rectangle 111
                result.Shapes.Add(ContainerShape_02());
                return result;
            }

            // - - Shape tree root for layer: block
            // ShapeGroup: Rectangle 111
            CompositionContainerShape ContainerShape_02()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 0F);
                result.Offset = new Vector2(0F, 0F);
                result.RotationAngleInDegrees = 0F;
                result.Scale = new Vector2(6F, 6F);
                result.Shapes.Add(ContainerShape_03());
                return result;
            }

            // - - - Shape tree root for layer: block
            // ShapeGroup: Rectangle 111
            CompositionContainerShape ContainerShape_03()
            {
                var result = _c.CreateContainerShape();
                // Path 1
                result.Shapes.Add(SpriteShape_0());
                return result;
            }

            // Shape tree root for layer: x2
            CompositionContainerShape ContainerShape_04()
            {
                if (_containerShape_04 != null) { return _containerShape_04; }
                var result = _containerShape_04 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 0F);
                result.RotationAngleInDegrees = 0F;
                // Transforms: x2
                result.Shapes.Add(ContainerShape_05());
                return result;
            }

            // - Shape tree root for layer: x2
            // Transforms for x2
            CompositionContainerShape ContainerShape_05()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 0F);
                result.Offset = new Vector2(-24F, 0F);
                result.RotationAngleInDegrees = 0F;
                result.Scale = new Vector2(1F, 1F);
                result.Shapes.Add(ContainerShape_06());
                return result;
            }

            // - - Shape tree root for layer: x2
            // Transforms: x2
            CompositionContainerShape ContainerShape_06()
            {
                var result = _c.CreateContainerShape();
                var shapes = result.Shapes;
                // ShapeGroup: Vector 75
                shapes.Add(ContainerShape_07());
                // ShapeGroup: Vector 74
                shapes.Add(ContainerShape_09());
                // ShapeGroup: Vector 73
                shapes.Add(ContainerShape_11());
                return result;
            }

            // - - - Shape tree root for layer: x2
            // - Transforms: x2
            // ShapeGroup: Vector 75
            CompositionContainerShape ContainerShape_07()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 0F);
                result.Offset = new Vector2(51F, 0F);
                result.RotationAngleInDegrees = 0F;
                result.Scale = new Vector2(6F, 6F);
                result.Shapes.Add(ContainerShape_08());
                return result;
            }

            // - - - - Shape tree root for layer: x2
            // - - Transforms: x2
            // ShapeGroup: Vector 75
            CompositionContainerShape ContainerShape_08()
            {
                var result = _c.CreateContainerShape();
                // Path 1
                result.Shapes.Add(SpriteShape_1());
                return result;
            }

            // - - - Shape tree root for layer: x2
            // - Transforms: x2
            // ShapeGroup: Vector 74
            CompositionContainerShape ContainerShape_09()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 0F);
                result.Offset = new Vector2(0F, 0F);
                result.RotationAngleInDegrees = 0F;
                result.Scale = new Vector2(6F, 6F);
                result.Shapes.Add(ContainerShape_10());
                return result;
            }

            // - - - - Shape tree root for layer: x2
            // - - Transforms: x2
            // ShapeGroup: Vector 74
            CompositionContainerShape ContainerShape_10()
            {
                var result = _c.CreateContainerShape();
                // Path 1
                result.Shapes.Add(SpriteShape_2());
                return result;
            }

            // - - - Shape tree root for layer: x2
            // - Transforms: x2
            // ShapeGroup: Vector 73
            CompositionContainerShape ContainerShape_11()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 0F);
                result.Offset = new Vector2(0F, 0F);
                result.RotationAngleInDegrees = 0F;
                result.Scale = new Vector2(6F, 6F);
                result.Shapes.Add(ContainerShape_12());
                return result;
            }

            // - - - - Shape tree root for layer: x2
            // - - Transforms: x2
            // ShapeGroup: Vector 73
            CompositionContainerShape ContainerShape_12()
            {
                var result = _c.CreateContainerShape();
                // Path 1
                result.Shapes.Add(SpriteShape_3());
                return result;
            }

            CompositionEffectBrush EffectBrush()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationOut;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                var effectFactory = _c.CreateEffectFactory(compositeEffect);
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_0());
                result.SetSourceParameter("source", SurfaceBrush_1());
                return result;
            }

            CompositionPath Path_0()
            {
                if (_path_0 != null) { return _path_0; }
                var result = _path_0 = new CompositionPath(Geometry_00());
                return result;
            }

            CompositionPath Path_1()
            {
                if (_path_1 != null) { return _path_1; }
                var result = _path_1 = new CompositionPath(Geometry_03());
                return result;
            }

            CompositionPath Path_2()
            {
                if (_path_2 != null) { return _path_2; }
                var result = _path_2 = new CompositionPath(Geometry_06());
                return result;
            }

            CompositionPath Path_3()
            {
                if (_path_3 != null) { return _path_3; }
                var result = _path_3 = new CompositionPath(Geometry_09());
                return result;
            }

            // - - - - - Shape tree root for layer: block
            // - - ShapeGroup: Rectangle 111
            // Path 1
            CompositionPathGeometry PathGeometry_0()
            {
                if (_pathGeometry_0 != null) { return _pathGeometry_0; }
                var result = _pathGeometry_0 = _c.CreatePathGeometry();
                return result;
            }

            // - - - - - - Shape tree root for layer: x2
            // - - - - Transforms: x2
            // - - ShapeGroup: Vector 75
            // Path 1
            CompositionPathGeometry PathGeometry_1()
            {
                if (_pathGeometry_1 != null) { return _pathGeometry_1; }
                var result = _pathGeometry_1 = _c.CreatePathGeometry();
                return result;
            }

            // - - - - - - Shape tree root for layer: x2
            // - - - - Transforms: x2
            // - - ShapeGroup: Vector 74
            // Path 1
            CompositionPathGeometry PathGeometry_2()
            {
                if (_pathGeometry_2 != null) { return _pathGeometry_2; }
                var result = _pathGeometry_2 = _c.CreatePathGeometry();
                return result;
            }

            // - - - - - - Shape tree root for layer: x2
            // - - - - Transforms: x2
            // - - ShapeGroup: Vector 73
            // Path 1
            CompositionPathGeometry PathGeometry_3()
            {
                if (_pathGeometry_3 != null) { return _pathGeometry_3; }
                var result = _pathGeometry_3 = _c.CreatePathGeometry();
                return result;
            }

            // - - - - Shape tree root for layer: block
            // - ShapeGroup: Rectangle 111
            // Path 1
            CompositionSpriteShape SpriteShape_0()
            {
                var result = _c.CreateSpriteShape(PathGeometry_0());
                result.FillBrush = ThemeColor_Color_000000();
                return result;
            }

            // - - - - - Shape tree root for layer: x2
            // - - - Transforms: x2
            // - ShapeGroup: Vector 75
            // Path 1
            CompositionSpriteShape SpriteShape_1()
            {
                var result = _c.CreateSpriteShape(PathGeometry_1());
                result.StrokeBrush = ThemeColor_Color_E877FF_0();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeDashOffset = 0F;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 1.65999997F;
                return result;
            }

            // - - - - - Shape tree root for layer: x2
            // - - - Transforms: x2
            // - ShapeGroup: Vector 74
            // Path 1
            CompositionSpriteShape SpriteShape_2()
            {
                var result = _c.CreateSpriteShape(PathGeometry_2());
                result.StrokeBrush = ThemeColor_Color_E877FF_1();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeDashOffset = 0F;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 1.65999997F;
                return result;
            }

            // - - - - - Shape tree root for layer: x2
            // - - - Transforms: x2
            // - ShapeGroup: Vector 73
            // Path 1
            CompositionSpriteShape SpriteShape_3()
            {
                var result = _c.CreateSpriteShape(PathGeometry_3());
                result.StrokeBrush = ThemeColor_Color_E877FF_2();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeDashOffset = 0F;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 1.65999997F;
                return result;
            }

            CompositionSurfaceBrush SurfaceBrush_0()
            {
                return _c.CreateSurfaceBrush(VisualSurface_0());
            }

            CompositionSurfaceBrush SurfaceBrush_1()
            {
                return _c.CreateSurfaceBrush(VisualSurface_1());
            }

            CompositionVisualSurface VisualSurface_0()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_0();
                result.SourceSize = new Vector2(30F, 30F);
                result.SourceOffset = new Vector2(0F, 0F);
                return result;
            }

            CompositionVisualSurface VisualSurface_1()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_2();
                result.SourceSize = new Vector2(30F, 30F);
                result.SourceOffset = new Vector2(0F, 0F);
                return result;
            }

            ContainerVisual ContainerVisual_0()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                result.Children.InsertAtTop(ContainerVisual_1());
                return result;
            }

            ContainerVisual ContainerVisual_1()
            {
                var result = _c.CreateContainerVisual();
                // Shape tree root for layer: block
                result.Children.InsertAtTop(ShapeVisual_0());
                return result;
            }

            ContainerVisual ContainerVisual_2()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                result.Children.InsertAtTop(ContainerVisual_3());
                return result;
            }

            ContainerVisual ContainerVisual_3()
            {
                var result = _c.CreateContainerVisual();
                // Shape tree root for layer: x2
                result.Children.InsertAtTop(ShapeVisual_1());
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                if (_root != null) { return _root; }
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                propertySet.InsertScalar("t0", 0F);
                propertySet.InsertScalar("t1", 0F);
                result.Children.InsertAtTop(SpriteVisual_0());
                return result;
            }

            // - - - - - - Shape tree root for layer: block
            // - - - ShapeGroup: Rectangle 111
            // - Path 1
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_0()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_0(), StepThenHoldEasingFunction());
                // Frame 15.
                result.InsertKeyFrame(0.125F, Path_0(), HoldThenStepEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.166666672F, new CompositionPath(Geometry_01()), _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F)));
                // Frame 30.
                result.InsertKeyFrame(0.25F, new CompositionPath(Geometry_02()), _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F)));
                return result;
            }

            // - - - - - - - Shape tree root for layer: x2
            // - - - - - Transforms: x2
            // - - - ShapeGroup: Vector 75
            // - Path 1
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_1()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_1(), StepThenHoldEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.166666672F, Path_1(), HoldThenStepEasingFunction());
                // Frame 25.
                result.InsertKeyFrame(0.208333328F, new CompositionPath(Geometry_04()), _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F)));
                // Frame 30.
                result.InsertKeyFrame(0.25F, new CompositionPath(Geometry_05()), _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F)));
                return result;
            }

            // - - - - - - - Shape tree root for layer: x2
            // - - - - - Transforms: x2
            // - - - ShapeGroup: Vector 74
            // - Path 1
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_2()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_2(), StepThenHoldEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.166666672F, Path_2(), HoldThenStepEasingFunction());
                // Frame 25.
                result.InsertKeyFrame(0.208333328F, new CompositionPath(Geometry_07()), _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F)));
                // Frame 30.
                result.InsertKeyFrame(0.25F, new CompositionPath(Geometry_08()), _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F)));
                return result;
            }

            // - - - - - - - Shape tree root for layer: x2
            // - - - - - Transforms: x2
            // - - - ShapeGroup: Vector 73
            // - Path 1
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_3()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_3(), StepThenHoldEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.166666672F, Path_3(), HoldThenStepEasingFunction());
                // Frame 25.
                result.InsertKeyFrame(0.208333328F, new CompositionPath(Geometry_10()), _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F)));
                // Frame 30.
                result.InsertKeyFrame(0.25F, new CompositionPath(Geometry_11()), _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F)));
                return result;
            }

            // - Shape tree root for layer: x2
            // Scale
            ScalarKeyFrameAnimation ScaleXScalarAnimation_0p167_to_0p167()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0.166669995F, HoldThenStepEasingFunction());
                // Frame 5.
                result.InsertKeyFrame(0.0416666679F, 0.083329998F, _c.CreateCubicBezierEasingFunction(new Vector2(1F, 0F), new Vector2(0.666999996F, 1F)));
                // Frame 15.
                result.InsertKeyFrame(0.125F, 0.083329998F, _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F)));
                // Frame 20.
                result.InsertKeyFrame(0.166666672F, 0.166669995F, _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0F, 1F)));
                return result;
            }

            // - Shape tree root for layer: x2
            // Scale
            ScalarKeyFrameAnimation ScaleYScalarAnimation_0p167_to_0p167()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0.166669995F, HoldThenStepEasingFunction());
                // Frame 5.
                result.InsertKeyFrame(0.0416666679F, 0.083329998F, _c.CreateCubicBezierEasingFunction(new Vector2(1F, 0F), new Vector2(0.666999996F, 1F)));
                // Frame 15.
                result.InsertKeyFrame(0.125F, 0.083329998F, _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F)));
                // Frame 20.
                result.InsertKeyFrame(0.166666672F, 0.166669995F, _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0F, 1F)));
                return result;
            }

            ScalarKeyFrameAnimation t0ScalarAnimation_0_to_1()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 5.
                result.InsertKeyFrame(0.0416666642F, 1F, _c.CreateCubicBezierEasingFunction(new Vector2(1F, 0F), new Vector2(0.833000004F, 0.592999995F)));
                // Frame 14.
                result.InsertKeyFrame(0.116666675F, 0F, StepThenHoldEasingFunction());
                // Frame 15.
                result.InsertKeyFrame(0.124999993F, 1F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.0370000005F), new Vector2(0.833000004F, 0.957000017F)));
                return result;
            }

            ScalarKeyFrameAnimation t1ScalarAnimation_0_to_1()
            {
                // Frame 15.
                var result = CreateScalarKeyFrameAnimation(0.125F, 0F, StepThenHoldEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 20.
                result.InsertKeyFrame(0.166666657F, 1F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.395000011F), new Vector2(0.833000004F, 0.935000002F)));
                // Frame 20.
                result.InsertKeyFrame(0.166666672F, 0F, StepThenHoldEasingFunction());
                // Frame 30.
                result.InsertKeyFrame(0.249999985F, 1F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.779999971F), new Vector2(0.666999996F, 1F)));
                return result;
            }

            // Shape tree root for layer: block
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(30F, 30F);
                result.Shapes.Add(ContainerShape_00());
                return result;
            }

            // Shape tree root for layer: x2
            ShapeVisual ShapeVisual_1()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(30F, 30F);
                result.Shapes.Add(ContainerShape_04());
                return result;
            }

            SpriteVisual SpriteVisual_0()
            {
                var result = _c.CreateSpriteVisual();
                result.Offset = new Vector3(0F, 0F, 0F);
                result.Size = new Vector2(30F, 30F);
                result.Brush = EffectBrush();
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                if (_holdThenStepEasingFunction != null) { return _holdThenStepEasingFunction; }
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.FinalStep = 1;
                result.IsFinalStepSingleFrame = true;
                result.StepCount = 1;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                if (_stepThenHoldEasingFunction != null) { return _stepThenHoldEasingFunction; }
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.FinalStep = 1;
                result.IsInitialStepSingleFrame = true;
                result.StepCount = 1;
                return result;
            }

            // - Shape tree root for layer: x2
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(15F, 15F), HoldThenStepEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 5.
                result.InsertExpressionKeyFrame(0.0416666642F, "Pow(1-_.t0,3)*Vector2(15,15)+(3*Square(1-_.t0)*_.t0*Vector2(17.667,15))+(3*(1-_.t0)*Square(_.t0)*Vector2(33.667,15))+(Pow(_.t0,3)*Vector2(31,15))", StepThenHoldEasingFunction());
                // Frame 6.
                result.InsertKeyFrame(0.0500000007F, new Vector2(31F, 15F), StepThenHoldEasingFunction());
                // Frame 6.
                result.InsertKeyFrame(0.0500000045F, new Vector2(-1F, 15F), _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.0419999994F), new Vector2(0.833000004F, 0.963F)));
                // Frame 14.
                result.InsertKeyFrame(0.116666667F, new Vector2(31F, 15F), _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.296000004F), new Vector2(0.833000004F, 0.703999996F)));
                // Frame 15.
                result.InsertExpressionKeyFrame(0.124999993F, "Pow(1-_.t0,3)*Vector2(31,15)+(3*Square(1-_.t0)*_.t0*Vector2(31,15))+(3*(1-_.t0)*Square(_.t0)*Vector2(1.528,15))+(Pow(_.t0,3)*Vector2(-1,15))", StepThenHoldEasingFunction());
                // Frame 20.
                result.InsertExpressionKeyFrame(0.166666657F, "Pow(1-_.t1,3)*Vector2(-1,15)+(3*Square(1-_.t1)*_.t1*Vector2(-3.528,15))+(3*(1-_.t1)*Square(_.t1)*Vector2(13.166,15))+(Pow(_.t1,3)*Vector2(15.833,15))", StepThenHoldEasingFunction());
                // Frame 30.
                result.InsertExpressionKeyFrame(0.249999985F, "Pow(1-_.t1,3)*Vector2(15.833,15)+(3*Square(1-_.t1)*_.t1*Vector2(18.5,15))+(3*(1-_.t1)*Square(_.t1)*Vector2(15.139,15))+(Pow(_.t1,3)*Vector2(15,15))", StepThenHoldEasingFunction());
                // Frame 30.
                result.InsertKeyFrame(0.25F, new Vector2(15F, 15F), StepThenHoldEasingFunction());
                return result;
            }

            internal Double_AnimatedVisual_UAPv11(
                Compositor compositor,
                CompositionPropertySet themeProperties
                )
            {
                _c = compositor;
                _themeProperties = themeProperties;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(30F, 30F);
            void IDisposable.Dispose() => _root?.Dispose();

            public void CreateAnimations()
            {
                _containerShape_04.StartAnimation("Scale.X", ScaleXScalarAnimation_0p167_to_0p167());
                var controller = _containerShape_04.TryGetAnimationController("Scale.X");
                controller.Pause();
                BindProperty(controller, "Progress", "_.Progress", "_", _root);
                _containerShape_04.StartAnimation("Scale.Y", ScaleYScalarAnimation_0p167_to_0p167());
                controller = _containerShape_04.TryGetAnimationController("Scale.Y");
                controller.Pause();
                BindProperty(controller, "Progress", "_.Progress", "_", _root);
                _containerShape_04.StartAnimation("Offset", OffsetVector2Animation());
                controller = _containerShape_04.TryGetAnimationController("Offset");
                controller.Pause();
                BindProperty(controller, "Progress", "_.Progress", "_", _root);
                _pathGeometry_0.StartAnimation("Path", PathKeyFrameAnimation_0());
                controller = _pathGeometry_0.TryGetAnimationController("Path");
                controller.Pause();
                BindProperty(controller, "Progress", "_.Progress", "_", _root);
                _pathGeometry_1.StartAnimation("Path", PathKeyFrameAnimation_1());
                controller = _pathGeometry_1.TryGetAnimationController("Path");
                controller.Pause();
                BindProperty(controller, "Progress", "_.Progress", "_", _root);
                _pathGeometry_2.StartAnimation("Path", PathKeyFrameAnimation_2());
                controller = _pathGeometry_2.TryGetAnimationController("Path");
                controller.Pause();
                BindProperty(controller, "Progress", "_.Progress", "_", _root);
                _pathGeometry_3.StartAnimation("Path", PathKeyFrameAnimation_3());
                controller = _pathGeometry_3.TryGetAnimationController("Path");
                controller.Pause();
                BindProperty(controller, "Progress", "_.Progress", "_", _root);
                _root.Properties.StartAnimation("t0", t0ScalarAnimation_0_to_1());
                controller = _root.Properties.TryGetAnimationController("t0");
                controller.Pause();
                BindProperty(controller, "Progress", "_.Progress", "_", _root);
                _root.Properties.StartAnimation("t1", t1ScalarAnimation_0_to_1());
                controller = _root.Properties.TryGetAnimationController("t1");
                controller.Pause();
                BindProperty(controller, "Progress", "_.Progress", "_", _root);
            }

            public void DestroyAnimations()
            {
                _containerShape_04.StopAnimation("Scale.X");
                _containerShape_04.StopAnimation("Scale.Y");
                _containerShape_04.StopAnimation("Offset");
                _pathGeometry_0.StopAnimation("Path");
                _pathGeometry_1.StopAnimation("Path");
                _pathGeometry_2.StopAnimation("Path");
                _pathGeometry_3.StopAnimation("Path");
                _root.Properties.StopAnimation("t0");
                _root.Properties.StopAnimation("t1");
            }

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 11);
            }
        }

        sealed partial class Double_AnimatedVisual_UAPv8 : Microsoft.UI.Xaml.Controls.IAnimatedVisual
        {
            const long c_durationTicks = 20000000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            readonly CompositionPropertySet _themeProperties;
            CompositionColorBrush _themeColor_Color_000000;
            CompositionColorBrush _themeColor_Color_E877FF_0;
            CompositionColorBrush _themeColor_Color_E877FF_1;
            CompositionColorBrush _themeColor_Color_E877FF_2;
            CompositionContainerShape _containerShape_04;
            ContainerVisual _root;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            // - - - - - - - Shape tree root for layer: block
            // - - - - ShapeGroup: Rectangle 111
            // - - Path 1
            CanvasGeometry Geometry_0()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(12F, -5F));
                    builder.AddLine(new Vector2(12F, 5F));
                    builder.AddCubicBezier(new Vector2(12F, 7.20900011F), new Vector2(10.2089996F, 9F), new Vector2(8F, 9F));
                    builder.AddLine(new Vector2(-8F, 9F));
                    builder.AddCubicBezier(new Vector2(-10.2089996F, 9F), new Vector2(-12F, 7.20900011F), new Vector2(-12F, 5F));
                    builder.AddLine(new Vector2(-12F, -5F));
                    builder.AddCubicBezier(new Vector2(-12F, -7.20900011F), new Vector2(-10.2089996F, -9F), new Vector2(-8F, -9F));
                    builder.AddLine(new Vector2(8F, -9F));
                    builder.AddCubicBezier(new Vector2(10.2089996F, -9F), new Vector2(12F, -7.20900011F), new Vector2(12F, -5F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - Shape tree root for layer: x2
            // - - - - - - Transforms: x2
            // - - - - ShapeGroup: Vector 75
            // - - Path 1
            CanvasGeometry Geometry_1()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-2.5F, -2F));
                    builder.AddLine(new Vector2(-2.5F, -2.5F));
                    builder.AddCubicBezier(new Vector2(-2.5F, -3.32800007F), new Vector2(-1.82799995F, -4F), new Vector2(-1F, -4F));
                    builder.AddLine(new Vector2(0.337000012F, -4F));
                    builder.AddCubicBezier(new Vector2(1.53199995F, -4F), new Vector2(2.5F, -3.03200006F), new Vector2(2.5F, -1.83700001F));
                    builder.AddCubicBezier(new Vector2(2.5F, -1.01800001F), new Vector2(2.03699994F, -0.268000007F), new Vector2(1.30400002F, 0.0979999974F));
                    builder.AddLine(new Vector2(-1.39400005F, 1.44700003F));
                    builder.AddCubicBezier(new Vector2(-2.07200003F, 1.78600001F), new Vector2(-2.5F, 2.47799993F), new Vector2(-2.5F, 3.23600006F));
                    builder.AddLine(new Vector2(-2.5F, 4F));
                    builder.AddLine(new Vector2(2.5F, 4F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - Shape tree root for layer: x2
            // - - - - - - Transforms: x2
            // - - - - ShapeGroup: Vector 74
            // - - Path 1
            CanvasGeometry Geometry_2()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-3F, 4F));
                    builder.AddLine(new Vector2(3F, -4F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - Shape tree root for layer: x2
            // - - - - - - Transforms: x2
            // - - - - ShapeGroup: Vector 73
            // - - Path 1
            CanvasGeometry Geometry_3()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(3F, 4F));
                    builder.AddLine(new Vector2(-3F, -4F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Shape tree root for layer: block
            // - - ShapeGroup: Rectangle 111
            // Path 1
            // Color bound to theme property value: Color_000000
            CompositionColorBrush ThemeColor_Color_000000()
            {
                if (_themeColor_Color_000000 != null) { return _themeColor_Color_000000; }
                var result = _themeColor_Color_000000 = _c.CreateColorBrush();
                BindProperty(_themeColor_Color_000000, "Color", "ColorRGB(_theme.Color_000000.W,_theme.Color_000000.X,_theme.Color_000000.Y,_theme.Color_000000.Z)", "_theme", _themeProperties);
                return result;
            }

            // - - - - - - Shape tree root for layer: x2
            // - - - - Transforms: x2
            // - - ShapeGroup: Vector 75
            // Path 1
            // Color bound to theme property value: Color_E877FF
            CompositionColorBrush ThemeColor_Color_E877FF_0()
            {
                if (_themeColor_Color_E877FF_0 != null) { return _themeColor_Color_E877FF_0; }
                var result = _themeColor_Color_E877FF_0 = _c.CreateColorBrush();
                BindProperty(_themeColor_Color_E877FF_0, "Color", "ColorRGB(_theme.Color_E877FF.W,_theme.Color_E877FF.X,_theme.Color_E877FF.Y,_theme.Color_E877FF.Z)", "_theme", _themeProperties);
                return result;
            }

            // - - - - - - Shape tree root for layer: x2
            // - - - - Transforms: x2
            // - - ShapeGroup: Vector 74
            // Path 1
            // Color bound to theme property value: Color_E877FF
            CompositionColorBrush ThemeColor_Color_E877FF_1()
            {
                if (_themeColor_Color_E877FF_1 != null) { return _themeColor_Color_E877FF_1; }
                var result = _themeColor_Color_E877FF_1 = _c.CreateColorBrush();
                BindProperty(_themeColor_Color_E877FF_1, "Color", "ColorRGB(_theme.Color_E877FF.W,_theme.Color_E877FF.X,_theme.Color_E877FF.Y,_theme.Color_E877FF.Z)", "_theme", _themeProperties);
                return result;
            }

            // - - - - - - Shape tree root for layer: x2
            // - - - - Transforms: x2
            // - - ShapeGroup: Vector 73
            // Path 1
            // Color bound to theme property value: Color_E877FF
            CompositionColorBrush ThemeColor_Color_E877FF_2()
            {
                if (_themeColor_Color_E877FF_2 != null) { return _themeColor_Color_E877FF_2; }
                var result = _themeColor_Color_E877FF_2 = _c.CreateColorBrush();
                BindProperty(_themeColor_Color_E877FF_2, "Color", "ColorRGB(_theme.Color_E877FF.W,_theme.Color_E877FF.X,_theme.Color_E877FF.Y,_theme.Color_E877FF.Z)", "_theme", _themeProperties);
                return result;
            }

            // Shape tree root for layer: block
            CompositionContainerShape ContainerShape_00()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 0F);
                result.Offset = new Vector2(15F, 15F);
                result.RotationAngleInDegrees = 0F;
                result.Scale = new Vector2(0.166669995F, 0.166669995F);
                result.Shapes.Add(ContainerShape_01());
                return result;
            }

            // - Shape tree root for layer: block
            CompositionContainerShape ContainerShape_01()
            {
                var result = _c.CreateContainerShape();
                // ShapeGroup: Rectangle 111
                result.Shapes.Add(ContainerShape_02());
                return result;
            }

            // - - Shape tree root for layer: block
            // ShapeGroup: Rectangle 111
            CompositionContainerShape ContainerShape_02()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 0F);
                result.Offset = new Vector2(0F, 0F);
                result.RotationAngleInDegrees = 0F;
                result.Scale = new Vector2(6F, 6F);
                result.Shapes.Add(ContainerShape_03());
                return result;
            }

            // - - - Shape tree root for layer: block
            // ShapeGroup: Rectangle 111
            CompositionContainerShape ContainerShape_03()
            {
                var result = _c.CreateContainerShape();
                // Path 1
                result.Shapes.Add(SpriteShape_0());
                return result;
            }

            // Shape tree root for layer: x2
            CompositionContainerShape ContainerShape_04()
            {
                if (_containerShape_04 != null) { return _containerShape_04; }
                var result = _containerShape_04 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 0F);
                result.RotationAngleInDegrees = 0F;
                // Transforms: x2
                result.Shapes.Add(ContainerShape_05());
                return result;
            }

            // - Shape tree root for layer: x2
            // Transforms for x2
            CompositionContainerShape ContainerShape_05()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 0F);
                result.Offset = new Vector2(-24F, 0F);
                result.RotationAngleInDegrees = 0F;
                result.Scale = new Vector2(1F, 1F);
                result.Shapes.Add(ContainerShape_06());
                return result;
            }

            // - - Shape tree root for layer: x2
            // Transforms: x2
            CompositionContainerShape ContainerShape_06()
            {
                var result = _c.CreateContainerShape();
                var shapes = result.Shapes;
                // ShapeGroup: Vector 75
                shapes.Add(ContainerShape_07());
                // ShapeGroup: Vector 74
                shapes.Add(ContainerShape_09());
                // ShapeGroup: Vector 73
                shapes.Add(ContainerShape_11());
                return result;
            }

            // - - - Shape tree root for layer: x2
            // - Transforms: x2
            // ShapeGroup: Vector 75
            CompositionContainerShape ContainerShape_07()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 0F);
                result.Offset = new Vector2(51F, 0F);
                result.RotationAngleInDegrees = 0F;
                result.Scale = new Vector2(6F, 6F);
                result.Shapes.Add(ContainerShape_08());
                return result;
            }

            // - - - - Shape tree root for layer: x2
            // - - Transforms: x2
            // ShapeGroup: Vector 75
            CompositionContainerShape ContainerShape_08()
            {
                var result = _c.CreateContainerShape();
                // Path 1
                result.Shapes.Add(SpriteShape_1());
                return result;
            }

            // - - - Shape tree root for layer: x2
            // - Transforms: x2
            // ShapeGroup: Vector 74
            CompositionContainerShape ContainerShape_09()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 0F);
                result.Offset = new Vector2(0F, 0F);
                result.RotationAngleInDegrees = 0F;
                result.Scale = new Vector2(6F, 6F);
                result.Shapes.Add(ContainerShape_10());
                return result;
            }

            // - - - - Shape tree root for layer: x2
            // - - Transforms: x2
            // ShapeGroup: Vector 74
            CompositionContainerShape ContainerShape_10()
            {
                var result = _c.CreateContainerShape();
                // Path 1
                result.Shapes.Add(SpriteShape_2());
                return result;
            }

            // - - - Shape tree root for layer: x2
            // - Transforms: x2
            // ShapeGroup: Vector 73
            CompositionContainerShape ContainerShape_11()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 0F);
                result.Offset = new Vector2(0F, 0F);
                result.RotationAngleInDegrees = 0F;
                result.Scale = new Vector2(6F, 6F);
                result.Shapes.Add(ContainerShape_12());
                return result;
            }

            // - - - - Shape tree root for layer: x2
            // - - Transforms: x2
            // ShapeGroup: Vector 73
            CompositionContainerShape ContainerShape_12()
            {
                var result = _c.CreateContainerShape();
                // Path 1
                result.Shapes.Add(SpriteShape_3());
                return result;
            }

            CompositionEffectBrush EffectBrush()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationOut;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                var effectFactory = _c.CreateEffectFactory(compositeEffect);
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_0());
                result.SetSourceParameter("source", SurfaceBrush_1());
                return result;
            }

            // - - - - - Shape tree root for layer: block
            // - - ShapeGroup: Rectangle 111
            // Path 1
            CompositionPathGeometry PathGeometry_0()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_0()));
            }

            // - - - - - - Shape tree root for layer: x2
            // - - - - Transforms: x2
            // - - ShapeGroup: Vector 75
            // Path 1
            CompositionPathGeometry PathGeometry_1()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_1()));
            }

            // - - - - - - Shape tree root for layer: x2
            // - - - - Transforms: x2
            // - - ShapeGroup: Vector 74
            // Path 1
            CompositionPathGeometry PathGeometry_2()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_2()));
            }

            // - - - - - - Shape tree root for layer: x2
            // - - - - Transforms: x2
            // - - ShapeGroup: Vector 73
            // Path 1
            CompositionPathGeometry PathGeometry_3()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_3()));
            }

            // - - - - Shape tree root for layer: block
            // - ShapeGroup: Rectangle 111
            // Path 1
            CompositionSpriteShape SpriteShape_0()
            {
                var result = _c.CreateSpriteShape(PathGeometry_0());
                result.FillBrush = ThemeColor_Color_000000();
                return result;
            }

            // - - - - - Shape tree root for layer: x2
            // - - - Transforms: x2
            // - ShapeGroup: Vector 75
            // Path 1
            CompositionSpriteShape SpriteShape_1()
            {
                var result = _c.CreateSpriteShape(PathGeometry_1());
                result.StrokeBrush = ThemeColor_Color_E877FF_0();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeDashOffset = 0F;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 1.65999997F;
                return result;
            }

            // - - - - - Shape tree root for layer: x2
            // - - - Transforms: x2
            // - ShapeGroup: Vector 74
            // Path 1
            CompositionSpriteShape SpriteShape_2()
            {
                var result = _c.CreateSpriteShape(PathGeometry_2());
                result.StrokeBrush = ThemeColor_Color_E877FF_1();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeDashOffset = 0F;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 1.65999997F;
                return result;
            }

            // - - - - - Shape tree root for layer: x2
            // - - - Transforms: x2
            // - ShapeGroup: Vector 73
            // Path 1
            CompositionSpriteShape SpriteShape_3()
            {
                var result = _c.CreateSpriteShape(PathGeometry_3());
                result.StrokeBrush = ThemeColor_Color_E877FF_2();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeDashOffset = 0F;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 1.65999997F;
                return result;
            }

            CompositionSurfaceBrush SurfaceBrush_0()
            {
                return _c.CreateSurfaceBrush(VisualSurface_0());
            }

            CompositionSurfaceBrush SurfaceBrush_1()
            {
                return _c.CreateSurfaceBrush(VisualSurface_1());
            }

            CompositionVisualSurface VisualSurface_0()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_0();
                result.SourceSize = new Vector2(30F, 30F);
                result.SourceOffset = new Vector2(0F, 0F);
                return result;
            }

            CompositionVisualSurface VisualSurface_1()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_2();
                result.SourceSize = new Vector2(30F, 30F);
                result.SourceOffset = new Vector2(0F, 0F);
                return result;
            }

            ContainerVisual ContainerVisual_0()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                result.Children.InsertAtTop(ContainerVisual_1());
                return result;
            }

            ContainerVisual ContainerVisual_1()
            {
                var result = _c.CreateContainerVisual();
                // Shape tree root for layer: block
                result.Children.InsertAtTop(ShapeVisual_0());
                return result;
            }

            ContainerVisual ContainerVisual_2()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                result.Children.InsertAtTop(ContainerVisual_3());
                return result;
            }

            ContainerVisual ContainerVisual_3()
            {
                var result = _c.CreateContainerVisual();
                // Shape tree root for layer: x2
                result.Children.InsertAtTop(ShapeVisual_1());
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                if (_root != null) { return _root; }
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                propertySet.InsertScalar("t0", 0F);
                propertySet.InsertScalar("t1", 0F);
                result.Children.InsertAtTop(SpriteVisual_0());
                return result;
            }

            // - Shape tree root for layer: x2
            // Scale
            ScalarKeyFrameAnimation ScaleXScalarAnimation_0p167_to_0p167()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0.166669995F, HoldThenStepEasingFunction());
                // Frame 5.
                result.InsertKeyFrame(0.0416666679F, 0.083329998F, _c.CreateCubicBezierEasingFunction(new Vector2(1F, 0F), new Vector2(0.666999996F, 1F)));
                // Frame 15.
                result.InsertKeyFrame(0.125F, 0.083329998F, _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F)));
                // Frame 20.
                result.InsertKeyFrame(0.166666672F, 0.166669995F, _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0F, 1F)));
                return result;
            }

            // - Shape tree root for layer: x2
            // Scale
            ScalarKeyFrameAnimation ScaleYScalarAnimation_0p167_to_0p167()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0.166669995F, HoldThenStepEasingFunction());
                // Frame 5.
                result.InsertKeyFrame(0.0416666679F, 0.083329998F, _c.CreateCubicBezierEasingFunction(new Vector2(1F, 0F), new Vector2(0.666999996F, 1F)));
                // Frame 15.
                result.InsertKeyFrame(0.125F, 0.083329998F, _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F)));
                // Frame 20.
                result.InsertKeyFrame(0.166666672F, 0.166669995F, _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0F, 1F)));
                return result;
            }

            ScalarKeyFrameAnimation t0ScalarAnimation_0_to_1()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 5.
                result.InsertKeyFrame(0.0416666642F, 1F, _c.CreateCubicBezierEasingFunction(new Vector2(1F, 0F), new Vector2(0.833000004F, 0.592999995F)));
                // Frame 14.
                result.InsertKeyFrame(0.116666675F, 0F, StepThenHoldEasingFunction());
                // Frame 15.
                result.InsertKeyFrame(0.124999993F, 1F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.0370000005F), new Vector2(0.833000004F, 0.957000017F)));
                return result;
            }

            ScalarKeyFrameAnimation t1ScalarAnimation_0_to_1()
            {
                // Frame 15.
                var result = CreateScalarKeyFrameAnimation(0.125F, 0F, StepThenHoldEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 20.
                result.InsertKeyFrame(0.166666657F, 1F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.395000011F), new Vector2(0.833000004F, 0.935000002F)));
                // Frame 20.
                result.InsertKeyFrame(0.166666672F, 0F, StepThenHoldEasingFunction());
                // Frame 30.
                result.InsertKeyFrame(0.249999985F, 1F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.779999971F), new Vector2(0.666999996F, 1F)));
                return result;
            }

            // Shape tree root for layer: block
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(30F, 30F);
                result.Shapes.Add(ContainerShape_00());
                return result;
            }

            // Shape tree root for layer: x2
            ShapeVisual ShapeVisual_1()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(30F, 30F);
                result.Shapes.Add(ContainerShape_04());
                return result;
            }

            SpriteVisual SpriteVisual_0()
            {
                var result = _c.CreateSpriteVisual();
                result.Offset = new Vector3(0F, 0F, 0F);
                result.Size = new Vector2(30F, 30F);
                result.Brush = EffectBrush();
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                if (_holdThenStepEasingFunction != null) { return _holdThenStepEasingFunction; }
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.FinalStep = 1;
                result.IsFinalStepSingleFrame = true;
                result.StepCount = 1;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                if (_stepThenHoldEasingFunction != null) { return _stepThenHoldEasingFunction; }
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.FinalStep = 1;
                result.IsInitialStepSingleFrame = true;
                result.StepCount = 1;
                return result;
            }

            // - Shape tree root for layer: x2
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(15F, 15F), HoldThenStepEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 5.
                result.InsertExpressionKeyFrame(0.0416666642F, "Pow(1-_.t0,3)*Vector2(15,15)+(3*Square(1-_.t0)*_.t0*Vector2(17.667,15))+(3*(1-_.t0)*Square(_.t0)*Vector2(33.667,15))+(Pow(_.t0,3)*Vector2(31,15))", StepThenHoldEasingFunction());
                // Frame 6.
                result.InsertKeyFrame(0.0500000007F, new Vector2(31F, 15F), StepThenHoldEasingFunction());
                // Frame 6.
                result.InsertKeyFrame(0.0500000045F, new Vector2(-1F, 15F), _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.0419999994F), new Vector2(0.833000004F, 0.963F)));
                // Frame 14.
                result.InsertKeyFrame(0.116666667F, new Vector2(31F, 15F), _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.296000004F), new Vector2(0.833000004F, 0.703999996F)));
                // Frame 15.
                result.InsertExpressionKeyFrame(0.124999993F, "Pow(1-_.t0,3)*Vector2(31,15)+(3*Square(1-_.t0)*_.t0*Vector2(31,15))+(3*(1-_.t0)*Square(_.t0)*Vector2(1.528,15))+(Pow(_.t0,3)*Vector2(-1,15))", StepThenHoldEasingFunction());
                // Frame 20.
                result.InsertExpressionKeyFrame(0.166666657F, "Pow(1-_.t1,3)*Vector2(-1,15)+(3*Square(1-_.t1)*_.t1*Vector2(-3.528,15))+(3*(1-_.t1)*Square(_.t1)*Vector2(13.166,15))+(Pow(_.t1,3)*Vector2(15.833,15))", StepThenHoldEasingFunction());
                // Frame 30.
                result.InsertExpressionKeyFrame(0.249999985F, "Pow(1-_.t1,3)*Vector2(15.833,15)+(3*Square(1-_.t1)*_.t1*Vector2(18.5,15))+(3*(1-_.t1)*Square(_.t1)*Vector2(15.139,15))+(Pow(_.t1,3)*Vector2(15,15))", StepThenHoldEasingFunction());
                // Frame 30.
                result.InsertKeyFrame(0.25F, new Vector2(15F, 15F), StepThenHoldEasingFunction());
                return result;
            }

            internal Double_AnimatedVisual_UAPv8(
                Compositor compositor,
                CompositionPropertySet themeProperties
                )
            {
                _c = compositor;
                _themeProperties = themeProperties;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(30F, 30F);
            void IDisposable.Dispose() => _root?.Dispose();

            public void CreateAnimations()
            {
                _containerShape_04.StartAnimation("Scale.X", ScaleXScalarAnimation_0p167_to_0p167());
                var controller = _containerShape_04.TryGetAnimationController("Scale.X");
                controller.Pause();
                BindProperty(controller, "Progress", "_.Progress", "_", _root);
                _containerShape_04.StartAnimation("Scale.Y", ScaleYScalarAnimation_0p167_to_0p167());
                controller = _containerShape_04.TryGetAnimationController("Scale.Y");
                controller.Pause();
                BindProperty(controller, "Progress", "_.Progress", "_", _root);
                _containerShape_04.StartAnimation("Offset", OffsetVector2Animation());
                controller = _containerShape_04.TryGetAnimationController("Offset");
                controller.Pause();
                BindProperty(controller, "Progress", "_.Progress", "_", _root);
                _root.Properties.StartAnimation("t0", t0ScalarAnimation_0_to_1());
                controller = _root.Properties.TryGetAnimationController("t0");
                controller.Pause();
                BindProperty(controller, "Progress", "_.Progress", "_", _root);
                _root.Properties.StartAnimation("t1", t1ScalarAnimation_0_to_1());
                controller = _root.Properties.TryGetAnimationController("t1");
                controller.Pause();
                BindProperty(controller, "Progress", "_.Progress", "_", _root);
            }

            public void DestroyAnimations()
            {
                _containerShape_04.StopAnimation("Scale.X");
                _containerShape_04.StopAnimation("Scale.Y");
                _containerShape_04.StopAnimation("Offset");
                _root.Properties.StopAnimation("t0");
                _root.Properties.StopAnimation("t1");
            }

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 8);
            }
        }
    }
}
