// <auto-generated/>
using System;

namespace Telegram.Api.TL
{
	public partial class TLMessagesBotCallbackAnswer : TLObject 
	{
		[Flags]
		public enum Flag : int
		{
			Alert = (1 << 1),
			Message = (1 << 0),
		}

		public bool IsAlert { get { return Flags.HasFlag(Flag.Alert); } set { Flags = value ? (Flags | Flag.Alert) : (Flags & ~Flag.Alert); } }
		public bool HasMessage { get { return Flags.HasFlag(Flag.Message); } set { Flags = value ? (Flags | Flag.Message) : (Flags & ~Flag.Message); } }

		public Flag Flags { get; set; }
		public String Message { get; set; }

		public TLMessagesBotCallbackAnswer() { }
		public TLMessagesBotCallbackAnswer(TLBinaryReader from, TLType type = TLType.MessagesBotCallbackAnswer)
		{
			Read(from, type);
		}

		public override TLType TypeId { get { return TLType.MessagesBotCallbackAnswer; } }

		public override void Read(TLBinaryReader from, TLType type = TLType.MessagesBotCallbackAnswer)
		{
			Flags = (Flag)from.ReadInt32();
			if (HasMessage) { Message = from.ReadString(); }
		}

		public override void Write(TLBinaryWriter to)
		{
			to.Write(0x1264F1C6);
			to.Write((Int32)Flags);
			if (HasMessage) to.Write(Message);
		}
	}
}