// <auto-generated/>
using System;

namespace Telegram.Api.TL
{
	public partial class TLMessagesPeerDialogs : TLObject 
	{
		public TLVector<TLDialog> Dialogs { get; set; }
		public TLVector<TLMessageBase> Messages { get; set; }
		public TLVector<TLChatBase> Chats { get; set; }
		public TLVector<TLUserBase> Users { get; set; }
		public TLUpdatesState State { get; set; }

		public TLMessagesPeerDialogs() { }
		public TLMessagesPeerDialogs(TLBinaryReader from, bool cache = false)
		{
			Read(from, cache);
		}

		public override TLType TypeId { get { return TLType.MessagesPeerDialogs; } }

		public override void Read(TLBinaryReader from, bool cache = false)
		{
			Dialogs = TLFactory.Read<TLVector<TLDialog>>(from, cache);
			Messages = TLFactory.Read<TLVector<TLMessageBase>>(from, cache);
			Chats = TLFactory.Read<TLVector<TLChatBase>>(from, cache);
			Users = TLFactory.Read<TLVector<TLUserBase>>(from, cache);
			State = TLFactory.Read<TLUpdatesState>(from, cache);
			if (cache) ReadFromCache(from);
		}

		public override void Write(TLBinaryWriter to, bool cache = false)
		{
			to.Write(0x3371C354);
			to.WriteObject(Dialogs, cache);
			to.WriteObject(Messages, cache);
			to.WriteObject(Chats, cache);
			to.WriteObject(Users, cache);
			to.WriteObject(State, cache);
			if (cache) WriteToCache(to);
		}
	}
}