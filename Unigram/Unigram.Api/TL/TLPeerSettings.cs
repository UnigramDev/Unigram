// <auto-generated/>
using System;

namespace Telegram.Api.TL
{
	public partial class TLPeerSettings : TLObject 
	{
		[Flags]
		public enum Flag : Int32
		{
			ReportSpam = (1 << 0),
		}

		public bool IsReportSpam { get { return Flags.HasFlag(Flag.ReportSpam); } set { Flags = value ? (Flags | Flag.ReportSpam) : (Flags & ~Flag.ReportSpam); } }

		public Flag Flags { get; set; }

		public TLPeerSettings() { }
		public TLPeerSettings(TLBinaryReader from, bool cache = false)
		{
			Read(from, cache);
		}

		public override TLType TypeId { get { return TLType.PeerSettings; } }

		public override void Read(TLBinaryReader from, bool cache = false)
		{
			Flags = (Flag)from.ReadInt32();
			if (cache) ReadFromCache(from);
		}

		public override void Write(TLBinaryWriter to, bool cache = false)
		{
			to.Write(0x818426CD);
			to.Write((Int32)Flags);
			if (cache) WriteToCache(to);
		}
	}
}