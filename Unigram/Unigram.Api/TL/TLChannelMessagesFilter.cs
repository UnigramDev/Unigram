// <auto-generated/>
using System;

namespace Telegram.Api.TL
{
	public partial class TLChannelMessagesFilter : TLChannelMessagesFilterBase 
	{
		[Flags]
		public enum Flag : int
		{
			ExcludeNewMessages = (1 << 1),
		}

		public bool IsExcludeNewMessages { get { return Flags.HasFlag(Flag.ExcludeNewMessages); } set { Flags = value ? (Flags | Flag.ExcludeNewMessages) : (Flags & ~Flag.ExcludeNewMessages); } }

		public Flag Flags { get; set; }
		public TLVector<TLMessageRange> Ranges { get; set; }

		public TLChannelMessagesFilter() { }
		public TLChannelMessagesFilter(TLBinaryReader from, TLType type = TLType.ChannelMessagesFilter)
		{
			Read(from, type);
		}

		public override TLType TypeId { get { return TLType.ChannelMessagesFilter; } }

		public override void Read(TLBinaryReader from, TLType type = TLType.ChannelMessagesFilter)
		{
			Flags = (Flag)from.ReadInt32();
			Ranges = TLFactory.Read<TLVector<TLMessageRange>>(from);
		}

		public override void Write(TLBinaryWriter to)
		{
			to.Write(0xCD77D957);
			to.Write((Int32)Flags);
			to.WriteObject(Ranges);
		}
	}
}