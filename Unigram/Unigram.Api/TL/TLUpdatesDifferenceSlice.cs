// <auto-generated/>
using System;

namespace Telegram.Api.TL
{
	public partial class TLUpdatesDifferenceSlice : TLUpdatesDifferenceBase 
	{
		public TLUpdatesState IntermediateState { get; set; }

		public TLUpdatesDifferenceSlice() { }
		public TLUpdatesDifferenceSlice(TLBinaryReader from, bool cache = false)
		{
			Read(from, cache);
		}

		public override TLType TypeId { get { return TLType.UpdatesDifferenceSlice; } }

		public override void Read(TLBinaryReader from, bool cache = false)
		{
			NewMessages = TLFactory.Read<TLVector<TLMessageBase>>(from, cache);
			NewEncryptedMessages = TLFactory.Read<TLVector<TLEncryptedMessageBase>>(from, cache);
			OtherUpdates = TLFactory.Read<TLVector<TLUpdateBase>>(from, cache);
			Chats = TLFactory.Read<TLVector<TLChatBase>>(from, cache);
			Users = TLFactory.Read<TLVector<TLUserBase>>(from, cache);
			IntermediateState = TLFactory.Read<TLUpdatesState>(from, cache);
			if (cache) ReadFromCache(from);
		}

		public override void Write(TLBinaryWriter to, bool cache = false)
		{
			to.Write(0xA8FB1981);
			to.WriteObject(NewMessages, cache);
			to.WriteObject(NewEncryptedMessages, cache);
			to.WriteObject(OtherUpdates, cache);
			to.WriteObject(Chats, cache);
			to.WriteObject(Users, cache);
			to.WriteObject(IntermediateState, cache);
			if (cache) WriteToCache(to);
		}
	}
}