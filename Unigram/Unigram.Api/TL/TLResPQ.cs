// <auto-generated/>
using System;

namespace Telegram.Api.TL
{
	public partial class TLResPQ : TLObject 
	{
		public TLInt128 Nonce { get; set; }
		public TLInt128 ServerNonce { get; set; }
		public Byte[] PQ { get; set; }
		public TLVector<Int64> ServerPublicKeyFingerprints { get; set; }

		public TLResPQ() { }
		public TLResPQ(TLBinaryReader from, TLType type = TLType.ResPQ)
		{
			Read(from, type);
		}

		public override TLType TypeId { get { return TLType.ResPQ; } }

		public override void Read(TLBinaryReader from, TLType type = TLType.ResPQ)
		{
			Nonce = new TLInt128(from);
			ServerNonce = new TLInt128(from);
			PQ = from.ReadByteArray();
			ServerPublicKeyFingerprints = TLFactory.Read<TLVector<Int64>>(from);
		}

		public override void Write(TLBinaryWriter to)
		{
			to.Write(0x05162463);
			to.WriteObject(Nonce);
			to.WriteObject(ServerNonce);
			to.WriteByteArray(PQ);
			to.WriteObject(ServerPublicKeyFingerprints);
		}
	}
}