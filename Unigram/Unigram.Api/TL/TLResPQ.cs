// <auto-generated/>
using System;

namespace Telegram.Api.TL
{
	public partial class TLResPQ : TLObject 
	{
		public TLInt128 Nonce { get; set; }
		public TLInt128 ServerNonce { get; set; }
		public Byte[] PQ { get; set; }
		public TLVector<Int64> ServerPublicKeyFingerprints { get; set; }

		public TLResPQ() { }
		public TLResPQ(TLBinaryReader from, bool cache = false)
		{
			Read(from, cache);
		}

		public override TLType TypeId { get { return TLType.ResPQ; } }

		public override void Read(TLBinaryReader from, bool cache = false)
		{
			Nonce = new TLInt128(from, cache);
			ServerNonce = new TLInt128(from, cache);
			PQ = from.ReadByteArray();
			ServerPublicKeyFingerprints = TLFactory.Read<TLVector<Int64>>(from, cache);
			if (cache) ReadFromCache(from);
		}

		public override void Write(TLBinaryWriter to, bool cache = false)
		{
			to.Write(0x05162463);
			to.WriteObject(Nonce, cache);
			to.WriteObject(ServerNonce, cache);
			to.WriteByteArray(PQ);
			to.WriteObject(ServerPublicKeyFingerprints, cache);
			if (cache) WriteToCache(to);
		}
	}
}