// <auto-generated/>
using System;

namespace Telegram.Api.TL
{
	public partial class TLAuthorization : TLObject 
	{
		public Int64 Hash { get; set; }
		public Int32 Flags { get; set; }
		public String DeviceModel { get; set; }
		public String Platform { get; set; }
		public String SystemVersion { get; set; }
		public Int32 ApiId { get; set; }
		public String AppName { get; set; }
		public String AppVersion { get; set; }
		public Int32 DateCreated { get; set; }
		public Int32 DateActive { get; set; }
		public String Ip { get; set; }
		public String Country { get; set; }
		public String Region { get; set; }

		public TLAuthorization() { }
		public TLAuthorization(TLBinaryReader from, TLType type = TLType.Authorization)
		{
			Read(from, type);
		}

		public override TLType TypeId { get { return TLType.Authorization; } }

		public override void Read(TLBinaryReader from, TLType type = TLType.Authorization)
		{
			Hash = from.ReadInt64();
			Flags = from.ReadInt32();
			DeviceModel = from.ReadString();
			Platform = from.ReadString();
			SystemVersion = from.ReadString();
			ApiId = from.ReadInt32();
			AppName = from.ReadString();
			AppVersion = from.ReadString();
			DateCreated = from.ReadInt32();
			DateActive = from.ReadInt32();
			Ip = from.ReadString();
			Country = from.ReadString();
			Region = from.ReadString();
		}

		public override void Write(TLBinaryWriter to)
		{
			to.Write(0x7BF2E6F6);
			to.Write(Hash);
			to.Write(Flags);
			to.Write(DeviceModel);
			to.Write(Platform);
			to.Write(SystemVersion);
			to.Write(ApiId);
			to.Write(AppName);
			to.Write(AppVersion);
			to.Write(DateCreated);
			to.Write(DateActive);
			to.Write(Ip);
			to.Write(Country);
			to.Write(Region);
		}
	}
}