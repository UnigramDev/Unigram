// <auto-generated/>
using System;

namespace Telegram.Api.TL
{
	public partial class TLUpdateBotInlineQuery : TLUpdateBase 
	{
		[Flags]
		public enum Flag : int
		{
			Geo = (1 << 0),
		}

		public bool HasGeo { get { return Flags.HasFlag(Flag.Geo); } set { Flags = value ? (Flags | Flag.Geo) : (Flags & ~Flag.Geo); } }

		public Flag Flags { get; set; }
		public String Offset { get; set; }

		public TLUpdateBotInlineQuery() { }
		public TLUpdateBotInlineQuery(TLBinaryReader from, TLType type = TLType.UpdateBotInlineQuery)
		{
			Read(from, type);
		}

		public override TLType TypeId { get { return TLType.UpdateBotInlineQuery; } }

		public override void Read(TLBinaryReader from, TLType type = TLType.UpdateBotInlineQuery)
		{
			Flags = (Flag)from.ReadInt32();
			QueryId = from.ReadInt64();
			UserId = from.ReadInt32();
			Query = from.ReadString();
			if (HasGeo) { Geo = TLFactory.Read<TLGeoPointBase>(from); }
			Offset = from.ReadString();
		}

		public override void Write(TLBinaryWriter to)
		{
			to.Write(0x54826690);
			to.Write((Int32)Flags);
			to.Write(QueryId);
			to.Write(UserId);
			to.Write(Query);
			if (HasGeo) to.WriteObject(Geo);
			to.Write(Offset);
		}
	}
}