// <auto-generated/>
using System;

namespace Telegram.Api.TL
{
	public partial class TLMessagesChannelMessages : TLMessagesMessagesBase 
	{
		[Flags]
		public enum Flag : Int32
		{
			None = 0
		}

		public Flag Flags { get; set; }
		public Int32 Pts { get; set; }

		public TLMessagesChannelMessages() { }
		public TLMessagesChannelMessages(TLBinaryReader from, bool cache = false)
		{
			Read(from, cache);
		}

		public override TLType TypeId { get { return TLType.MessagesChannelMessages; } }

		public override void Read(TLBinaryReader from, bool cache = false)
		{
			Flags = (Flag)from.ReadInt32();
			Pts = from.ReadInt32();
			Count = from.ReadInt32();
			Messages = TLFactory.Read<TLVector<TLMessageBase>>(from, cache);
			Chats = TLFactory.Read<TLVector<TLChatBase>>(from, cache);
			Users = TLFactory.Read<TLVector<TLUserBase>>(from, cache);
			if (cache) ReadFromCache(from);
		}

		public override void Write(TLBinaryWriter to, bool cache = false)
		{
			to.Write(0x99262E37);
			to.Write((Int32)Flags);
			to.Write(Pts);
			to.Write(Count);
			to.WriteObject(Messages, cache);
			to.WriteObject(Chats, cache);
			to.WriteObject(Users, cache);
			if (cache) WriteToCache(to);
		}
	}
}