// <auto-generated/>
using System;

namespace Telegram.Api.TL.Methods.Messages
{
	/// <summary>
	/// RCP method messages.getHistory
	/// </summary>
	public partial class TLMessagesGetHistory : TLObject
	{
		public TLInputPeerBase Peer { get; set; }
		public Int32 OffsetId { get; set; }
		public Int32 OffsetDate { get; set; }
		public Int32 AddOffset { get; set; }
		public Int32 Limit { get; set; }
		public Int32 MaxId { get; set; }
		public Int32 MinId { get; set; }

		public TLMessagesGetHistory() { }
		public TLMessagesGetHistory(TLBinaryReader from, TLType type = TLType.MessagesGetHistory)
		{
			Read(from, type);
		}

		public override TLType TypeId { get { return TLType.MessagesGetHistory; } }

		public override void Read(TLBinaryReader from, TLType type = TLType.MessagesGetHistory)
		{
			Peer = TLFactory.Read<TLInputPeerBase>(from);
			OffsetId = from.ReadInt32();
			OffsetDate = from.ReadInt32();
			AddOffset = from.ReadInt32();
			Limit = from.ReadInt32();
			MaxId = from.ReadInt32();
			MinId = from.ReadInt32();
		}

		public override void Write(TLBinaryWriter to)
		{
			to.Write(0xAFA92846);
			to.WriteObject(Peer);
			to.Write(OffsetId);
			to.Write(OffsetDate);
			to.Write(AddOffset);
			to.Write(Limit);
			to.Write(MaxId);
			to.Write(MinId);
		}
	}
}