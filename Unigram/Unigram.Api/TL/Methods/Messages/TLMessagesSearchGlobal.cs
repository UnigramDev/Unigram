// <auto-generated/>
using System;

namespace Telegram.Api.TL.Methods.Messages
{
	/// <summary>
	/// RCP method messages.searchGlobal
	/// </summary>
	public partial class TLMessagesSearchGlobal : TLObject
	{
		public String Q { get; set; }
		public Int32 OffsetDate { get; set; }
		public TLInputPeerBase OffsetPeer { get; set; }
		public Int32 OffsetId { get; set; }
		public Int32 Limit { get; set; }

		public TLMessagesSearchGlobal() { }
		public TLMessagesSearchGlobal(TLBinaryReader from, bool cache = false)
		{
			Read(from, cache);
		}

		public override TLType TypeId { get { return TLType.MessagesSearchGlobal; } }

		public override void Read(TLBinaryReader from, bool cache = false)
		{
			Q = from.ReadString();
			OffsetDate = from.ReadInt32();
			OffsetPeer = TLFactory.Read<TLInputPeerBase>(from, cache);
			OffsetId = from.ReadInt32();
			Limit = from.ReadInt32();
			if (cache) ReadFromCache(from);
		}

		public override void Write(TLBinaryWriter to, bool cache = false)
		{
			to.Write(0x9E3CACB0);
			to.Write(Q);
			to.Write(OffsetDate);
			to.WriteObject(OffsetPeer, cache);
			to.Write(OffsetId);
			to.Write(Limit);
			if (cache) WriteToCache(to);
		}
	}
}