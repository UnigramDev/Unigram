// <auto-generated/>
using System;

namespace Telegram.Api.TL.Methods.Messages
{
	/// <summary>
	/// RCP method messages.search
	/// </summary>
	public partial class TLMessagesSearch : TLObject
	{
		public TLInputPeerBase Peer { get; set; }
		public String Q { get; set; }
		public TLMessagesFilterBase Filter { get; set; }
		public Int32 MinDate { get; set; }
		public Int32 MaxDate { get; set; }
		public Int32 Offset { get; set; }
		public Int32 MaxId { get; set; }
		public Int32 Limit { get; set; }

		public TLMessagesSearch() { }
		public TLMessagesSearch(TLBinaryReader from, TLType type = TLType.MessagesSearch)
		{
			Read(from, type);
		}

		public override TLType TypeId { get { return TLType.MessagesSearch; } }

		public override void Read(TLBinaryReader from, TLType type = TLType.MessagesSearch)
		{
			Peer = TLFactory.Read<TLInputPeerBase>(from);
			Q = from.ReadString();
			Filter = TLFactory.Read<TLMessagesFilterBase>(from);
			MinDate = from.ReadInt32();
			MaxDate = from.ReadInt32();
			Offset = from.ReadInt32();
			MaxId = from.ReadInt32();
			Limit = from.ReadInt32();
		}

		public override void Write(TLBinaryWriter to)
		{
			to.Write(0xD4569248);
			to.WriteObject(Peer);
			to.Write(Q);
			to.WriteObject(Filter);
			to.Write(MinDate);
			to.Write(MaxDate);
			to.Write(Offset);
			to.Write(MaxId);
			to.Write(Limit);
		}
	}
}