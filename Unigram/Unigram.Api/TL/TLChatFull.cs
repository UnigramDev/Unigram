// <auto-generated/>
using System;

namespace Telegram.Api.TL
{
	public partial class TLChatFull : TLChatFullBase 
	{
		public TLChatParticipantsBase Participants { get; set; }

		public TLChatFull() { }
		public TLChatFull(TLBinaryReader from, bool cache = false)
		{
			Read(from, cache);
		}

		public override TLType TypeId { get { return TLType.ChatFull; } }

		public override void Read(TLBinaryReader from, bool cache = false)
		{
			Id = from.ReadInt32();
			Participants = TLFactory.Read<TLChatParticipantsBase>(from, cache);
			ChatPhoto = TLFactory.Read<TLPhotoBase>(from, cache);
			NotifySettings = TLFactory.Read<TLPeerNotifySettingsBase>(from, cache);
			ExportedInvite = TLFactory.Read<TLExportedChatInviteBase>(from, cache);
			BotInfo = TLFactory.Read<TLVector<TLBotInfo>>(from, cache);
			if (cache) ReadFromCache(from);
		}

		public override void Write(TLBinaryWriter to, bool cache = false)
		{
			to.Write(0x2E02A614);
			to.Write(Id);
			to.WriteObject(Participants, cache);
			to.WriteObject(ChatPhoto, cache);
			to.WriteObject(NotifySettings, cache);
			to.WriteObject(ExportedInvite, cache);
			to.WriteObject(BotInfo, cache);
			if (cache) WriteToCache(to);
		}
	}
}