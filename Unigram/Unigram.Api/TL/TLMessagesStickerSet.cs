// <auto-generated/>
using System;

namespace Telegram.Api.TL
{
	public partial class TLMessagesStickerSet : TLObject 
	{
		public TLStickerSet Set { get; set; }
		public TLVector<TLStickerPack> Packs { get; set; }
		public TLVector<TLDocumentBase> Documents { get; set; }

		public TLMessagesStickerSet() { }
		public TLMessagesStickerSet(TLBinaryReader from, bool cache = false)
		{
			Read(from, cache);
		}

		public override TLType TypeId { get { return TLType.MessagesStickerSet; } }

		public override void Read(TLBinaryReader from, bool cache = false)
		{
			Set = TLFactory.Read<TLStickerSet>(from, cache);
			Packs = TLFactory.Read<TLVector<TLStickerPack>>(from, cache);
			Documents = TLFactory.Read<TLVector<TLDocumentBase>>(from, cache);
			if (cache) ReadFromCache(from);
		}

		public override void Write(TLBinaryWriter to, bool cache = false)
		{
			to.Write(0xB60A24A6);
			to.WriteObject(Set, cache);
			to.WriteObject(Packs, cache);
			to.WriteObject(Documents, cache);
			if (cache) WriteToCache(to);
		}
	}
}