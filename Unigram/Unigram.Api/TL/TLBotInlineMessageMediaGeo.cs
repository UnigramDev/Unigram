// <auto-generated/>
using System;

namespace Telegram.Api.TL
{
	public partial class TLBotInlineMessageMediaGeo : TLBotInlineMessageBase 
	{
		[Flags]
		public enum Flag : int
		{
			ReplyMarkup = (1 << 2),
		}

		public bool HasReplyMarkup { get { return Flags.HasFlag(Flag.ReplyMarkup); } set { Flags = value ? (Flags | Flag.ReplyMarkup) : (Flags & ~Flag.ReplyMarkup); } }

		public Flag Flags { get; set; }

		public TLBotInlineMessageMediaGeo() { }
		public TLBotInlineMessageMediaGeo(TLBinaryReader from, TLType type = TLType.BotInlineMessageMediaGeo)
		{
			Read(from, type);
		}

		public override TLType TypeId { get { return TLType.BotInlineMessageMediaGeo; } }

		public override void Read(TLBinaryReader from, TLType type = TLType.BotInlineMessageMediaGeo)
		{
			Flags = (Flag)from.ReadInt32();
			Geo = TLFactory.Read<TLGeoPointBase>(from);
			if (HasReplyMarkup) { ReplyMarkup = TLFactory.Read<TLReplyMarkupBase>(from); }
		}

		public override void Write(TLBinaryWriter to)
		{
			to.Write(0x3A8FD8B8);
			to.Write((Int32)Flags);
			to.WriteObject(Geo);
			if (HasReplyMarkup) to.WriteObject(ReplyMarkup);
		}
	}
}