// <auto-generated/>
using System;

namespace Telegram.Api.TL
{
	public partial class TLDocument : TLDocumentBase 
	{
		public Int64 AccessHash { get; set; }
		public Int32 Date { get; set; }
		public String MimeType { get; set; }
		public Int32 Size { get; set; }
		public TLPhotoSizeBase Thumb { get; set; }
		public Int32 DCId { get; set; }
		public TLVector<TLDocumentAttributeBase> Attributes { get; set; }

		public TLDocument() { }
		public TLDocument(TLBinaryReader from, TLType type = TLType.Document)
		{
			Read(from, type);
		}

		public override TLType TypeId { get { return TLType.Document; } }

		public override void Read(TLBinaryReader from, TLType type = TLType.Document)
		{
			Id = from.ReadInt64();
			AccessHash = from.ReadInt64();
			Date = from.ReadInt32();
			MimeType = from.ReadString();
			Size = from.ReadInt32();
			Thumb = TLFactory.Read<TLPhotoSizeBase>(from);
			DCId = from.ReadInt32();
			Attributes = TLFactory.Read<TLVector<TLDocumentAttributeBase>>(from);
		}

		public override void Write(TLBinaryWriter to)
		{
			to.Write(0xF9A39F4F);
			to.Write(Id);
			to.Write(AccessHash);
			to.Write(Date);
			to.Write(MimeType);
			to.Write(Size);
			to.WriteObject(Thumb);
			to.Write(DCId);
			to.WriteObject(Attributes);
		}
	}
}