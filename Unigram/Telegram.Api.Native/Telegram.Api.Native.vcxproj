<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|ARM">
      <Configuration>Debug</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|ARM">
      <Configuration>Release</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{6a7d27d0-36e8-4364-ac69-740b75ee653c}</ProjectGuid>
    <Keyword>DynamicLibrary</Keyword>
    <RootNamespace>Telegram.Api.Native</RootNamespace>
    <DefaultLanguage>it-IT</DefaultLanguage>
    <MinimumVisualStudioVersion>14.0</MinimumVisualStudioVersion>
    <AppContainerApplication>true</AppContainerApplication>
    <ApplicationType>Windows Store</ApplicationType>
    <WindowsTargetPlatformVersion>10.0.16299.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion>10.0.14393.0</WindowsTargetPlatformMinVersion>
    <ApplicationTypeRevision>10.0</ApplicationTypeRevision>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
    <Import Project="..\Unigram.Native.Shared\Unigram.Native.Shared.vcxitems" Label="Shared" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <GenerateManifest>false</GenerateManifest>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <GenerateManifest>false</GenerateManifest>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <GenerateManifest>false</GenerateManifest>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <GenerateManifest>false</GenerateManifest>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <GenerateManifest>false</GenerateManifest>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <GenerateManifest>false</GenerateManifest>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
      <DisableSpecificWarnings>4250</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <WindowsMetadataFile>$(OutDir)$(RootNamespace).winmd</WindowsMetadataFile>
      <ModuleDefinitionFile>Telegram.Api.Native.def</ModuleDefinitionFile>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
      <IgnoreSpecificDefaultLibraries>vccorlibd; msvcrtd vccorlibd.lib msvcrtd.lib</IgnoreSpecificDefaultLibraries>
      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>
      <AdditionalOptions>/nodefaultlib:vccorlibd /nodefaultlib:msvcrtd vccorlibd.lib msvcrtd.lib %(AdditionalOptions)</AdditionalOptions>
    </Link>
    <PostBuildEvent />
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)Metadata\"
move /Y "$(OutDir)*.winmd" "$(OutDir)Metadata\"
mdmerge /metadata_dir "$(WindowsSDK_MetadataPath)\..\UnionMetadata" /i "$(OutDir)Metadata" /o "$(OutDir)." /n 3 /partial /v
rmdir "$(OutDir)Metadata" /s /q</Command>
    </PostBuildEvent>
    <Midl>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <MetadataFileName>$(OutDir)%(Filename)_Part.winmd</MetadataFileName>
      <PrependWithABINamepsace>true</PrependWithABINamepsace>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
      <DisableSpecificWarnings>4250</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <WindowsMetadataFile>$(OutDir)$(RootNamespace).winmd</WindowsMetadataFile>
      <ModuleDefinitionFile>Telegram.Api.Native.def</ModuleDefinitionFile>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
      <IgnoreSpecificDefaultLibraries>vccorlib; msvcrt vccorlib.lib msvcrt.lib</IgnoreSpecificDefaultLibraries>
      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>
      <AdditionalOptions>/nodefaultlib:vccorlib /nodefaultlib:msvcrt vccorlib.lib msvcrt.lib %(AdditionalOptions)</AdditionalOptions>
    </Link>
    <PostBuildEvent />
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)Metadata\"
move /Y "$(OutDir)*.winmd" "$(OutDir)Metadata\"
mdmerge /metadata_dir "$(WindowsSDK_MetadataPath)\..\UnionMetadata" /i "$(OutDir)Metadata" /o "$(OutDir)." /n 3 /partial /v
rmdir "$(OutDir)Metadata" /s /q</Command>
    </PostBuildEvent>
    <Midl>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <MetadataFileName>$(OutDir)%(Filename)_Part.winmd</MetadataFileName>
      <PrependWithABINamepsace>true</PrependWithABINamepsace>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|arm'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
      <DisableSpecificWarnings>4250</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <WindowsMetadataFile>$(OutDir)$(RootNamespace).winmd</WindowsMetadataFile>
      <ModuleDefinitionFile>Telegram.Api.Native.def</ModuleDefinitionFile>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
      <IgnoreSpecificDefaultLibraries>vccorlibd; msvcrtd vccorlibd.lib msvcrtd.lib</IgnoreSpecificDefaultLibraries>
      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>
      <AdditionalOptions>/nodefaultlib:vccorlibd /nodefaultlib:msvcrtd vccorlibd.lib msvcrtd.lib %(AdditionalOptions)</AdditionalOptions>
    </Link>
    <PostBuildEvent />
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)Metadata\"
move /Y "$(OutDir)*.winmd" "$(OutDir)Metadata\"
mdmerge /metadata_dir "$(WindowsSDK_MetadataPath)\..\UnionMetadata" /i "$(OutDir)Metadata" /o "$(OutDir)." /n 3 /partial /v
rmdir "$(OutDir)Metadata" /s /q</Command>
    </PostBuildEvent>
    <Midl>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <MetadataFileName>$(OutDir)%(Filename)_Part.winmd</MetadataFileName>
      <PrependWithABINamepsace>true</PrependWithABINamepsace>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|arm'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
      <DisableSpecificWarnings>4250</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <WindowsMetadataFile>$(OutDir)$(RootNamespace).winmd</WindowsMetadataFile>
      <ModuleDefinitionFile>Telegram.Api.Native.def</ModuleDefinitionFile>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
      <IgnoreSpecificDefaultLibraries>vccorlib; msvcrt vccorlib.lib msvcrt.lib</IgnoreSpecificDefaultLibraries>
      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>
      <AdditionalOptions>/nodefaultlib:vccorlib /nodefaultlib:msvcrt vccorlib.lib msvcrt.lib %(AdditionalOptions)</AdditionalOptions>
    </Link>
    <PostBuildEvent />
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)Metadata\"
move /Y "$(OutDir)*.winmd" "$(OutDir)Metadata\"
mdmerge /metadata_dir "$(WindowsSDK_MetadataPath)\..\UnionMetadata" /i "$(OutDir)Metadata" /o "$(OutDir)." /n 3 /partial /v
rmdir "$(OutDir)Metadata" /s /q</Command>
    </PostBuildEvent>
    <Midl>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <MetadataFileName>$(OutDir)%(Filename)_Part.winmd</MetadataFileName>
      <PrependWithABINamepsace>true</PrependWithABINamepsace>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
      <DisableSpecificWarnings>4250</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <WindowsMetadataFile>$(OutDir)$(RootNamespace).winmd</WindowsMetadataFile>
      <ModuleDefinitionFile>Telegram.Api.Native.def</ModuleDefinitionFile>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
      <IgnoreSpecificDefaultLibraries>vccorlibd; msvcrtd vccorlibd.lib msvcrtd.lib</IgnoreSpecificDefaultLibraries>
      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>
      <AdditionalOptions>/nodefaultlib:vccorlibd /nodefaultlib:msvcrtd vccorlibd.lib msvcrtd.lib %(AdditionalOptions)</AdditionalOptions>
    </Link>
    <PostBuildEvent />
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)Metadata\"
move /Y "$(OutDir)*.winmd" "$(OutDir)Metadata\"
mdmerge /metadata_dir "$(WindowsSDK_MetadataPath)\..\UnionMetadata" /i "$(OutDir)Metadata" /o "$(OutDir)." /n 3 /partial /v
rmdir "$(OutDir)Metadata" /s /q</Command>
    </PostBuildEvent>
    <Midl>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <MetadataFileName>$(OutDir)%(Filename)_Part.winmd</MetadataFileName>
      <PrependWithABINamepsace>true</PrependWithABINamepsace>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
      <DisableSpecificWarnings>4250</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <WindowsMetadataFile>$(OutDir)$(RootNamespace).winmd</WindowsMetadataFile>
      <ModuleDefinitionFile>Telegram.Api.Native.def</ModuleDefinitionFile>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>
      <IgnoreSpecificDefaultLibraries>vccorlib; msvcrt vccorlib.lib msvcrt.lib</IgnoreSpecificDefaultLibraries>
      <AdditionalOptions>/nodefaultlib:vccorlib /nodefaultlib:msvcrt vccorlib.lib msvcrt.lib %(AdditionalOptions)</AdditionalOptions>
    </Link>
    <PostBuildEvent />
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)Metadata\"
move /Y "$(OutDir)*.winmd" "$(OutDir)Metadata\"
mdmerge /metadata_dir "$(WindowsSDK_MetadataPath)\..\UnionMetadata" /i "$(OutDir)Metadata" /o "$(OutDir)." /n 3 /partial /v
rmdir "$(OutDir)Metadata" /s /q</Command>
    </PostBuildEvent>
    <Midl>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <MetadataFileName>$(OutDir)%(Filename)_Part.winmd</MetadataFileName>
      <PrependWithABINamepsace>true</PrependWithABINamepsace>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="Collections.h" />
    <ClInclude Include="Connection.h" />
    <ClInclude Include="ConnectionCryptography.h" />
    <ClInclude Include="ConnectionManager.h" />
    <ClInclude Include="ConnectionSession.h" />
    <ClInclude Include="Datacenter.h" />
    <ClInclude Include="DatacenterCryptography.h" />
    <ClInclude Include="DatacenterServer.h" />
    <ClInclude Include="LoggingProvider.h" />
    <ClInclude Include="MessageError.h" />
    <ClInclude Include="UserConfiguration.h" />
    <ClInclude Include="ProxySettings.h" />
    <ClInclude Include="ThreadpoolObject.h" />
    <ClInclude Include="GZip.h" />
    <ClInclude Include="NativeBuffer.h" />
    <ClInclude Include="Reference.h" />
    <ClInclude Include="ThreadpoolManager.h" />
    <ClInclude Include="TLMethods.h" />
    <ClInclude Include="Wrappers\OpenSSL.h" />
    <ClInclude Include="TLObject.h" />
    <ClInclude Include="MultiThreadObject.h" />
    <ClInclude Include="NetworkExtensions.h" />
    <ClInclude Include="MessageRequest.h" />
    <ClInclude Include="TLObjectSerializer.h" />
    <ClInclude Include="TLTypes.h" />
    <ClInclude Include="MessageResponse.h" />
    <ClInclude Include="Wrappers\WSAEvent.h" />
    <ClInclude Include="pch.h" />
    <ClInclude Include="ConnectionSocket.h" />
    <ClInclude Include="TLBinaryReader.h" />
    <ClInclude Include="TLBinaryWriter.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="Connection.cpp" />
    <ClCompile Include="ConnectionCryptography.cpp" />
    <ClCompile Include="ConnectionManager.cpp" />
    <ClCompile Include="ConnectionSession.cpp" />
    <ClCompile Include="Datacenter.cpp" />
    <ClCompile Include="DatacenterCryptography.cpp" />
    <ClCompile Include="UserConfiguration.cpp" />
    <ClCompile Include="MessageError.cpp" />
    <ClCompile Include="NetworkExtensions.cpp" />
    <ClCompile Include="pch.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="ConnectionSocket.cpp" />
    <ClCompile Include="MessageRequest.cpp" />
    <ClCompile Include="ProxySettings.cpp" />
    <ClCompile Include="ThreadpoolManager.cpp" />
    <ClCompile Include="TLBinaryReader.cpp" />
    <ClCompile Include="TLBinaryWriter.cpp" />
    <ClCompile Include="TLObject.cpp" />
    <ClCompile Include="TLObjectSerializer.cpp" />
    <ClCompile Include="TLTypes.cpp" />
    <ClCompile Include="TLMethods.cpp" />
    <ClCompile Include="MessageResponse.cpp" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
    <None Include="Telegram.Api.Native.def" />
  </ItemGroup>
  <ItemGroup>
    <Midl Include="Telegram.Api.Native.idl" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="..\packages\OpenSSL.Static.Uwp.1.0.2.1\build\native\OpenSSL.Static.Uwp.targets" Condition="Exists('..\packages\OpenSSL.Static.Uwp.1.0.2.1\build\native\OpenSSL.Static.Uwp.targets')" />
    <Import Project="..\packages\zlib.Static.Uwp.1.2.3.1\build\native\zlib.Static.Uwp.targets" Condition="Exists('..\packages\zlib.Static.Uwp.1.2.3.1\build\native\zlib.Static.Uwp.targets')" />
  </ImportGroup>
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>Questo progetto fa riferimento a uno o più pacchetti NuGet che non sono presenti in questo computer. Usare lo strumento di ripristino dei pacchetti NuGet per scaricarli. Per altre informazioni, vedere http://go.microsoft.com/fwlink/?LinkID=322105. Il file mancante è {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\OpenSSL.Static.Uwp.1.0.2.1\build\native\OpenSSL.Static.Uwp.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\OpenSSL.Static.Uwp.1.0.2.1\build\native\OpenSSL.Static.Uwp.targets'))" />
    <Error Condition="!Exists('..\packages\zlib.Static.Uwp.1.2.3.1\build\native\zlib.Static.Uwp.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\zlib.Static.Uwp.1.2.3.1\build\native\zlib.Static.Uwp.targets'))" />
  </Target>
  <Target Name="CopyWinmdArtifactsOutputGroup" Returns="@(CopyWinmdArtifactsOutputGroupOutputs)">
    <ItemGroup>
      <CopyWinmdArtifactsOutputGroupOutputs Include="@(_MdMergeOutput)">
        <TargetPath>$(ProjectName).winmd</TargetPath>
        <Implementation>$(TargetName)$(TargetExt)</Implementation>
      </CopyWinmdArtifactsOutputGroupOutputs>
    </ItemGroup>
  </Target>
</Project>