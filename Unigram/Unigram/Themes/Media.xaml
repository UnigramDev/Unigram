<ResourceDictionary
    x:Class="Unigram.Themes.Media"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Unigram.Controls.Media"
    xmlns:controls="using:Unigram.Controls"
    xmlns:common="using:Unigram.Common"
    xmlns:converters="using:Unigram.Converters"
    xmlns:selectors="using:Unigram.Selectors"
    xmlns:tl="using:Telegram.Api.TL"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:messages="using:Unigram.Controls.Messages"
    mc:Ignorable="d">

    <converters:VenueToStaticImageConverter x:Key="VenueToStaticImageConverter"/>

    <DataTemplate x:Key="MediaMusicTemplate">
        <Grid MinWidth="220">
            <local:MusicMediaView/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="MediaDocumentTemplate">
        <Grid MinWidth="220">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid Width="48" Height="48" CornerRadius="24" Background="{ThemeResource MessageMediaBackgroundBrush}" VerticalAlignment="Top">
                <controls:TransferButton Completed="Download_Click" Transferable="{Binding Media.Document}" IsTransferring="{Binding Media.Document.IsTransferring}" Foreground="{ThemeResource MessageMediaForegroundBrush}" CornerRadius="24"/>
                <controls:ProgressBarRing Background="Transparent" Foreground="{ThemeResource MessageMediaForegroundBrush}" Value="{Binding Media.Document.Progress}" IsHitTestVisible="False"/>
            </Grid>
            <StackPanel Margin="8,0,0,2" VerticalAlignment="Center" Grid.Column="1">
                <TextBlock Text="{Binding Media.Document.FileName}" Foreground="{ThemeResource MessageForegroundBrush}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Style="{ThemeResource BaseTextBlockStyle}"/>
                <TextBlock Text="{Binding Media.Document.Size, Converter={StaticResource FileSizeConverter}}" Foreground="{ThemeResource MessageForegroundBrush}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Style="{ThemeResource CaptionTextBlockStyle}"/>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="MediaDocumentThumbTemplate">
        <Grid MinWidth="220">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid Width="72" Height="72" Background="Black" VerticalAlignment="Top">
                <Image Source="{Binding Media.Document, Converter={StaticResource DefaultPhotoConverter}}" Width="72" Height="72" Stretch="UniformToFill"/>

                <controls:TransferButton Completed="Download_Click"
                                         Transferable="{Binding Media.Document}"
                                         IsTransferring="{Binding Media.Document.IsTransferring}"
                                         Progress="{Binding Media.Document.Progress}"
                                         Style="{StaticResource MediaTransferButtonStyle}"/>
            </Grid>
            <StackPanel Margin="8,0,0,2" VerticalAlignment="Center" Grid.Column="1">
                <TextBlock Text="{Binding Media.Document.FileName}" Foreground="{ThemeResource MessageForegroundBrush}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Style="{ThemeResource BaseTextBlockStyle}"/>
                <TextBlock Text="{Binding Media.Document.Size, Converter={StaticResource FileSizeConverter}}" Foreground="{ThemeResource MessageForegroundBrush}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Style="{ThemeResource CaptionTextBlockStyle}"/>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="MediaPhotoTemplate">
        <Grid x:Name="Media"
              Background="Black"
              MinWidth="{ThemeResource TelegramMediaMinWidth}"
              MinHeight="{ThemeResource TelegramMediaMinHeight}">
            <controls:ImageView Source="{Binding Media.Photo, Converter={StaticResource DefaultPhotoConverter}, ConverterParameter=thumbnail}"
                                Constraint="{Binding Media}"
                                MaxWidth="{ThemeResource TelegramMediaMaxWidth}"
                                MaxHeight="{ThemeResource TelegramMediaMaxHeight}"
                                Click="Photo_Click"/>

            <controls:TransferButton Completed="Download_Click"
                                     Transferable="{Binding Media.Photo}"
                                     IsTransferring="{Binding Media.Photo.IsTransferring}"
                                     Progress="{Binding Media.Photo.Progress}"
                                     Style="{StaticResource MediaTransferButtonStyle}"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="MediaSecretPhotoTemplate" x:DataType="tl:TLMessage">
        <Grid x:Name="Media"
              Background="Black"
              MinWidth="{ThemeResource TelegramMediaMinWidth}"
              MinHeight="{ThemeResource TelegramMediaMinHeight}">
            <!-- ImageView is used to calculate the right size for the image -->
            <controls:ImageView Constraint="{Binding Media}"
                                MaxWidth="{ThemeResource TelegramMediaMaxWidth}"
                                MaxHeight="{ThemeResource TelegramMediaMaxHeight}"
                                Stretch="UniformToFill">
                <controls:ImageView.Template>
                    <ControlTemplate TargetType="controls:ImageView"/>
                </controls:ImageView.Template>
            </controls:ImageView>

            <Grid x:Name="InnerMedia">
                <Rectangle>
                    <Rectangle.Fill>
                        <ImageBrush ImageSource="{Binding Media.Photo, Converter={StaticResource DefaultPhotoConverter}, ConverterParameter=thumbnail}" Stretch="UniformToFill" AlignmentX="Center" AlignmentY="Center"/>
                    </Rectangle.Fill>
                </Rectangle>

                <controls:BackDrop BlurAmount="24"/>
            </Grid>

            <controls:TransferButton Completed="SecretDownload_Click"
                                     Transferable="{Binding Media.Photo}"
                                     IsTransferring="{Binding Media.Photo.IsTransferring}"
                                     Progress="{Binding Media.Photo.Progress}"
                                     Style="{StaticResource MediaTransferButtonStyle}"/>
            <controls:SelfDestructTimer Background="Transparent" Foreground="White" Value="{x:Bind Media.(tl:ITLMessageMediaDestruct.DestructDate), Mode=OneWay}" Maximum="{x:Bind Media.(tl:ITLMessageMediaDestruct.TTLSeconds)}" IsHitTestVisible="False"/>

            <Border Background="{ThemeResource MessageOverlayBackgroundBrush}" CornerRadius="{ThemeResource MessageOverlayCornerRadius}" IsHitTestVisible="False" VerticalAlignment="Top" HorizontalAlignment="Left" Padding="8,4,8,4" Margin="4">
                <TextBlock Text="{Binding Media.DestructIn, Converter={StaticResource MessageShortTTLConverter}}" Style="{ThemeResource CaptionTextBlockStyle}" Foreground="White" TextAlignment="Right"/>
            </Border>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="MediaSecretVideoTemplate" x:DataType="tl:TLMessage">
        <Grid x:Name="Media"
              Background="Black"
              MinWidth="{ThemeResource TelegramMediaMinWidth}"
              MinHeight="{ThemeResource TelegramMediaMinHeight}">
            <!-- ImageView is used to calculate the right size for the image -->
            <controls:ImageView Constraint="{Binding Media}"
                                MaxWidth="{ThemeResource TelegramMediaMaxWidth}"
                                MaxHeight="{ThemeResource TelegramMediaMaxHeight}"
                                Stretch="UniformToFill">
                <controls:ImageView.Template>
                    <ControlTemplate TargetType="controls:ImageView"/>
                </controls:ImageView.Template>
            </controls:ImageView>

            <Grid x:Name="InnerMedia">
                <Rectangle>
                    <Rectangle.Fill>
                        <ImageBrush ImageSource="{Binding Media.Document, Converter={StaticResource DefaultPhotoConverter}, ConverterParameter=thumbnail}" Stretch="UniformToFill" AlignmentX="Center" AlignmentY="Center"/>
                    </Rectangle.Fill>
                </Rectangle>

                <controls:BackDrop BlurAmount="24"/>
            </Grid>

            <controls:TransferButton Completed="SecretDownload_Click"
                                     Transferable="{Binding Media.Document}"
                                     IsTransferring="{Binding Media.Document.IsTransferring}"
                                     Progress="{Binding Media.Document.Progress}"
                                     Style="{StaticResource MediaTransferButtonStyle}"/>
            <controls:SelfDestructTimer Background="Transparent" Foreground="White" Value="{x:Bind Media.(tl:ITLMessageMediaDestruct.DestructDate), Mode=OneWay}" Maximum="{x:Bind Media.(tl:ITLMessageMediaDestruct.TTLSeconds)}" IsHitTestVisible="False"/>

            <Border Background="{ThemeResource MessageOverlayBackgroundBrush}" CornerRadius="{ThemeResource MessageOverlayCornerRadius}" IsHitTestVisible="False" VerticalAlignment="Top" HorizontalAlignment="Left" Padding="8,4,8,4" Margin="4">
                <TextBlock Text="{Binding Media.DestructIn, Converter={StaticResource MessageShortTTLConverter}}" Style="{ThemeResource CaptionTextBlockStyle}" Foreground="White" TextAlignment="Right"/>
            </Border>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="MediaVideoTemplate">
        <Grid x:Name="Media"
              Background="Black"
              MinWidth="{ThemeResource TelegramMediaMinWidth}"
              MinHeight="{ThemeResource TelegramMediaMinHeight}">
            <controls:ImageView Source="{Binding Media.Document, Converter={StaticResource DefaultPhotoConverter}}"
                                Constraint="{Binding Media.Document}"
                                MaxWidth="{ThemeResource TelegramMediaMaxWidth}"
                                MaxHeight="{ThemeResource TelegramMediaMaxHeight}"/>

            <controls:TransferButton Completed="Download_Click"
                                     Transferable="{Binding Media.Document}"
                                     IsTransferring="{Binding Media.Document.IsTransferring}"
                                     Progress="{Binding Media.Document.Progress}"
                                     Style="{StaticResource MediaTransferButtonStyle}">
                <Border Background="{ThemeResource MessageOverlayBackgroundBrush}" CornerRadius="{ThemeResource MessageOverlayCornerRadius}" IsHitTestVisible="False" Padding="8,4,8,4" Margin="4">
                    <TextBlock Text="{Binding Media.Document.Info}" Style="{ThemeResource CaptionTextBlockStyle}" Foreground="White" TextAlignment="Right"/>
                </Border>
            </controls:TransferButton>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="MediaGifTemplate">
        <Grid x:Name="Media"
              Background="Black"
              MinWidth="{ThemeResource TelegramMediaMinWidth}"
              MinHeight="{ThemeResource TelegramMediaMinHeight}">
            <controls:ImageView Source="{Binding Media.Document, Converter={StaticResource DefaultPhotoConverter}}"
                                Constraint="{Binding Media.Document}"
                                MaxWidth="{ThemeResource TelegramMediaMaxWidth}"
                                MaxHeight="{ThemeResource TelegramMediaMaxHeight}"/>

            <controls:TransferButton Completed="Download_Click"
                                     Transferable="{Binding Media.Document}"
                                     IsTransferring="{Binding Media.Document.IsTransferring}"
                                     Progress="{Binding Media.Document.Progress}"
                                     Style="{StaticResource MediaTransferButtonStyle}">
                <Border Background="{ThemeResource MessageOverlayBackgroundBrush}" CornerRadius="{ThemeResource MessageOverlayCornerRadius}" IsHitTestVisible="False" Padding="8,4,8,4" Margin="4">
                    <TextBlock Text="{Binding Media.Document.Info}" Style="{ThemeResource CaptionTextBlockStyle}" Foreground="White"/>
                </Border>
            </controls:TransferButton>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="MediaRoundVideoTemplate">
        <Grid x:Name="Media">
            <Ellipse Fill="Black"/>
            <controls:ImageView Source="{Binding Media.Document, Converter={StaticResource DefaultPhotoConverter}}"
                                Constraint="{Binding Media.Document}"
                                MaxWidth="{ThemeResource TelegramLightMediaMaxWidth}"
                                MaxHeight="{ThemeResource TelegramLightMediaMaxHeight}"
                                Style="{StaticResource RoundImageViewStyle}"/>

            <controls:TransferButton Completed="Download_Click"
                                     Transferable="{Binding Media.Document}"
                                     IsTransferring="{Binding Media.Document.IsTransferring}"
                                     Progress="{Binding Media.Document.Progress}"
                                     Style="{StaticResource MediaTransferButtonStyle}"/>

            <!--<Border Background="{ThemeResource MessageOverlayBackgroundBrush}" CornerRadius="{ThemeResource MessageOverlayCornerRadius}" IsHitTestVisible="False" VerticalAlignment="Bottom" HorizontalAlignment="Left" Padding="8,2,8,4" Margin="4">
                <TextBlock Text="{Binding Media.Document.Info}" Style="{ThemeResource CaptionTextBlockStyle}" Foreground="White" TextAlignment="Right" Margin="0,2,0,0"/>
            </Border>-->
            <StackPanel Background="{ThemeResource MessageServiceBackgroundBrush}" CornerRadius="{ThemeResource MessageOverlayCornerRadius}" IsHitTestVisible="False" VerticalAlignment="Bottom" HorizontalAlignment="Left" Padding="8,2,8,4" Margin="4" Orientation="Horizontal">
                <TextBlock Text="{Binding Media.Document.Duration}" Style="{ThemeResource CaptionTextBlockStyle}" Foreground="White" TextAlignment="Right" Margin="0,2,0,0"/>
                <Ellipse Visibility="{Binding IsMediaUnread, Converter={StaticResource BooleanToVisibilityConverter}}" Width="6" Height="6" Fill="White" Margin="6,2,0,0"/>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="MediaStickerTemplate">
        <controls:ImageView Source="{Binding Media.Document, Converter={StaticResource DefaultPhotoConverter}}"
                            Constraint="{Binding Media.Document}"
                            MaxWidth="{ThemeResource TelegramLightMediaMaxWidth}"
                            MaxHeight="{ThemeResource TelegramLightMediaMaxHeight}"
                            Click="Sticker_Click"/>
    </DataTemplate>

    <DataTemplate x:Key="MediaContactTemplate">
        <Grid MinWidth="220">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <controls:ProfilePictureView Click="Contact_Click" Source="{Binding Media.User, Converter={StaticResource DefaultPhotoConverter}}" Width="48" Height="48" Margin="0,0,12,0" Grid.RowSpan="2"/>

            <TextBlock Text="{Binding Media.FullName}" Style="{StaticResource BaseTextBlockStyle}" VerticalAlignment="Bottom" Grid.Column="1"/>
            <TextBlock Text="{Binding Media.PhoneNumber, Converter={StaticResource PhoneNumberFormatConverter}}" Style="{StaticResource CaptionTextBlockStyle}" Foreground="{ThemeResource SystemControlDisabledChromeDisabledLowBrush}" VerticalAlignment="Top" Grid.Row="1" Grid.Column="1"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="MediaAudioTemplate">
        <Grid>
            <local:VoiceMediaView/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="MediaGeoTemplate">
        <Grid Background="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}">
            <controls:ImageView
                Source="{Binding Media.Geo, Converter={StaticResource VenueToStaticImageConverter}}"
                Constraint="{Binding Media}"
                Click="Geo_Click"
                MaxWidth="320"
                MaxHeight="240"/>
            <Canvas Width="40" Height="47.691" Margin="0,-48,0,0" VerticalAlignment="Center" IsHitTestVisible="False">
                <Path Width="40" Height="47.691" Data="F1M20,47.691C20,47.691 0,33.847 0,20 0,8.955 8.955,0 20,0 31.044,0 40,8.955 40,20 40,33.847 20,47.691 20,47.691" Fill="{ThemeResource MessageHeaderForegroundBrush}" StrokeThickness="0" />
                <!--<Path Width="40" Height="47.691" Data="F1M20,0C8.955,0 0,8.955 0,20 0,33.848 20,47.691 20,47.691 20,47.691 40,33.848 40,20 40,8.955 31.044,0 20,0 M20,2C29.925,2 38,10.075 38,20 38,30.812 24.119,42.101 19.999,45.212 15.878,42.104 2,30.829 2,20 2,10.075 10.075,2 20,2" Fill="White" Stroke="White" StrokeThickness="1" />-->
                <Path Canvas.Left="13" Canvas.Top="13" Width="14" Height="14" Data="F1M7,0C3.135,0 0,3.136 0,7 0,10.865 3.135,14 7,14 10.865,14 14,10.865 14,7 14,3.136 10.865,0 7,0" Fill="White" StrokeThickness="0" />
            </Canvas>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="MediaVenueTemplate">
        <Grid Background="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}">
            <controls:ImageView
                Source="{Binding Media.Geo, Converter={StaticResource VenueToStaticImageConverter}}"
                Constraint="{Binding Media}"
                Click="Geo_Click"
                MaxWidth="320"
                MaxHeight="240"/>
            <Canvas Width="40" Height="47.691" Margin="0,-48,0,0" VerticalAlignment="Center" IsHitTestVisible="False">
                <Path Width="40" Height="47.691" Data="F1M20,47.691C20,47.691 0,33.847 0,20 0,8.955 8.955,0 20,0 31.044,0 40,8.955 40,20 40,33.847 20,47.691 20,47.691" Fill="{ThemeResource MessageHeaderForegroundBrush}" StrokeThickness="0" />
                <Border VerticalAlignment="Top" Height="40" Width="40">
                    <BitmapIcon UriSource="{Binding Media.VenueType, Converter={StaticResource VenueToGlyphConverter}}" Foreground="White" Margin="4"/>
                </Border>
                <!--<Path Width="40" Height="47.691" Data="F1M20,0C8.955,0 0,8.955 0,20 0,33.848 20,47.691 20,47.691 20,47.691 40,33.848 40,20 40,8.955 31.044,0 20,0 M20,2C29.925,2 38,10.075 38,20 38,30.812 24.119,42.101 19.999,45.212 15.878,42.104 2,30.829 2,20 2,10.075 10.075,2 20,2" Fill="White" Stroke="White" StrokeThickness="1" />-->
                <Path Visibility="{Binding Media.VenueType, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=invert}" Canvas.Left="13" Canvas.Top="13" Width="14" Height="14" Data="F1M7,0C3.135,0 0,3.136 0,7 0,10.865 3.135,14 7,14 10.865,14 14,10.865 14,7 14,3.136 10.865,0 7,0" Fill="White" StrokeThickness="0" />
            </Canvas>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="MediaGeoLiveTemplate">
        <StackPanel>
            <Grid Background="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}">
                <controls:ImageView
                    Source="{Binding Media.Geo, Converter={StaticResource VenueToStaticImageConverter}}"
                    Constraint="{Binding Media}"
                    Click="Geo_Click"
                    MaxWidth="320"
                    MaxHeight="240"/>
                <Canvas Width="40" Height="47.691" Margin="0,-48,0,0" VerticalAlignment="Center" IsHitTestVisible="False">
                    <Path Width="40" Height="47.691" Data="F1M20,47.691C20,47.691 0,33.847 0,20 0,8.955 8.955,0 20,0 31.044,0 40,8.955 40,20 40,33.847 20,47.691 20,47.691" Fill="{ThemeResource MessageHeaderForegroundBrush}" StrokeThickness="0" />
                    <Border Height="40" Width="40">
                        <controls:ProfilePictureView Source="{Binding Participant.PhotoSelf, Mode=OneWay, Converter={StaticResource DefaultPhotoConverter}}" Width="32" Height="32" IsHitTestVisible="False" Margin="4,3,4,4" VerticalAlignment="Top"/>
                    </Border>
                    <!--<Path Width="40" Height="47.691" Data="F1M20,0C8.955,0 0,8.955 0,20 0,33.848 20,47.691 20,47.691 20,47.691 40,33.848 40,20 40,8.955 31.044,0 20,0 M20,2C29.925,2 38,10.075 38,20 38,30.812 24.119,42.101 19.999,45.212 15.878,42.104 2,30.829 2,20 2,10.075 10.075,2 20,2" Fill="White" Stroke="White" StrokeThickness="1" />-->
                </Canvas>
            </Grid>
            <Grid Padding="{ThemeResource MessageContentPadding}">
                <!-- Visibility="{Binding Self, Converter={StaticResource GeoLiveToVisibilityConverter}}" -->
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Style="{StaticResource BodyTextBlockStyle}">
                    <Run Text="{Binding Self, Converter={StaticResource GeoLiveToLabelConverter}, ConverterParameter=title}" FontWeight="SemiBold"/>
                    <LineBreak/>
                    <Run Text="{Binding Self, Converter={StaticResource GeoLiveToLabelConverter}}"/>
                </TextBlock>
                <Grid Width="36" Height="36" Margin="0,2,0,-2" Grid.Column="1">
                    <Ellipse Stroke="{ThemeResource MessageHeaderBorderBrush}" Opacity="0.2" StrokeThickness="2"/>
                    <controls:PeriodTimer Background="Transparent" Value="{Binding}" Period="{Binding Media.Period}" IsHitTestVisible="False"/>
                </Grid>
            </Grid>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="MediaWebPageTemplate">
        <StackPanel Margin="0,8,0,6">
            <Border BorderBrush="{ThemeResource MessageHeaderBorderBrush}" BorderThickness="2,0,0,0" Padding="8,0,0,0">
                <RichTextBlock common:TextBlockHelper.WebPage="{Binding Media.WebPage}" Margin="0,0,0,2" Style="{StaticResource CaptionRichTextBlockStyle}">
                    <RichTextBlock.Resources>
                        <StaticResource x:Key="MessageHeaderForegroundBrush" ResourceKey="MessageHeaderForegroundBrush2"/>
                    </RichTextBlock.Resources>
                </RichTextBlock>
            </Border>

            <controls:WebPageButton Click="InstantView_Click" WebPage="{Binding Media.WebPage}" Style="{StaticResource InstantViewButtonStyle}"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="MediaWebPageSmallPhotoTemplate" x:DataType="tl:TLMessage">
        <StackPanel Margin="0,8,0,6">
            <Grid BorderBrush="{ThemeResource MessageHeaderBorderBrush}" BorderThickness="2,0,0,0" Padding="8,0,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="48"/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="48"/>
                </Grid.ColumnDefinitions>

                <RichTextBlock common:TextBlockHelper.WebPage="{Binding Media.WebPage}" OverflowContentTarget="{Binding ElementName=OverflowArea}" MaxLines="3" TextTrimming="CharacterEllipsis" Margin="0,0,8,0" Style="{StaticResource CaptionRichTextBlockStyle}">
                    <RichTextBlock.Resources>
                        <StaticResource x:Key="MessageHeaderForegroundBrush" ResourceKey="MessageHeaderForegroundBrush2"/>
                    </RichTextBlock.Resources>
                </RichTextBlock>

                <Border Width="48" Height="48" Background="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}" Grid.Column="1">
                    <Image Source="{Binding Media, Converter={StaticResource DefaultPhotoConverter}}" Stretch="UniformToFill" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Border>

                <RichTextBlockOverflow x:Name="OverflowArea" MaxLines="3" Grid.ColumnSpan="2" Grid.Row="1"/>
            </Grid>

            <controls:WebPageButton Click="InstantView_Click" WebPage="{Binding Media.WebPage}" Style="{StaticResource InstantViewButtonStyle}"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="MediaWebPagePhotoTemplate">
        <StackPanel Margin="0,8,0,6">
            <StackPanel BorderBrush="{ThemeResource MessageHeaderBorderBrush}" BorderThickness="2,0,0,0" Padding="8,0,0,0">
                <RichTextBlock common:TextBlockHelper.WebPage="{Binding Media.WebPage}" MaxLines="6" TextTrimming="CharacterEllipsis" Margin="0,0,0,8" Style="{StaticResource CaptionRichTextBlockStyle}">
                    <RichTextBlock.Resources>
                        <StaticResource x:Key="MessageHeaderForegroundBrush" ResourceKey="MessageHeaderForegroundBrush2"/>
                    </RichTextBlock.Resources>
                </RichTextBlock>

                <Grid Background="Black"
                      HorizontalAlignment="Left"
                      MinWidth="{ThemeResource TelegramMediaMinWidth}"
                      MinHeight="{ThemeResource TelegramMediaMinHeight}">
                    <controls:ImageView Source="{Binding Media.WebPage.Photo, Converter={StaticResource DefaultPhotoConverter}, ConverterParameter=thumbnail}"
                                        Constraint="{Binding Media.WebPage.Photo}"
                                        MaxWidth="{ThemeResource TelegramMediaMaxWidth}"
                                        MaxHeight="{ThemeResource TelegramMediaMaxHeight}"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Click="SingleMedia_Click"/>

                    <controls:TransferButton Completed="Download_Click"
                                             Transferable="{Binding Media.WebPage.Photo}"
                                             IsTransferring="{Binding Media.WebPage.Photo.IsTransferring}"
                                             Progress="{Binding Media.WebPage.Photo.Progress}"
                                             Style="{StaticResource MediaTransferButtonStyle}"/>
                </Grid>
            </StackPanel>

            <controls:WebPageButton Click="InstantView_Click" WebPage="{Binding Media.WebPage}" Style="{StaticResource InstantViewButtonStyle}"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="MediaWebPageDocumentTemplate">
        <StackPanel Margin="0,8,0,6">
            <StackPanel BorderBrush="{ThemeResource MessageHeaderBorderBrush}" BorderThickness="2,0,0,0" Padding="8,0,0,0">
                <RichTextBlock common:TextBlockHelper.WebPage="{Binding Media.WebPage}" MaxLines="6" TextTrimming="CharacterEllipsis" Margin="0,0,0,8" Style="{StaticResource CaptionRichTextBlockStyle}">
                    <RichTextBlock.Resources>
                        <StaticResource x:Key="MessageHeaderForegroundBrush" ResourceKey="MessageHeaderForegroundBrush2"/>
                    </RichTextBlock.Resources>
                </RichTextBlock>

                <ContentControl x:Name="Media"
                                Content="{Binding Media.WebPage.Document}"
                                ContentTemplateSelector="{StaticResource MediaTemplateSelector}"/>
            </StackPanel>

            <controls:WebPageButton Click="InstantView_Click" WebPage="{Binding Media.WebPage}" Style="{StaticResource InstantViewButtonStyle}"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="MediaGameTemplate" x:DataType="tl:TLMessage">
        <StackPanel BorderBrush="{ThemeResource MessageHeaderBorderBrush}" BorderThickness="2,0,0,0" Margin="0,8,0,6" Padding="8,0,0,0">
            <StackPanel Margin="0,0,0,8">
                <TextBlock Text="{Binding Media.Game.Title}" MaxLines="1" TextTrimming="CharacterEllipsis" Foreground="{ThemeResource MessageHeaderForegroundBrush}" FontWeight="SemiBold" Style="{StaticResource CaptionTextBlockStyle}"/>
                <RichTextBlock common:MessageHelper.Message="{x:Bind Self, Mode=OneWay}" Foreground="{ThemeResource MessageForegroundBrush}" Tag="Game" Style="{StaticResource CaptionRichTextBlockStyle}">
                    <RichTextBlock.Resources>
                        <StaticResource x:Key="MessageHyperlinkForegroundBrush" ResourceKey="MessageHyperlinkForegroundBrush"/>
                    </RichTextBlock.Resources>
                    <Paragraph><Span/></Paragraph>
                </RichTextBlock>
            </StackPanel>

            <Grid x:Name="Media"
                  Background="Black"
                  MinWidth="{ThemeResource TelegramMediaMinWidth}"
                  MinHeight="{ThemeResource TelegramMediaMinHeight}"
                  HorizontalAlignment="Left">
                <controls:ImageView Source="{Binding Media.Game.Document, Converter={StaticResource DefaultPhotoConverter}}"
                                    Constraint="{Binding Media.Game.Document}"
                                    MaxWidth="{ThemeResource TelegramMediaMaxWidth}"
                                    MaxHeight="{ThemeResource TelegramMediaMaxHeight}"/>

                <controls:TransferButton Completed="Download_Click"
                                         Transferable="{Binding Media.Game.Document}"
                                         IsTransferring="{Binding Media.Game.Document.IsTransferring}"
                                         Progress="{Binding Media.Game.Document.Progress}"
                                         Style="{StaticResource MediaTransferButtonStyle}"/>

                <Border Background="{ThemeResource MessageOverlayBackgroundBrush}" CornerRadius="{ThemeResource MessageOverlayCornerRadius}" IsHitTestVisible="False" VerticalAlignment="Bottom" HorizontalAlignment="Right" Padding="8,4,8,4" Margin="4">
                    <TextBlock Text="GAME" Style="{StaticResource CaptionTextBlockStyle}" Foreground="White" TextAlignment="Right"/>
                </Border>
            </Grid>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="MediaGamePhotoTemplate" x:DataType="tl:TLMessage">
        <StackPanel BorderBrush="{ThemeResource MessageHeaderBorderBrush}" BorderThickness="2,0,0,0" Margin="0,8,0,6" Padding="8,0,0,0">
            <StackPanel Margin="0,0,0,8">
                <TextBlock Text="{Binding Media.Game.Title}" MaxLines="1" TextTrimming="CharacterEllipsis" Foreground="{ThemeResource MessageHeaderForegroundBrush}" FontWeight="SemiBold" Style="{StaticResource CaptionTextBlockStyle}"/>
                <RichTextBlock common:MessageHelper.Message="{x:Bind Self, Mode=OneWay}" Foreground="{ThemeResource MessageForegroundBrush}" Tag="Game" Style="{StaticResource CaptionRichTextBlockStyle}">
                    <RichTextBlock.Resources>
                        <StaticResource x:Key="MessageHyperlinkForegroundBrush" ResourceKey="MessageHyperlinkForegroundBrush"/>
                    </RichTextBlock.Resources>
                    <Paragraph><Span/></Paragraph>
                </RichTextBlock>
            </StackPanel>

            <Grid x:Name="Media"
                  Background="Black"
                  MinWidth="{ThemeResource TelegramMediaMinWidth}"
                  MinHeight="{ThemeResource TelegramMediaMinHeight}"
                  HorizontalAlignment="Left">
                <controls:ImageView Source="{Binding Media.Game.Photo, Converter={StaticResource DefaultPhotoConverter}, ConverterParameter=thumbnail}"
                                    Constraint="{Binding Media.Game.Photo}"
                                    MaxWidth="{ThemeResource TelegramMediaMaxWidth}"
                                    MaxHeight="{ThemeResource TelegramMediaMaxHeight}"/>

                <controls:TransferButton Completed="Download_Click"
                                         Transferable="{Binding Media.Game.Photo}"
                                         IsTransferring="{Binding Media.Game.Photo.IsTransferring}"
                                         Progress="{Binding Media.Game.Photo.Progress}"
                                         Style="{StaticResource MediaTransferButtonStyle}"/>

                <Grid Background="{ThemeResource MessageOverlayBackgroundBrush}" CornerRadius="{ThemeResource MessageOverlayCornerRadius}" IsHitTestVisible="False" VerticalAlignment="Bottom" HorizontalAlignment="Right" Padding="8,4,8,4" Margin="4">
                    <TextBlock Text="GAME" Style="{StaticResource CaptionTextBlockStyle}" Foreground="White" TextAlignment="Right"/>
                </Grid>
            </Grid>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="MediaInvoiceTemplate" x:DataType="tl:TLMessage">
        <StackPanel>
            <StackPanel Margin="0,0,0,8">
                <TextBlock Text="{Binding Media.Title}" MaxLines="1" TextTrimming="CharacterEllipsis" Foreground="{ThemeResource MessageHeaderForegroundBrush}" Style="{StaticResource BaseTextBlockStyle}"/>
                <TextBlock Text="{Binding Media.Description}" Style="{StaticResource BodyTextBlockStyle}"/>
            </StackPanel>

            <messages:InvoiceFooter/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="MediaInvoicePhotoTemplate" x:DataType="tl:TLMessage">
        <StackPanel Margin="0,0,0,6">
            <StackPanel Margin="0,0,0,8">
                <TextBlock Text="{Binding Media.Title}" MaxLines="1" TextTrimming="CharacterEllipsis" Foreground="{ThemeResource MessageHeaderForegroundBrush}" Style="{StaticResource BaseTextBlockStyle}"/>
                <TextBlock Text="{Binding Media.Description}" Style="{StaticResource BodyTextBlockStyle}"/>
            </StackPanel>

            <Grid Background="Black"
                  MinWidth="{ThemeResource TelegramMediaMinWidth}"
                  MinHeight="{ThemeResource TelegramMediaMinHeight}"
                  Margin="-8,0,-10,0">
                <controls:ImageView Source="{Binding Media.Photo, Converter={StaticResource DefaultPhotoConverter}, ConverterParameter=thumbnail}"
                                    Constraint="{Binding Media.Photo}"
                                    MaxWidth="{ThemeResource TelegramMediaMaxWidth}"
                                    MaxHeight="{ThemeResource TelegramMediaMaxHeight}"/>

                <messages:InvoiceFooter Background="{ThemeResource MessageOverlayBackgroundBrush}" Foreground="White" VerticalAlignment="Top" HorizontalAlignment="Left" Padding="8,4,8,4" Margin="4"/>
            </Grid>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="MediaUnsupportedTemplate">
        <TextBlock Style="{StaticResource BodyTextBlockStyle}">
            <Run Text="This message is not supported on your version of Unigram. Update the app to view:"/>
            <LineBreak/>
            <Hyperlink Click="Unsupported_Click">
                <Run Text="@unigram"/>
            </Hyperlink>
        </TextBlock>
    </DataTemplate>

    <DataTemplate x:Key="MediaEmptyTemplate"/>


    <selectors:MediaTemplateSelector x:Key="MediaTemplateSelector"
                                     EmptyTemplate="{StaticResource MediaEmptyTemplate}"
                                     AudioTemplate="{StaticResource MediaAudioTemplate}"
                                     ContactTemplate="{StaticResource MediaContactTemplate}"
                                     DocumentTemplate="{StaticResource MediaDocumentTemplate}"
                                     DocumentThumbTemplate="{StaticResource MediaDocumentThumbTemplate}"
                                     GameTemplate="{StaticResource MediaGameTemplate}"
                                     GamePhotoTemplate="{StaticResource MediaGamePhotoTemplate}"
                                     GeoTemplate="{StaticResource MediaGeoTemplate}"
                                     GeoLiveTemplate="{StaticResource MediaGeoLiveTemplate}"
                                     GifTemplate="{StaticResource MediaGifTemplate}"
                                     MusicTemplate="{StaticResource MediaMusicTemplate}"
                                     RoundVideoTemplate="{StaticResource MediaRoundVideoTemplate}"
                                     PhotoTemplate="{StaticResource MediaPhotoTemplate}"
                                     VideoTemplate="{StaticResource MediaVideoTemplate}"
                                     VenueTemplate="{StaticResource MediaVenueTemplate}"
                                     StickerTemplate="{StaticResource MediaStickerTemplate}"
                                     SecretPhotoTemplate="{StaticResource MediaSecretPhotoTemplate}"
                                     SecretVideoTemplate="{StaticResource MediaSecretVideoTemplate}"
                                     WebPageTemplate="{StaticResource MediaWebPageTemplate}"
                                     WebPageDocumentTemplate="{StaticResource MediaWebPageDocumentTemplate}"
                                     WebPagePhotoTemplate="{StaticResource MediaWebPagePhotoTemplate}"
                                     WebPageSmallPhotoTemplate="{StaticResource MediaWebPageSmallPhotoTemplate}"
                                     InvoiceTemplate="{StaticResource MediaInvoiceTemplate}"
                                     InvoicePhotoTemplate="{StaticResource MediaInvoicePhotoTemplate}"
                                     UnsupportedTemplate="{StaticResource MediaUnsupportedTemplate}"/>

</ResourceDictionary>
