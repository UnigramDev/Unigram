<Page
    x:Class="Unigram.Views.DialogPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:Unigram.Controls"
    xmlns:local="using:Unigram.Views"
    xmlns:common="using:Unigram.Common"
    xmlns:inline="using:Unigram.Controls.Inline"
    xmlns:messages="using:Unigram.Controls.Messages"
    xmlns:selectors="using:Unigram.Selectors"
    xmlns:viewmodels="using:Unigram.ViewModels"
    xmlns:vm="using:Unigram.ViewModels"
    xmlns:models="using:Telegram.Api.TL"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition>
                <ContinuumNavigationTransitionInfo />
            </NavigationThemeTransition>
        </TransitionCollection>
    </Page.Transitions>

    <Page.Resources>
        <Style TargetType="ScrollBar">
            <Setter Property="Background" Value="Transparent"/>
        </Style>

        <CollectionViewSource x:Key="Stickers" Source="{Binding StickerSets}" IsSourceGrouped="True"/>

        <x:Double x:Key="MenuFlyoutMaxWidth">360</x:Double>

        <Style x:Key="IconMenuFlyoutItem" TargetType="MenuFlyoutItem">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
            <Setter Property="Padding" Value="{ThemeResource MenuFlyoutItemThemePadding}" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="UseSystemFocusVisuals" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="MenuFlyoutItem">
                        <Grid x:Name="LayoutRoot"
                              Padding="{TemplateBinding Padding}"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="TextBlock" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextBlock" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="TextBlock" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListMediumBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextBlock" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation Storyboard.TargetName="TextBlock" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextBlock" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckPlaceholderStates">
                                    <VisualState x:Name="NoPlaceholder" />
                                    <VisualState x:Name="CheckPlaceholder">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextBlock" Storyboard.TargetProperty="Margin">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuFlyoutItemPlaceholderThemeThickness}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="PaddingSizeStates">
                                    <VisualState x:Name="DefaultPadding" />
                                    <VisualState x:Name="NarrowPadding">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Padding">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuFlyoutItemThemePaddingNarrow}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <StackPanel Orientation="Horizontal">
                                <FontIcon Margin="0,0,12,0" Glyph="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <TextBlock x:Name="TextBlock"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           Foreground="{TemplateBinding Foreground}"
                                           Text="{TemplateBinding Text}"
                                           TextTrimming="Clip"/>
                            </StackPanel>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ListViewHeaderItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{ThemeResource ListViewHeaderItemThemeFontSize}" />
            <Setter Property="Background" Value="Red" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="MinHeight" Value="{ThemeResource ListViewHeaderItemMinHeight}" />
            <Setter Property="UseSystemFocusVisuals" Value="True" />
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewHeaderItem">
                        <ContentPresenter x:Name="ContentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTransitions="{TemplateBinding ContentTransitions}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CloseButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
            <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
            <Setter Property="Content" Value="&#xE700;" />
            <Setter Property="Height" Value="44" />
            <Setter Property="Width" Value="44" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundListLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundListMediumBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundBaseLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <TextBlock
                                x:Name="ContentPresenter"
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                AutomationProperties.AccessibilityView="Raw"
                                Text="&#xE10A;"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Teorically temporary location, but we'll see -->
        <MenuFlyout x:Key="MessageMenuFlyout">
            <MenuFlyout.MenuFlyoutPresenterStyle>
                <Style TargetType="MenuFlyoutPresenter">
                    <Setter Property="RequestedTheme" Value="Light"/>
                </Style>
            </MenuFlyout.MenuFlyoutPresenterStyle>
            <MenuFlyoutItem Loaded="MessageReply_Loaded" Command="{x:Bind ViewModel.MessageReplyCommand}" CommandParameter="{Binding}" Text="Reply"/>
            <MenuFlyoutItem Loaded="MessagePin_Loaded" Command="{x:Bind ViewModel.MessagePinCommand}" CommandParameter="{Binding}" Text="Pin"/>
            <MenuFlyoutItem Loaded="MessageEdit_Loaded" Command="{x:Bind ViewModel.MessageEditCommand}" CommandParameter="{Binding}" Text="Edit"/>
            <MenuFlyoutItem Loaded="MessageDelete_Loaded" Command="{x:Bind ViewModel.MessageDeleteCommand}" CommandParameter="{Binding}" Text="Delete"/>
            <MenuFlyoutItem Loaded="MessageForward_Loaded" Text="Forward" IsEnabled="False"/>
            <MenuFlyoutItem Loaded="MessageCopy_Loaded" Command="{x:Bind ViewModel.MessageCopyCommand}" CommandParameter="{Binding}" Text="Copy"/>
            <MenuFlyoutItem Loaded="MessageCopyLink_Loaded" Command="{x:Bind ViewModel.MessageCopyLinkCommand}" CommandParameter="{Binding}" Text="Copy post link"/>
        </MenuFlyout>

        <DataTemplate x:Key="UserStickerTemplate" x:DataType="models:TLMessage">
            <Grid Margin="0,2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <!-- TODO: not the right way -->
                <Border Height="10" Visibility="{x:Bind (Visibility)IsFirst), Mode=OneWay}"/>

                <StackPanel Visibility="{x:Bind StickerReplyVisibility}" 
                            Background="{ThemeResource MessageServiceBackgroundBrush}" 
                            VerticalAlignment="Bottom" 
                            HorizontalAlignment="Right"
                            MaxWidth="180"
                            Padding="8,0,8,6"
                            Margin="0,0,6,0"
                            Grid.Row="1">
                    <TextBlock Visibility="{x:Bind (Visibility)HasViaBotId}" Margin="0,4,0,0">
                        <Hyperlink UnderlineStyle="None" Foreground="#FFFFFF">
                            <Run Text="via @"/><Run Text="{x:Bind ViaBot.Username}"/>
                        </Hyperlink>
                    </TextBlock>
                    <controls:MessageReference Message="{x:Bind Reply, Mode=OneWay}" Visibility="{x:Bind ReplyVisibility}" Margin="0,6,0,0">
                        <controls:MessageReference.Resources>
                            <SolidColorBrush x:Key="MessageHeaderBorderBrush" Color="#FFFFFF"/>
                            <SolidColorBrush x:Key="MessageHeaderForegroundBrush" Color="#FFFFFF"/>
                            <SolidColorBrush x:Key="MessageForegroundBrush" Color="#FFFFFF"/>
                            <SolidColorBrush x:Key="MessageSubtleLabelBrush" Color="#FFFFFF"/>
                            <ElementTheme x:Key="MessageTextBlockTheme">Dark</ElementTheme>
                        </controls:MessageReference.Resources>
                    </controls:MessageReference>
                </StackPanel>

                <Grid ContextFlyout="{StaticResource MessageMenuFlyout}" Grid.Column="1" Grid.Row="1">
                    <controls:ImageView
                        Source="{x:Bind ((models:TLMessageMediaDocument)Media).Document, Converter={StaticResource DefaultPhotoConverter}}" 
                        Constraint="{x:Bind ((models:TLMessageMediaDocument)Media).Document}"
                        MaxWidth="180" MaxHeight="180" Margin="2"/>

                    <Border Background="{ThemeResource MessageServiceBackgroundBrush}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Padding="6,2,6,4" Margin="0,0,6,0">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{x:Bind Date, Converter={StaticResource MessageDateTimeConverter}}" Style="{ThemeResource CaptionTextBlockStyle}" Foreground="White" TextAlignment="Right" Margin="0,2,0,0"/>
                            <FontIcon Glyph="{x:Bind State, Converter={StaticResource StateToGlyphConverter}, Mode=OneWay}" FontFamily="{ThemeResource TelegramThemeFontFamily}" Height="10" Width="18" FontSize="10" Foreground="White" Margin="4,0,0,3" VerticalAlignment="Bottom"/>
                        </StackPanel>
                    </Border>
                </Grid>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="FriendStickerTemplate" x:DataType="models:TLMessage">
            <Grid Margin="0,2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <!-- TODO: not the right way -->
                <Border Height="10" Visibility="{x:Bind (Visibility)IsFirst), Mode=OneWay}"/>

                <Grid ContextFlyout="{StaticResource MessageMenuFlyout}" Grid.Row="1">
                    <controls:ImageView
                        Source="{x:Bind ((models:TLMessageMediaDocument)Media).Document, Converter={StaticResource DefaultPhotoConverter}}" 
                        Constraint="{x:Bind ((models:TLMessageMediaDocument)Media).Document}"
                        MaxWidth="180" MaxHeight="180" Margin="2"/>

                    <Border Background="{ThemeResource MessageServiceBackgroundBrush}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Padding="6,2,6,4" Margin="0,0,6,0">
                        <TextBlock Text="{x:Bind Date, Converter={StaticResource MessageDateTimeConverter}}" Style="{ThemeResource CaptionTextBlockStyle}" Foreground="White" TextAlignment="Right" Margin="0,2,0,0"/>
                    </Border>
                </Grid>

                <StackPanel Visibility="{x:Bind StickerReplyVisibility}" 
                            Background="{ThemeResource MessageServiceBackgroundBrush}" 
                            VerticalAlignment="Bottom" 
                            HorizontalAlignment="Left"
                            MaxWidth="180"
                            Padding="8,0,8,6"
                            Margin="6,0,0,0"
                            Grid.Column="1"
                            Grid.Row="1">
                    <TextBlock Visibility="{x:Bind (Visibility)HasViaBotId}" Margin="0,4,0,0">
                        <Hyperlink UnderlineStyle="None" Foreground="#FFFFFF">
                            <Run Text="via @"/><Run Text="{x:Bind ViaBot.Username}"/>
                        </Hyperlink>
                    </TextBlock>
                    <controls:MessageReference Message="{x:Bind Reply, Mode=OneWay}" Visibility="{x:Bind ReplyVisibility}" Margin="0,6,0,0">
                        <controls:MessageReference.Resources>
                            <SolidColorBrush x:Key="MessageHeaderBorderBrush" Color="#FFFFFF"/>
                            <SolidColorBrush x:Key="MessageHeaderForegroundBrush" Color="#FFFFFF"/>
                            <SolidColorBrush x:Key="MessageForegroundBrush" Color="#FFFFFF"/>
                            <SolidColorBrush x:Key="MessageSubtleLabelBrush" Color="#FFFFFF"/>
                            <ElementTheme x:Key="MessageTextBlockTheme">Dark</ElementTheme>
                        </controls:MessageReference.Resources>
                    </controls:MessageReference>
                </StackPanel>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="ChatFriendStickerTemplate" x:DataType="models:TLMessage">
            <Grid Margin="-56,0,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="56"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid HorizontalAlignment="Left" VerticalAlignment="Top" Visibility="{x:Bind (Visibility)IsFirst, Mode=OneWay}" Margin="12,12,0,0" Width="36" Height="36">
                    <Ellipse Fill="{Binding FromId, Converter={StaticResource BubblePlaceholderConverter}}" Width="36" Height="36"/>
                    <Ellipse Width="36" Height="36">
                        <Ellipse.Fill>
                            <ImageBrush ImageSource="{Binding From.Photo, Converter={StaticResource DefaultPhotoConverter}}" />
                        </Ellipse.Fill>
                    </Ellipse>
                    <Border BorderBrush="#26000000" BorderThickness="1" CornerRadius="18" Width="36" Height="36"/>
                </Grid>
                <Grid Margin="0,2" Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <!-- TODO: not the right way -->
                    <Border Height="10" Visibility="{x:Bind (Visibility)IsFirst), Mode=OneWay}"/>
                    
                    <Grid ContextFlyout="{StaticResource MessageMenuFlyout}" Grid.Row="1">
                        <controls:ImageView
                            Source="{x:Bind ((models:TLMessageMediaDocument)Media).Document, Converter={StaticResource DefaultPhotoConverter}}" 
                            Constraint="{x:Bind ((models:TLMessageMediaDocument)Media).Document}"
                            MaxWidth="180" MaxHeight="180" Margin="2"/>

                        <Border Background="{ThemeResource MessageServiceBackgroundBrush}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Padding="6,2,6,4" Margin="0,0,6,0">
                            <TextBlock Text="{x:Bind Date, Converter={StaticResource MessageDateTimeConverter}}" Style="{ThemeResource CaptionTextBlockStyle}" Foreground="White" TextAlignment="Right" Margin="0,2,0,0"/>
                        </Border>
                    </Grid>

                    <StackPanel Visibility="{x:Bind StickerReplyVisibility}" 
                                Background="{ThemeResource MessageServiceBackgroundBrush}" 
                                VerticalAlignment="Bottom" 
                                HorizontalAlignment="Left"
                                MaxWidth="180"
                                Padding="8,0,8,6"
                                Margin="6,0,0,0"
                                Grid.Column="1"
                                Grid.Row="1">
                        <TextBlock Visibility="{x:Bind (Visibility)HasViaBotId}" Margin="0,4,0,0">
                            <Hyperlink UnderlineStyle="None" Foreground="#FFFFFF">
                                <Run Text="via @"/><Run Text="{x:Bind ViaBot.Username}"/>
                            </Hyperlink>
                        </TextBlock>
                        <controls:MessageReference Message="{x:Bind Reply, Mode=OneWay}" Visibility="{x:Bind ReplyVisibility}" Margin="0,6,0,0">
                            <controls:MessageReference.Resources>
                                <SolidColorBrush x:Key="MessageHeaderBorderBrush" Color="#FFFFFF"/>
                                <SolidColorBrush x:Key="MessageHeaderForegroundBrush" Color="#FFFFFF"/>
                                <SolidColorBrush x:Key="MessageForegroundBrush" Color="#FFFFFF"/>
                                <SolidColorBrush x:Key="MessageSubtleLabelBrush" Color="#FFFFFF"/>
                                <ElementTheme x:Key="MessageTextBlockTheme">Dark</ElementTheme>
                            </controls:MessageReference.Resources>
                        </controls:MessageReference>
                    </StackPanel>
                </Grid>
            </Grid>
        </DataTemplate>

        <!-- Region Service -->
        <DataTemplate x:Key="ServiceMessageTemplate">
            <Border Background="#7F89A0B4" HorizontalAlignment="Center" Padding="12,5,12,6" Margin="0,12,0,2">
                <RichTextBlock common:ServiceHelper.Message="{Binding Self}" Foreground="White" TextAlignment="Center" Style="{ThemeResource BodyRichTextBlockStyle}"/>
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="ServiceMessagePhotoTemplate">
            <StackPanel Margin="0,12,0,2">
                <Border Background="#7F89A0B4" HorizontalAlignment="Center" Padding="12,5,12,6">
                    <RichTextBlock common:ServiceHelper.Message="{Binding Self}" Foreground="White" TextAlignment="Center" Style="{ThemeResource BodyRichTextBlockStyle}"/>
                </Border>

                <Border Width="96" Height="96" CornerRadius="48" Background="Black" Margin="0,12,0,0">
                    <Ellipse>
                        <Ellipse.Fill>
                            <ImageBrush ImageSource="{Binding Action.Photo, Converter={StaticResource DefaultPhotoConverter}}"/>
                        </Ellipse.Fill>
                    </Ellipse>
                </Border>
                <!--<Border Visibility="{Binding Action.Photo, Converter={StaticResource ExistsToVisibilityConverter}}" Width="96" Height="96" Margin="0,8,0,0">
                     <controls:ImageControl TelegramSource="{Binding Action.Photo}" Stretch="UniformToFill"/>
                     </Border>-->
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="UnreadMessageTemplate">
            <Border Background="#7F89A0B4" HorizontalAlignment="Center" Padding="12,5,12,6" Margin="0,12" RenderTransformOrigin="0.5,0.5">
                <!--<TextBlock Text="{Binding Converter={StaticResource ServiceMessageToTextConverter}}" Foreground="White" Style="{ThemeResource BodyTextBlockStyle}"/>-->
            </Border>
        </DataTemplate>
        <!-- EndRegion -->

        <DataTemplate x:Key="UserMessageTemplate">
            <messages:UserMessageControl ContextFlyout="{StaticResource MessageMenuFlyout}">
                <StackPanel.Resources>
                    <ResourceDictionary>
                        <ResourceDictionary.MergedDictionaries>
                            <ResourceDictionary Source="ms-appx:///Themes/AccentSent.xaml"/>
                        </ResourceDictionary.MergedDictionaries>
                    </ResourceDictionary>
                </StackPanel.Resources>
            </messages:UserMessageControl>
        </DataTemplate>

        <DataTemplate x:Key="FriendMessageTemplate">
            <messages:FriendMessageControl ContextFlyout="{StaticResource MessageMenuFlyout}"/>
        </DataTemplate>

        <DataTemplate x:Key="ChatFriendMessageTemplate" x:DataType="models:TLMessage">
            <Grid Margin="-56,0,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="56"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid HorizontalAlignment="Left" VerticalAlignment="Top" Visibility="{x:Bind (Visibility)IsFirst, Mode=OneWay}" Margin="12,12,0,0" Width="36" Height="36">
                    <Ellipse Fill="{Binding FromId, Converter={StaticResource BubblePlaceholderConverter}}" Width="36" Height="36"/>
                    <Ellipse Width="36" Height="36">
                        <Ellipse.Fill>
                            <ImageBrush ImageSource="{Binding From.Photo, Converter={StaticResource DefaultPhotoConverter}}" />
                        </Ellipse.Fill>
                    </Ellipse>
                    <Border BorderBrush="#26000000" BorderThickness="1" CornerRadius="18" Width="36" Height="36"/>
                </Grid>
                <messages:FriendMessageControl ContextFlyout="{StaticResource MessageMenuFlyout}" Grid.Column="1"/>
            </Grid>
        </DataTemplate>

        <selectors:MessageTemplateSelector x:Key="MessageTemplateSelector"
                                           UserMessageTemplate="{StaticResource UserMessageTemplate}"
                                           UserStickerTemplate="{StaticResource UserStickerTemplate}"
                                           FriendMessageTemplate="{StaticResource FriendMessageTemplate}"
                                           FriendStickerTemplate="{StaticResource FriendStickerTemplate}"
                                           ChatFriendMessageTemplate="{StaticResource ChatFriendMessageTemplate}"
                                           ChatFriendStickerTemplate="{StaticResource ChatFriendStickerTemplate}"
                                           ServiceMessageTemplate="{StaticResource ServiceMessageTemplate}"
                                           ServiceMessagePhotoTemplate="{StaticResource ServiceMessagePhotoTemplate}"
                                           UnreadMessagesTemplate="{StaticResource UnreadMessageTemplate}"/>

        <Style x:Key="UploadProgressRingStyle" TargetType="ProgressRing">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{ThemeResource SystemControlHighlightAccentBrush}" />
            <Setter Property="IsHitTestVisible" Value="False" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Height" Value="10" />
            <Setter Property="Width" Value="20" />
            <Setter Property="MinHeight" Value="10"/>
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ProgressRing">
                        <Grid x:Name="Ring"
                          Background="{TemplateBinding Background}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          Padding="{TemplateBinding Padding}"
                          Visibility="Collapsed"
                          RenderTransformOrigin="0.5,0.5"
                          FlowDirection="LeftToRight">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="ActiveStates">
                                    <VisualState x:Name="Inactive" />
                                    <VisualState x:Name="Active">
                                        <Storyboard RepeatBehavior="Forever">
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Ring" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0:0:0.5" To="5" Storyboard.TargetProperty="(TranslateTransform.X)" Storyboard.TargetName="Translate" d:IsOptimized="True"/>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Arrow1">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Arrow3">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid.RenderTransform>
                                <TranslateTransform x:Name="Translate"/>
                            </Grid.RenderTransform>
                            <Path x:Name="Arrow1" Data="M 0,-4 4,0 0,4" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round" HorizontalAlignment="Left" Stroke="{TemplateBinding Foreground}" StrokeThickness="2" Margin="0,5,0,0"/>
                            <Path x:Name="Arrow2" Data="M 0,-4 4,0 0,4" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round" HorizontalAlignment="Left" Stroke="{TemplateBinding Foreground}" StrokeThickness="2" Margin="5,5,0,0"/>
                            <Path x:Name="Arrow3" Data="M 0,-4 4,0 0,4" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round" HorizontalAlignment="Left" Stroke="{TemplateBinding Foreground}" StrokeThickness="2" Margin="10,5,0,0"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TypingProgressRingStyle" TargetType="ProgressRing">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{ThemeResource SystemControlHighlightAccentBrush}" />
            <Setter Property="IsHitTestVisible" Value="False" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Height" Value="Auto" />
            <Setter Property="Width" Value="Auto" />
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ProgressRing">
                        <StackPanel x:Name="Ring"
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Padding="{TemplateBinding Padding}"
                                    FlowDirection="LeftToRight"
                                    Orientation="Horizontal">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="ActiveStates">
                                    <VisualState x:Name="Inactive" />
                                    <VisualState x:Name="Active">
                                        <Storyboard Duration="0:0:1.00" RepeatBehavior="Forever">
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Ring" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dot1">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.25" Value="1"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dot2">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.50" Value="1"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dot3">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.75" Value="1"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <TextBlock x:Name="Dot1" Text="." Opacity="0" Style="{StaticResource CaptionTextBlockStyle}"/>
                            <TextBlock x:Name="Dot2" Text="." Opacity="0" Style="{StaticResource CaptionTextBlockStyle}"/>
                            <TextBlock x:Name="Dot3" Text="." Opacity="0" Style="{StaticResource CaptionTextBlockStyle}"/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Page.Resources>

    <Grid x:Name="gridMain"
          Background="Transparent"
          AllowDrop="True"
          DragOver="gridMain_DragOver"
          Drop="gridMain_Drop">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Titlebar -->
        <Grid Background="{ThemeResource TelegramBackgroundTitlebarBrush}"
              Height="{ThemeResource AppBarThemeCompactHeight}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <!-- Prevent "click effect" to the entire titlebar and other stuff -->
            <Button x:Name="btnDialogInfo"
                    Click="btnDialogInfo_Click"
                    Style="{StaticResource EmptyButtonStyle}">
                <Button.Content>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <!--User icon-->
                        <Grid Width="36" Height="36" Margin="12,0">
                            <Ellipse Fill="{x:Bind ViewModel.PlaceHolderColor}" VerticalAlignment="Center"/>
                            <TextBlock Foreground="White" x:Name="InitialName" Text="{x:Bind ViewModel.With, Converter={StaticResource InitialNameStringConverter}}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <Ellipse x:Name="elpDialogIcon">
                                <Ellipse.Fill>
                                    <ImageBrush ImageSource="{x:Bind ViewModel.photo, Converter={StaticResource DefaultPhotoConverter}}" />
                                </Ellipse.Fill>
                            </Ellipse>
                            <Border BorderBrush="#26000000" BorderThickness="1" CornerRadius="18" Width="36" Height="36"/>
                        </Grid>
                        <StackPanel Orientation="Vertical" VerticalAlignment="Center" Grid.Column="1">
                            <TextBlock x:Name="tblDialogName"
                                       Text="{x:Bind Path=ViewModel.DialogTitle}"
                                       Style="{StaticResource BaseTextBlockStyle}"/>
                            <Grid>
                                <TextBlock x:Name="tblDialogStatus"
                                           Visibility="{x:Bind ViewModel.IsTyping, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=invert}"
                                           Foreground="{ThemeResource SystemControlForegroundBaseMediumBrush}"
                                           Style="{StaticResource CaptionTextBlockStyle}"
                                           Text="{x:Bind ViewModel.LastSeen}" />
                                <StackPanel Orientation="Horizontal" Visibility="{x:Bind (Visibility)ViewModel.IsTyping, Mode=OneWay}">
                                    <!--<ProgressRing IsActive="{x:Bind ViewModel.IsTyping, Mode=OneWay}" VerticalAlignment="Bottom" Margin="0,0,4,2" Style="{StaticResource UploadProgressRingStyle}"/>-->
                                    <TextBlock Text="{x:Bind ViewModel.TypingSubtitle, Mode=OneWay}"
                                               Foreground="{ThemeResource SystemControlHighlightAccentBrush}"
                                               Style="{StaticResource CaptionTextBlockStyle}"/>
                                    <ProgressRing IsActive="{x:Bind ViewModel.IsTyping, Mode=OneWay}" Style="{StaticResource TypingProgressRingStyle}"/>
                                </StackPanel>
                            </Grid>
                        </StackPanel>
                    </Grid>
                </Button.Content>
            </Button>
            <Button x:Name="btnOptions"
                    Padding="16,23,16,0"
                    Style="{StaticResource EllipsisButton}"
                    Grid.Column="1">
                <FontIcon x:Name="EllipsisIcon"
                          VerticalAlignment="Center"
                          FontFamily="{ThemeResource SymbolThemeFontFamily}"
                          FontSize="16"
                          Glyph="&#xE10C;"
                          Height="{ThemeResource AppBarExpandButtonCircleDiameter}" />
                <Button.Flyout>
                    <MenuFlyout>
                        <MenuFlyoutItem Style="{StaticResource IconMenuFlyoutItem}" 
                                        x:Name="cbtnReportSpam"
                                        x:Uid="FCBTN-ReportSpam"
                                        IsEnabled="False"
                                        Tag="&#xE1DE;"
                                        Text="Report spam" />
                        <MenuFlyoutItem Style="{StaticResource IconMenuFlyoutItem}"
                                        x:Name="cbtnSearch"
                                        x:Uid="FCBTN-Search"
                                        IsEnabled="False"
                                        Tag="&#xE11A;"
                                        Text="Search" />
                        <MenuFlyoutItem Style="{StaticResource IconMenuFlyoutItem}" 
                                        x:Name="cbtnPinToStart"
                                        x:Uid="FCBTN-Pin"
                                        IsEnabled="False"
                                        Tag="&#xE141;"
                                        Text="Pin to Start"/>
                    </MenuFlyout>
                </Button.Flyout>
            </Button>

            <Border BorderThickness="0,0,0,1" BorderBrush="{ThemeResource SystemControlForegroundBaseLowBrush}" IsHitTestVisible="False" Grid.ColumnSpan="2"/>
        </Grid>
        <!-- END OF Titlebar -->

        <Grid x:Name="grdPinnedMessage"
              Visibility="{x:Bind ViewModel.PinnedMessage, Converter={StaticResource NullToVisibilityConverter}, Mode=OneWay}"
              Background="{ThemeResource TelegramBackgroundSubtitleBarBrush}"
              Height="{ThemeResource AppBarThemeCompactHeight}"
              Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="48"/>
            </Grid.ColumnDefinitions>

            <Button x:Name="btnPinnedMessage" Padding="12,0" Style="{StaticResource EmptyButtonStyle}">
                <controls:MessageReference Title="Pinned message" Message="{x:Bind ViewModel.PinnedMessage, Mode=OneWay}" VerticalAlignment="Center" Margin="0"/>
            </Button>
            
            <controls:GlyphButton Click="btnClosePinnedMessage_Click" Glyph="&#xE106;" FontSize="16" Grid.Column="1"/>

            <Border BorderThickness="0,0,0,1" BorderBrush="{ThemeResource SystemControlForegroundBaseLowBrush}" IsHitTestVisible="False" Grid.ColumnSpan="2"/>
        </Grid>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="44"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Canvas x:Name="Headers" SizeChanged="Headers_SizeChanged">
                <Canvas.Clip>
                    <RectangleGeometry/>
                </Canvas.Clip>
            </Canvas>

            <controls:BubbleListView x:Name="lvDialogs" 
                                     ItemsSource="{Binding Messages}"
                                     ItemTemplateSelector="{StaticResource MessageTemplateSelector}"
                                     ItemContainerTransitions="{x:Null}"
                                     ShowsScrollingPlaceholders="False"
                                     SelectionMode="None"
                                     Grid.ColumnSpan="2">
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <ItemsStackPanel ItemsUpdatingScrollMode="KeepLastItemInView"
                                         VerticalAlignment="Bottom" />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemContainerStyleSelector>
                    <selectors:MessageStyleSelector>
                        <selectors:MessageStyleSelector.ChatFriendMessageStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
                                <Setter Property="TabNavigation" Value="Local"/>
                                <Setter Property="IsHoldingEnabled" Value="True"/>
                                <Setter Property="Padding" Value="12,0,12,0"/>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
                                <Setter Property="MinHeight" Value="0"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListViewItem">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="56"/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <Grid HorizontalAlignment="Left" VerticalAlignment="Top" Margin="12,12,0,0" Width="36" Height="36">
                                                    <Ellipse Fill="{Binding FromId, Converter={StaticResource BubblePlaceholderConverter}}" Width="36" Height="36"/>
                                                    <Ellipse Width="36" Height="36">
                                                        <Ellipse.Fill>
                                                            <ImageBrush ImageSource="{Binding From.Photo, Converter={StaticResource DefaultPhotoConverter}}" />
                                                        </Ellipse.Fill>
                                                    </Ellipse>
                                                    <Border BorderBrush="#26000000" BorderThickness="1" CornerRadius="18" Width="36" Height="36"/>
                                                </Grid>
                                                <ContentPresenter Grid.Column="1"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </selectors:MessageStyleSelector.ChatFriendMessageStyle>
                        <selectors:MessageStyleSelector.MessageStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
                                <Setter Property="TabNavigation" Value="Local"/>
                                <Setter Property="IsHoldingEnabled" Value="True"/>
                                <Setter Property="Padding" Value="12,0,12,0"/>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
                                <Setter Property="MinHeight" Value="0"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListViewItem">
                                            <ListViewItemPresenter
                                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                                SelectionCheckMarkVisualEnabled="True"
                                                CheckBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                                                CheckBoxBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                                                DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
                                                DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
                                                FocusBorderBrush="{ThemeResource SystemControlForegroundAltHighBrush}"
                                                FocusSecondaryBorderBrush="{ThemeResource SystemControlForegroundBaseHighBrush}"
                                                PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"
                                                PointerOverBackground="Transparent"
                                                PointerOverForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}"
                                                SelectedBackground="{ThemeResource SystemControlHighlightListAccentLowBrush}"
                                                SelectedForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}"
                                                SelectedPointerOverBackground="{ThemeResource SystemControlHighlightListAccentMediumBrush}"
                                                PressedBackground="Transparent"
                                                SelectedPressedBackground="{ThemeResource SystemControlHighlightListAccentHighBrush}"
                                                DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                                DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                                                ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                ContentMargin="{TemplateBinding Padding}"
                                                CheckMode="Inline"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </selectors:MessageStyleSelector.MessageStyle>
                        <selectors:MessageStyleSelector.ServiceStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
                                <Setter Property="TabNavigation" Value="Local"/>
                                <Setter Property="IsHoldingEnabled" Value="True"/>
                                <Setter Property="Padding" Value="12,0,12,0"/>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
                                <Setter Property="MinHeight" Value="0"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListViewItem">
                                            <ListViewItemPresenter
                                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                                SelectionCheckMarkVisualEnabled="False"
                                                CheckBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                                                CheckBoxBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                                                DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
                                                DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
                                                FocusBorderBrush="{ThemeResource SystemControlForegroundAltHighBrush}"
                                                FocusSecondaryBorderBrush="{ThemeResource SystemControlForegroundBaseHighBrush}"
                                                PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"
                                                PointerOverBackground="Transparent"
                                                PointerOverForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}"
                                                SelectedBackground="Transparent"
                                                SelectedForeground="{ThemeResource SystemControlForegroundBaseHighBrush}"
                                                SelectedPointerOverBackground="{ThemeResource SystemControlHighlightListLowBrush}"
                                                PressedBackground="Transparent"
                                                SelectedPressedBackground="{ThemeResource SystemControlHighlightListMediumBrush}"
                                                DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                                DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                                                ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                ContentMargin="{TemplateBinding Padding}"
                                                CheckMode="Inline"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </selectors:MessageStyleSelector.ServiceStyle>
                    </selectors:MessageStyleSelector>
                </ListView.ItemContainerStyleSelector>
                <ListView.Header>
                    <Border Height="10"/>
                </ListView.Header>
                <ListView.Footer>
                    <Border Height="10"/>
                </ListView.Footer>
                <!--<ListView.GroupStyle>
                     <GroupStyle>
                     <GroupStyle.HeaderTemplateSelector>
                     <selectors:MessageGroupTemplateSelector>
                     <selectors:MessageGroupTemplateSelector.ChatFriendMessageTemplate>
                     <DataTemplate x:DataType="viewmodels:MessageGroup">
                     <Grid>
                     <Ellipse Width="32" Height="32" Fill="Red" Margin="12,12,0,0"/>
                     <Border CornerRadius="32" Width="32" Height="32" Margin="12,12,0,0">
                     <Border.Background>
                     <ImageBrush ImageSource="{x:Bind From.Photo, Converter={StaticResource DefaultPhotoConverter}, Mode=OneWay}"/>
                     </Border.Background>
                     </Border>
                     </Grid>
                     </DataTemplate>
                     </selectors:MessageGroupTemplateSelector.ChatFriendMessageTemplate>
                     <selectors:MessageGroupTemplateSelector.PlaceholderMessageTemplate>
                     <DataTemplate>
                     <Rectangle Width="44"/>
                     </DataTemplate>
                     </selectors:MessageGroupTemplateSelector.PlaceholderMessageTemplate>
                     </selectors:MessageGroupTemplateSelector>
                     </GroupStyle.HeaderTemplateSelector>
                     </GroupStyle>
                     </ListView.GroupStyle>-->
            </controls:BubbleListView>

            <Border x:Name="DateHeader" Visibility="Collapsed" Background="#7F89A0B4" HorizontalAlignment="Center" VerticalAlignment="Top" Padding="12,5,12,6" Margin="0,12,0,2" Grid.ColumnSpan="2">
                <RichTextBlock x:Name="DateHeaderLabel" IsTextSelectionEnabled="False" Foreground="White" TextAlignment="Center" Style="{ThemeResource BodyRichTextBlockStyle}"/>
            </Border>
        </Grid>

        <Grid VerticalAlignment="Bottom" Grid.Row="2">
            <inline:InlineBotResultsView ItemClick="InlineBotResults_ItemClick"/>

            <Grid x:Name="Jimmy"
                  x:DeferLoadStrategy="Lazy"
                  Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                  BorderBrush="{ThemeResource TelegramBackgroundAccentBrush}"
                  HorizontalAlignment="Right"
                  BorderThickness="1"
                  Width="360"
                  Margin="8">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <GridView ItemsSource="{Binding Source={StaticResource Stickers}}"
                          Padding="12,0"
                          Grid.Row="1">
                    <GridView.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Key.Title}" Style="{StaticResource BaseTextBlockStyle}"/>
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                            <GroupStyle.HeaderContainerStyle>
                                <Style TargetType="GridViewHeaderItem">
                                    <Setter Property="Background" Value="{ThemeResource SystemControlBackgroundAltMediumHighBrush}" />
                                    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                                    <Setter Property="FontSize" Value="{ThemeResource ListViewHeaderItemThemeFontSize}" />
                                    <Setter Property="Margin" Value="0,0,0,0"/>
                                    <Setter Property="Padding" Value="0,8,0,9"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    <Setter Property="VerticalContentAlignment" Value="Top" />
                                    <Setter Property="MinHeight" Value="0"/>
                                    <Setter Property="UseSystemFocusVisuals" Value="True" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="GridViewHeaderItem">
                                                <Border Background="{TemplateBinding Background}"
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}">
                                                    <ContentPresenter x:Name="ContentPresenter"
                                                                      Margin="{TemplateBinding Padding}"
                                                                      Content="{TemplateBinding Content}"
                                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                      ContentTransitions="{TemplateBinding ContentTransitions}"
                                                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GroupStyle.HeaderContainerStyle>
                        </GroupStyle>
                    </GridView.GroupStyle>
                    <GridView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ItemsWrapGrid Orientation="Horizontal" ItemWidth="66.8" ItemHeight="66.8"/>
                        </ItemsPanelTemplate>
                    </GridView.ItemsPanel>
                    <GridView.ItemTemplate>
                        <DataTemplate>
                            <Image Margin="2" Source="{Binding Converter={StaticResource DefaultPhotoConverter}, ConverterParameter=thumbnail}"/>
                        </DataTemplate>
                    </GridView.ItemTemplate>
                    <GridView.ItemContainerStyle>
                        <Style TargetType="GridViewItem">
                            <Setter Property="Margin" Value="0"/>
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                        </Style>
                    </GridView.ItemContainerStyle>
                    <GridView.ItemContainerTransitions>
                        <TransitionCollection/>
                    </GridView.ItemContainerTransitions>
                </GridView>
                <ListView ItemsSource="{Binding StickerSets}"
                          Height="{ThemeResource AppBarThemeCompactHeight}"
                          ScrollViewer.HorizontalScrollBarVisibility="Auto"
                          ScrollViewer.HorizontalScrollMode="Auto"
                          ScrollViewer.VerticalScrollBarVisibility="Disabled"
                          ScrollViewer.VerticalScrollMode="Disabled"
                          Grid.Row="2">
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ItemsStackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Margin" Value="0"/>
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                            <Setter Property="Width" Value="{ThemeResource AppBarThemeCompactHeight}"/>
                            <Setter Property="Height" Value="{ThemeResource AppBarThemeCompactHeight}"/>
                            <Setter Property="MinWidth" Value="0"/>
                            <Setter Property="MinHeight" Value="0"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Image Margin="4" Source="{Binding [0], Converter={StaticResource DefaultPhotoConverter}, ConverterParameter=thumbnail}"/>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.Header>
                        <StackPanel Orientation="Horizontal">
                            <controls:GlyphButton Glyph="&#xE608;" FontFamily="{ThemeResource TelegramThemeFontFamily}"/>
                            <controls:GlyphButton Glyph="&#xE82F;"/>
                        </StackPanel>
                    </ListView.Header>
                    <ListView.Footer>
                        <StackPanel Orientation="Horizontal">
                            <controls:GlyphButton Glyph="&#xE82F;"/>
                            <controls:GlyphButton Glyph="&#xE115;"/>
                        </StackPanel>
                    </ListView.Footer>
                </ListView>
            </Grid>
        </Grid>

        <!-- Input pane -->
        <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" 
              MinHeight="{ThemeResource AppBarThemeCompactHeight}"
              BorderThickness="0,0,0,0"
              BorderBrush="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}"
              Grid.Row="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition x:Name="KeyboardPlaceholder" Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid Visibility="{Binding ReplyInfo, Converter={StaticResource NullToVisibilityConverter}}" Grid.ColumnSpan="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="48"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <!-- ContentTemplateSelector="{StaticResource ReplyTemplateSelector}" Visibility="{Binding ReplyVisibility}" BorderBrush="#2fa9e2" Foreground="#0e7acd" Style="{StaticResource MediaControlStyle}" -->

                <controls:MessageReference Message="{Binding ReplyInfo}" VerticalAlignment="Center" Margin="-8,0,0,0" Grid.Column="1"/>

                <Border Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
                    <FontIcon Glyph="{Binding ReplyInfo, Converter={StaticResource ReplyInfoToGlyphConverter}}" Foreground="#0e7acd"/>
                </Border>

                <controls:GlyphButton Command="{Binding ClearReplyCommand}" AllowFocusOnInteraction="False" Glyph="&#xE106;" FontSize="16" Grid.Column="2"/>
            </Grid>
            <!-- Message input -->
            <controls:BubbleTextBox
                x:Name="txtMessage" 
                x:Uid="Chat-Input-Message"
                Background="Transparent"
                Text="{Binding Text, Mode=TwoWay}"
                Reply="{Binding Reply}"
                AcceptsReturn="False"
                PlaceholderText="Type your message..."
                BorderThickness="0" 
                Padding="48,13,0,12" 
                TextWrapping="Wrap" 
                InputScope="Text" 
                IsSpellCheckEnabled="True"
                VerticalAlignment="Bottom" 
                VerticalContentAlignment="Bottom"
                MinHeight="48"
                MaxHeight="96"
                TextChanging="txtMessage_TextChanging"
                Grid.ColumnSpan="2"
                Grid.Row="1"/>
            <!-- Send-button -->
            <!--<Button x:Name="btnSendMessage"  
                 Visibility="Collapsed"
                 IsEnabled="True"
                 Width="48"
                 MinHeight="48" 
                 IsTabStop="False"
                 Foreground="{ThemeResource TelegramBackgroundAccentBrush}"                                      
                 VerticalAlignment="Stretch"
                 ScrollViewer.VerticalScrollBarVisibility="Disabled"
                 Click="btnSendMessage_Click"
                 Grid.Column="3"
                 Grid.Row="1">
                 <Button.Content>
                 <TextBlock FontFamily="Segoe MDL2 Assets" 
                 FontSize="20"
                 Text="&#xE122;"
                 RequestedTheme="Dark"/>
                 </Button.Content>
                 </Button>-->

            <Grid Visibility="{Binding ReplyInfo, Converter={StaticResource EditToVisibilityConverter}, ConverterParameter=invert}" Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <controls:GlyphButton x:Name="btnStickers" 
                                      Command="{Binding SendCommand}"
                                      CommandParameter="ciao"
                                      AllowFocusOnInteraction="False"
                                      Glyph="&#xE606;" 
                                      FontFamily="{ThemeResource TelegramThemeFontFamily}" 
                                      VerticalAlignment="Bottom"/>

                <Border Visibility="{Binding HardwareService.IsMicrophoneAvailable, Converter={StaticResource BooleanToVisibilityConverter}, Source={StaticResource Locator}}" VerticalAlignment="Bottom" Grid.Column="1">
                    <controls:VoiceButton x:Name="btnVoiceMessage"
                                          AllowFocusOnInteraction="False"
                                          Glyph="&#xE720;"/>
                </Border>

                <controls:GlyphButton x:Name="btnSendMessage"
                                      VerticalAlignment="Bottom"
                                      Click="btnSendMessage_Click"
                                      Glyph="&#xE725;" 
                                      AllowFocusOnInteraction="False"
                                      FontSize="24"
                                      Foreground="{ThemeResource TelegramBackgroundAccentBrush}" 
                                      Padding="4,0,0,0"
                                      Grid.Column="1"/>
            </Grid>

            <controls:GlyphButton x:Name="btnEditMessage"
                                      VerticalAlignment="Bottom"
                                      Click="btnSendMessage_Click"
                                      Glyph="&#xE10B;" 
                                      AllowFocusOnInteraction="False"
                                      Visibility="{Binding ReplyInfo, Converter={StaticResource EditToVisibilityConverter}}"
                                      FontSize="24"
                                      Foreground="{ThemeResource TelegramBackgroundAccentBrush}" 
                                      Padding="4,0,0,0"
                                      Grid.Column="3"
                                      Grid.Row="1"/>

            <controls:GlyphButton x:Name="Attach" Click="Attach_Click" Glyph="&#xE16C;" AllowFocusOnInteraction="False" VerticalAlignment="Bottom" Grid.Row="1">
                <FlyoutBase.AttachedFlyout>
                    <MenuFlyout Placement="Top">
                        <MenuFlyoutItem Style="{StaticResource IconMenuFlyoutItem}"
                                        x:Uid="FCBTN-PhotoOrVideo"
                                        Tag="&#xEB9F;"
                                        Text="Photo or video"
                                        Command="{Binding SendPhotoCommand}"/>
                        <MenuFlyoutItem Style="{StaticResource IconMenuFlyoutItem}"
                                        x:Uid="FCBTN-File"
                                        IsEnabled="False"
                                        Text="File"
                                        Tag="&#xE160;"/>
                        <MenuFlyoutItem Style="{StaticResource IconMenuFlyoutItem}"
                                        x:Uid="FCBTN-Location"
                                        IsEnabled="False"
                                        Text="Location" 
                                        Tag="&#xE1C4;"/>
                        <MenuFlyoutItem Style="{StaticResource IconMenuFlyoutItem}"
                                        x:Uid="FCBTN-Contact"
                                        IsEnabled="False"
                                        Text="Contact"
                                        Tag="&#xE136;"/>
                        <MenuFlyout.MenuFlyoutPresenterStyle>
                            <Style TargetType="MenuFlyoutPresenter">
                                <Setter Property="Background" Value="{ThemeResource ApplicationPageBackgroundThemeBrush}" />
                                <Setter Property="BorderBrush" Value="{ThemeResource TelegramBackgroundAccentBrush}" />
                                <Setter Property="BorderThickness" Value="{ThemeResource FlyoutBorderThemeThickness}" />
                                <Setter Property="Padding" Value="{ThemeResource MenuFlyoutPresenterThemePadding}" />
                                <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
                                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                                <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
                                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                                <Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False" />
                                <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="False" />
                                <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
                                <Setter Property="MaxWidth" Value="{ThemeResource FlyoutThemeMaxWidth}" />
                                <Setter Property="MinHeight" Value="{ThemeResource MenuFlyoutThemeMinHeight}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="MenuFlyoutPresenter">
                                            <Grid Background="{TemplateBinding Background}">
                                                <ScrollViewer x:Name="MenuFlyoutPresenterScrollViewer"
                                                              Padding="{TemplateBinding Padding}"
                                                              Margin="{TemplateBinding BorderThickness}"
                                                              MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.FlyoutContentMinWidth}"
                                                              HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                                              HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                              VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                                              VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                                              IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                                                              IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                                                              ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}"
                                                              AutomationProperties.AccessibilityView="Raw">
                                                    <ItemsPresenter Margin="0,0,0,8">
                                                        <ItemsPresenter.Header>
                                                            <controls:AttachPickerFlyout ItemClick="AttachPickerFlyout_ItemClick"/>
                                                        </ItemsPresenter.Header>
                                                    </ItemsPresenter>
                                                </ScrollViewer>
                                                <Border x:Name="MenuFlyoutPresenterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </MenuFlyout.MenuFlyoutPresenterStyle>
                    </MenuFlyout>
                </FlyoutBase.AttachedFlyout>
            </controls:GlyphButton>

            <ScrollViewer x:Name="ReplyMarkupViewer"
                          VerticalScrollBarVisibility="Auto"
                          VerticalScrollMode="Auto"
                          HorizontalScrollBarVisibility="Disabled"
                          HorizontalScrollMode="Disabled"
                          Grid.ColumnSpan="4"
                          Grid.Row="2">
                <controls:ReplyMarkupPanel IsInline="False" ReplyMarkup="{Binding ReplyMarkup}" ButtonClick="ReplyMarkup_ButtonClick" Margin="4,0"/>
            </ScrollViewer>

            <Border BorderThickness="0,1,0,0" VerticalAlignment="Top" IsHitTestVisible="False" BorderBrush="{ThemeResource SystemControlForegroundBaseLowBrush}" Grid.ColumnSpan="4"/>
        </Grid>
    </Grid>
</Page>
