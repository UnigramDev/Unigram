<local:HostedPage
    x:Class="Unigram.Views.ChatView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Unigram.Views"
    xmlns:common="using:Unigram.Common"
    xmlns:controls="using:Unigram.Controls"
    xmlns:chats="using:Unigram.Controls.Chats"
    xmlns:messages="using:Unigram.Controls.Messages"
    xmlns:selectors="using:Unigram.Selectors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Loaded="OnLoaded"
    Unloaded="OnUnloaded"
    SizeChanged="OnSizeChanged">

    <!--<Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition>
                <SuppressNavigationTransitionInfo />
            </NavigationThemeTransition>
        </TransitionCollection>
    </Page.Transitions>-->

    <UserControl.Resources>
        <x:Double x:Key="MenuFlyoutMaxWidth">360</x:Double>

        <Style x:Key="AutocompleteListViewStyle" TargetType="ListView">
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="TabNavigation" Value="Once" />
            <Setter Property="IsSwipeEnabled" Value="True" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
            <Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False" />
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled" />
            <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True" />
            <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
            <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True" />
            <Setter Property="UseSystemFocusVisuals" Value="True" />
            <Setter Property="ItemContainerTransitions">
                <Setter.Value>
                    <TransitionCollection>
                        <AddDeleteThemeTransition />
                        <ContentThemeTransition />
                        <ReorderThemeTransition />
                        <EntranceThemeTransition IsStaggeringEnabled="False" />
                    </TransitionCollection>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <ItemsStackPanel Orientation="Vertical" />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListView">
                        <ScrollViewer x:Name="ScrollViewer"
                                      TabNavigation="{TemplateBinding TabNavigation}"
                                      HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}"
                                      VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                      IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}"
                                      IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                                      IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                                      ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}"
                                      IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                      BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
                                      AutomationProperties.AccessibilityView="Raw">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Margin="{TemplateBinding Padding}">
                                <ItemsPresenter Header="{TemplateBinding Header}"
                                                HeaderTemplate="{TemplateBinding HeaderTemplate}"
                                                HeaderTransitions="{TemplateBinding HeaderTransitions}"
                                                Footer="{TemplateBinding Footer}"
                                                FooterTemplate="{TemplateBinding FooterTemplate}"
                                                FooterTransitions="{TemplateBinding FooterTransitions}" />
                            </Border>
                        </ScrollViewer>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Name="BubbleListViewStyle" TargetType="ListView">
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="TabNavigation" Value="Once" />
            <Setter Property="IsSwipeEnabled" Value="True" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
            <Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False" />
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled" />
            <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True" />
            <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
            <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True" />
            <Setter Property="UseSystemFocusVisuals" Value="True" />
            <Setter Property="ItemContainerTransitions">
                <Setter.Value>
                    <TransitionCollection>
                        <AddDeleteThemeTransition />
                        <ContentThemeTransition />
                        <ReorderThemeTransition />
                        <EntranceThemeTransition IsStaggeringEnabled="False" />
                    </TransitionCollection>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <ItemsStackPanel Orientation="Vertical" />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListView">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer x:Name="ScrollViewer"
                                          ViewChanged="OnViewChanged"
                                          TabNavigation="{TemplateBinding TabNavigation}"
                                          HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                          IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}"
                                          VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                          IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}"
                                          IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                                          IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                                          ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}"
                                          IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                          BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
                                          AutomationProperties.AccessibilityView="Raw">
                                <ItemsPresenter Header="{TemplateBinding Header}"
                                                HeaderTemplate="{TemplateBinding HeaderTemplate}"
                                                HeaderTransitions="{TemplateBinding HeaderTransitions}"
                                                Footer="{TemplateBinding Footer}"
                                                FooterTemplate="{TemplateBinding FooterTemplate}"
                                                FooterTransitions="{TemplateBinding FooterTransitions}"
                                                Padding="{TemplateBinding Padding}" />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CloseButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
            <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
            <Setter Property="Content" Value="&#xE700;" />
            <Setter Property="Height" Value="44" />
            <Setter Property="Width" Value="44" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundListLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundListMediumBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundBaseLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <TextBlock
                                x:Name="ContentPresenter"
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                AutomationProperties.AccessibilityView="Raw"
                                Text="&#xE10A;"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="EmptyMessageTemplate"/>

        <!-- Region Service -->

        <DataTemplate x:Key="ServiceMessagePhotoTemplate">
            <StackPanel Margin="0,8,0,4">
                <messages:MessageService x:Name="Service" Click="ServiceMessage_Click" Style="{StaticResource ServiceButtonStyle}">
                    <TextBlock Foreground="White" TextAlignment="Center" FontFamily="{ThemeResource EmojiThemeFontFamily}" Style="{StaticResource CaptionTextBlockStyle}"/>
                </messages:MessageService>

                <Border Width="120" Height="120" CornerRadius="12" Background="Black" Margin="0,6,0,0">
                    <Image x:Name="Photo" Width="120" Height="120"/>
                </Border>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="ServiceMessageTemplate">
            <messages:MessageService Click="ServiceMessage_Click" Margin="0,8,0,4" Style="{StaticResource ServiceButtonStyle}">
                <TextBlock Foreground="White" TextAlignment="Center" FontFamily="{ThemeResource EmojiThemeFontFamily}" Style="{StaticResource CaptionTextBlockStyle}"/>
            </messages:MessageService>
        </DataTemplate>

        <DataTemplate x:Key="ServiceMessageUnreadTemplate">
            <Grid AutomationProperties.Name="{CustomResource UnreadMessages}" Margin="-12,8,-12,4" Background="{ThemeResource MessageBackgroundBrush}">
                <TextBlock Text="{CustomResource UnreadMessages}" Padding="0" Margin="0,4" TextAlignment="Center" Style="{StaticResource SettingsGroupTextBlockStyle}"/>

                <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}"
                          Glyph="&#xE0E5;"
                          FontSize="12"
                          HorizontalAlignment="Right"
                          VerticalAlignment="Center"
                          Margin="0,2,18,0"/>
            </Grid>
        </DataTemplate>

        <!-- EndRegion -->

        <DataTemplate x:Key="UserMessageTemplate">
            <messages:MessageBubble x:Name="Bubble" HorizontalAlignment="Right">
                <FrameworkElement.Resources>
                    <ResourceDictionary Source="ms-appx:///Themes/OutgoingOverride.xaml"/>
                </FrameworkElement.Resources>
            </messages:MessageBubble>
        </DataTemplate>

        <DataTemplate x:Key="FriendMessageTemplate">
            <Grid HorizontalAlignment="{ThemeResource MessageHorizontalAlignment}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <messages:MessageBubble x:Name="Bubble"/>

                <Border x:Name="Action"
                        Background="{ThemeResource MessageServiceBackgroundBrush}"
                        VerticalAlignment="Bottom"
                        CornerRadius="15"
                        Margin="8,0,0,0"
                        Grid.Column="2">
                    <controls:GlyphButton
                        Click="Action_Click"
                        Foreground="{ThemeResource MessageServiceForegroundBrush}"
                        Style="{StaticResource RoundGlyphButtonStyle}"
                        FontSize="14"
                        Width="30"
                        Height="30"
                        Radius="15"/>
                </Border>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="ChatFriendMessageTemplate">
            <Grid HorizontalAlignment="{ThemeResource MessageHorizontalAlignment}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="38"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <controls:ProfilePicture x:Name="Photo"
                                         Click="Participant_Click"
                                         IsTabStop="False"
                                         HorizontalAlignment="Left"
                                         VerticalAlignment="Bottom"
                                         Margin="0,0,0,0"
                                         Width="30"
                                         Height="30"/>
                <messages:MessageBubble x:Name="Bubble" Grid.Column="1"/>

                <Border x:Name="Action"
                        Background="{ThemeResource MessageServiceBackgroundBrush}"
                        VerticalAlignment="Bottom"
                        CornerRadius="15"
                        Margin="8,0,0,0"
                        Grid.Column="2">
                    <controls:GlyphButton
                        Click="Action_Click"
                        Foreground="{ThemeResource MessageServiceForegroundBrush}"
                        Style="{StaticResource RoundGlyphButtonStyle}"
                        FontSize="14"
                        Width="30"
                        Height="30"
                        Radius="15"/>
                </Border>
            </Grid>
        </DataTemplate>
    </UserControl.Resources>

    <local:HostedPage.Header>
        <controls:ContentPageHeader x:Name="Header" Canvas.ZIndex="1">
            <Grid x:Name="InfoPanel" Margin="12,0,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <controls:ProfilePicture
                    x:Name="Photo"
                    Click="Photo_Click"
                    AutomationProperties.Name="{CustomResource AccDescrProfilePicture}"
                    Width="{ThemeResource ChatPhotoSize}"
                    Height="{ThemeResource ChatPhotoSize}"
                    Margin="0,0,12,0"/>

                <controls:SimpleHyperlinkButton
                    x:Name="Profile"
                    Click="Profile_Click"
                    Grid.Column="1">
                    <HyperlinkButton.Content>
                        <Grid VerticalAlignment="Center" Margin="0,-2,0,2" Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="TypeIcon"
                                Text="&#xE125;"
                                FontFamily="{StaticResource SymbolThemeFontFamily}"
                                Foreground="{ThemeResource SystemControlForegroundBaseMediumBrush}"
                                VerticalAlignment="Bottom"
                                FontSize="16"
                                Margin="0,0,4,1"/>

                            <TextBlock
                                x:Name="Title"
                                Foreground="{ThemeResource PageHeaderForegroundBrush}"
                                Style="{StaticResource BaseTextBlockStyle}"
                                FontFamily="{ThemeResource EmojiThemeFontFamily}"
                                TextWrapping="NoWrap"
                                TextTrimming="CharacterEllipsis"
                                MaxLines="1"
                                Grid.Column="1"/>

                            <Grid Visibility="{x:Bind ViewModel.LastSeen, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}" Grid.ColumnSpan="2" Grid.Row="1">
                                <TextBlock x:Name="Subtitle"
                                            Text="{x:Bind ViewModel.Subtitle, Mode=OneWay}"
                                            Foreground="{ThemeResource PageHeaderDisabledBrush}"
                                            Style="{StaticResource CaptionTextBlockStyle}"
                                            TextWrapping="NoWrap"
                                            TextTrimming="CharacterEllipsis"/>
                                <StackPanel x:Name="ChatActionPanel" Orientation="Horizontal" Visibility="Collapsed">
                                    <chats:ChatActionIndicator x:Name="ChatActionIndicator"
                                                                Fill="{ThemeResource PageHeaderHighlightBrush}"
                                                                VerticalAlignment="Bottom"
                                                                Margin="0,0,0,-2"/>
                                    <TextBlock x:Name="ChatActionLabel"
                                                TextWrapping="NoWrap"
                                                TextTrimming="CharacterEllipsis"
                                                Foreground="{ThemeResource PageHeaderHighlightBrush}"
                                                FontFamily="{ThemeResource EmojiThemeFontFamily}"
                                                Style="{StaticResource CaptionTextBlockStyle}"
                                                VerticalAlignment="Top"/>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </HyperlinkButton.Content>
                </controls:SimpleHyperlinkButton>

                <controls:GlyphButton
                    x:Name="VideoCall"
                    Visibility="Collapsed"
                    Command="{x:Bind ViewModel.CallCommand}"
                    Style="{StaticResource HeaderGlyphButtonStyle}"
                    Glyph="&#xE714;"
                    FontSize="20"
                    AutomationProperties.Name="{CustomResource VideoCall}"
                    ToolTipService.ToolTip="{CustomResource VideoCall}"
                    Grid.Column="2">
                    <Button.CommandParameter>
                        <x:Boolean>True</x:Boolean>
                    </Button.CommandParameter>
                </controls:GlyphButton>

                <controls:GlyphButton
                    x:Name="Call"
                    Visibility="Collapsed"
                    Command="{x:Bind ViewModel.CallCommand}"
                    Style="{StaticResource HeaderGlyphButtonStyle}"
                    Glyph="&#xE13A;"
                    AutomationProperties.Name="{CustomResource Call}"
                    ToolTipService.ToolTip="{CustomResource Call}"
                    Grid.Column="3">
                    <Button.CommandParameter>
                        <x:Boolean>False</x:Boolean>
                    </Button.CommandParameter>
                </controls:GlyphButton>

                <controls:GlyphButton
                    Command="{x:Bind ViewModel.SearchCommand}"
                    Style="{StaticResource HeaderGlyphButtonStyle}"
                    Glyph="&#xE721;"
                    AutomationProperties.Name="{CustomResource Search}"
                    ToolTipService.ToolTip="{CustomResource Search}"
                    Grid.Column="4"/>

                <Button x:Name="Options"
                        Click="Menu_ContextRequested"
                        Foreground="{ThemeResource PageHeaderForegroundBrush}"
                        Padding="{StaticResource EllipsisButtonPadding}"
                        Style="{StaticResource EllipsisButton}"
                        AutomationProperties.Name="{CustomResource AccDescrMoreOptions}"
                        ToolTipService.ToolTip="{CustomResource AccDescrMoreOptions}"
                        Grid.Column="5">
                    <FontIcon x:Name="EllipsisIcon"
                                VerticalAlignment="Center"
                                FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                FontSize="16"
                                Glyph="&#xE10C;"
                                Height="{ThemeResource AppBarExpandButtonCircleDiameter}" />
                </Button>
            </Grid>
        </controls:ContentPageHeader>
    </local:HostedPage.Header>

    <Grid x:Name="LayoutRoot"
          Background="Transparent"
          AllowDrop="True"
          DragOver="OnDragOver"
          Drop="OnDrop">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="NarrowState">
                    <VisualState.Setters>
                        <Setter Target="StickersPanel.Height" Value="300"/>
                        <Setter Target="StickersPanel.MinHeight" Value="260"/>
                        <Setter Target="StickersPanel.MaxHeight" Value="360"/>
                        <Setter Target="StickersPanel.Margin" Value="0"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="SidebarState">
                    <VisualState.Setters>
                        <Setter Target="KeyboardItems.(Grid.Column)" Value="1"/>
                        <Setter Target="KeyboardItems.(Grid.Row)" Value="0"/>
                        <Setter Target="KeyboardItems.(Grid.RowSpan)" Value="5"/>
                        <Setter Target="StickersPanel.Width" Value="320"/>
                        <Setter Target="StickersPanel.Height" Value="Auto"/>
                        <Setter Target="StickersPanel.MinHeight" Value="0"/>
                        <Setter Target="StickersPanel.MaxHeight" Value="3600"/>
                        <Setter Target="StickersPanel.Margin" Value="0"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="FilledState">
                    <VisualState.Setters>
                        <Setter Target="KeyboardItems.(Grid.Row)" Value="2"/>
                        <!--<Setter Target="KeyboardItems.VerticalAlignment" Value="Bottom"/>-->
                        <Setter Target="StickersPanel.Height" Value="Auto"/>
                        <Setter Target="StickersPanel.MinHeight" Value="0"/>
                        <Setter Target="StickersPanel.MaxHeight" Value="3600"/>
                        <Setter Target="StickersPanel.Margin" Value="0,48,0,0"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="500"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Show.Width" Value="376*"/>
                        <Setter Target="Show.MaxWidth" Value="376"/>
                        <Setter Target="Hide.Width" Value="*"/>
                        <!--<Setter Target="BackgroundElement.BorderThickness" Value="1"/>
                             <Setter Target="BackgroundElement.Margin" Value="8"/>-->
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto"/>
            <RowDefinition x:Name="KeyboardPlaceholder" Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <chats:ChatBackgroundPresenter x:Name="BackgroundPresenter" x:DeferLoadStrategy="Lazy" Grid.RowSpan="5"/>

        <Grid Padding="0,0,0,8" VerticalAlignment="Bottom" Grid.RowSpan="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="Show"/>
                <ColumnDefinition x:Name="Hide" Width="0"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="FlyoutArea" MinHeight="{ThemeResource TelegramToolBarHeight}"/>
        </Grid>

        <Grid x:Name="Clipper" Canvas.ZIndex="2" Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <messages:MessagePinned
                x:Name="PinnedMessage"
                Click="Reply_Click"
                HideCommand="{x:Bind ViewModel.PinnedHideCommand}"
                ListCommand="{x:Bind ViewModel.PinnedListCommand}"
                Visibility="Collapsed"/>

            <Grid 
                x:Name="CallbackQueryAnswerPanel"
                Visibility="{x:Bind ViewModel.InformativeMessage, Converter={StaticResource NullToVisibilityConverter}, Mode=OneWay}"
                Background="{ThemeResource PageSubHeaderBackgroundBrush}"
                MinHeight="{ThemeResource AppBarThemeCompactHeight}">
                <messages:MessageReference
                    x:Name="CallbackQueryAnswer"
                    VerticalAlignment="Stretch"
                    Margin="0"
                    Padding="12,6"
                    IsHitTestVisible="False"/>
            </Grid>

            <Grid
                x:Name="ActionBar"
                Background="{ThemeResource PageSubHeaderBackgroundBrush}"
                Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="48"/>
                </Grid.ColumnDefinitions>

                <Grid x:Name="ActionBarRoot">

                </Grid>

                <controls:GlyphButton Command="{x:Bind ViewModel.RemoveActionBarCommand}" Glyph="&#xE10A;" FontSize="16" Height="32" Grid.Column="1"/>
            </Grid>

            <StackPanel x:Name="DateHeaderRelative" Grid.Row="2">
                <Border x:Name="DateHeaderPanel"
                        Visibility="Collapsed"
                        HorizontalAlignment="Center"
                        SizeChanged="DateHeaderPanel_SizeChanged">
                    <messages:MessageService x:Name="DateHeader" Click="Date_Click" BorderThickness="0,8,0,0" Style="{StaticResource ServiceButtonStyle}">
                        <TextBlock x:Name="DateHeaderLabel" Text="31 dicembre 2017" Foreground="White" TextAlignment="Center" Style="{StaticResource CaptionTextBlockStyle}"/>
                    </messages:MessageService>
                </Border>
            </StackPanel>
        </Grid>

        <Grid x:Name="ContentPanel" SizeChanged="ContentPanel_SizeChanged" Grid.Row="2">
            <chats:ChatListView x:Name="Messages"
                                Style="{StaticResource BubbleListViewStyle}"
                                ItemContainerTransitions="{x:Null}"
                                ItemsSource="{x:Bind ViewModel.Items}"
                                ShowsScrollingPlaceholders="False"
                                IsItemClickEnabled="{x:Bind ConvertClickEnabled(ViewModel.SelectionMode), Mode=OneWay}"
                                ItemClick="List_ItemClick"
                                SelectionMode="{x:Bind ViewModel.SelectionMode, Mode=TwoWay}"
                                SelectionChanged="List_SelectionChanged"
                                ChoosingItemContainer="OnChoosingItemContainer"
                                ContainerContentChanging="OnContainerContentChanging"
                                Padding="0,0,0,6"
                                Grid.ColumnSpan="2">
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <ItemsStackPanel Loading="ItemsStackPanel_Loading"
                                         SizeChanged="OnViewSizeChanged"
                                         ItemsUpdatingScrollMode="KeepItemsInView"
                                         VerticalAlignment="Bottom" />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemContainerStyleSelector>
                    <selectors:MessageStyleSelector>
                        <selectors:MessageStyleSelector.MessageStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
                                <Setter Property="TabNavigation" Value="Local"/>
                                <Setter Property="IsHoldingEnabled" Value="True"/>
                                <Setter Property="Padding" Value="12,0,12,0"/>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                                <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
                                <Setter Property="MinHeight" Value="0"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListViewItem">
                                            <ListViewItemPresenter
                                                x:Name="Presenter"
                                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                                SelectionCheckMarkVisualEnabled="True"
                                                CheckBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                                                CheckBoxBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                                                DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
                                                DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
                                                FocusBorderBrush="{ThemeResource SystemControlForegroundAltHighBrush}"
                                                FocusSecondaryBorderBrush="{ThemeResource SystemControlForegroundBaseHighBrush}"
                                                PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"
                                                PointerOverBackground="Transparent"
                                                PointerOverForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}"
                                                SelectedBackground="{ThemeResource SystemControlHighlightListAccentLowBrush}"
                                                SelectedForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}"
                                                SelectedPointerOverBackground="{ThemeResource SystemControlHighlightListAccentMediumBrush}"
                                                PressedBackground="Transparent"
                                                SelectedPressedBackground="{ThemeResource SystemControlHighlightListAccentHighBrush}"
                                                DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                                DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                                                ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                ContentMargin="{TemplateBinding Padding}"
                                                CheckMode="Inline"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </selectors:MessageStyleSelector.MessageStyle>
                        <selectors:MessageStyleSelector.ServiceStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
                                <Setter Property="TabNavigation" Value="Local"/>
                                <Setter Property="IsHoldingEnabled" Value="True"/>
                                <Setter Property="Padding" Value="12,0,12,0"/>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                                <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
                                <Setter Property="MinHeight" Value="0"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListViewItem">
                                            <ListViewItemPresenter
                                                x:Name="Presenter"
                                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                                SelectionCheckMarkVisualEnabled="False"
                                                CheckBrush="{x:Null}"
                                                CheckBoxBrush="{x:Null}"
                                                DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
                                                DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
                                                FocusBorderBrush="{ThemeResource SystemControlForegroundAltHighBrush}"
                                                FocusSecondaryBorderBrush="{ThemeResource SystemControlForegroundBaseHighBrush}"
                                                PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"
                                                PointerOverBackground="Transparent"
                                                PointerOverForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}"
                                                SelectedBackground="Transparent"
                                                SelectedForeground="{ThemeResource SystemControlForegroundBaseHighBrush}"
                                                SelectedPointerOverBackground="{ThemeResource SystemControlHighlightListLowBrush}"
                                                PressedBackground="Transparent"
                                                SelectedPressedBackground="{ThemeResource SystemControlHighlightListMediumBrush}"
                                                DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                                DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                                                ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                ContentMargin="{TemplateBinding Padding}"
                                                CheckMode="Overlay"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </selectors:MessageStyleSelector.ServiceStyle>
                    </selectors:MessageStyleSelector>
                </ListView.ItemContainerStyleSelector>
                <ListView.Header>
                    <Grid Padding="0,48,0,0">
                        <!--<Grid.RowDefinitions>
                             <RowDefinition/>
                             <RowDefinition Height="Auto"/>
                             </Grid.RowDefinitions>
                             <StackPanel x:Name="BotInfoPanel"
                             Visibility="Collapsed"
                             Padding="{ThemeResource MessageContentPadding}"
                             Background="{ThemeResource MessageBackgroundBrush}"
                             BorderBrush="{ThemeResource MessageBorderBrush}"
                             BorderThickness="0,0,0,2"
                             VerticalAlignment="Center"
                             MaxWidth="360"
                             Margin="12,12,12,8">
                             <TextBlock Text="What can this bot do?" Style="{StaticResource BaseTextBlockStyle}"/>
                             <TextBlock Style="{StaticResource BodyTextBlockStyle}"/>
                             </StackPanel>-->
                        <Border Height="4" Grid.Row="1"/>
                    </Grid>
                </ListView.Header>
            </chats:ChatListView>

            <Border x:Name="Yolo2" x:Load="False" Visibility="Collapsed" Background="{ThemeResource MessageServiceBackgroundBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="12,5,12,7" Margin="12" CornerRadius="{ThemeResource MessageServiceCornerRadius}">
                <TextBlock x:Name="EmptyLabel" Foreground="White" Style="{StaticResource CaptionTextBlockStyle}"/>
            </Border>

            <StackPanel x:Name="Yolo1" x:Load="False" Visibility="Collapsed" Background="{ThemeResource MessageServiceBackgroundBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="12,6,12,6" Margin="12" CornerRadius="{ThemeResource MessageServiceCornerRadius}">
                <FontIcon Glyph="&#xE753;" Foreground="White" FontSize="64"/>
                <TextBlock Text="{CustomResource ChatYourSelfTitle}" Foreground="White" Style="{StaticResource BaseTextBlockStyle}"/>
                <TextBlock Foreground="White" Style="{StaticResource BodyTextBlockStyle}">
                    <Run Text="•"/>
                    <Run Text="{CustomResource ChatYourSelfDescription1}"/>
                    <LineBreak/>
                    <Run Text="•"/>
                    <Run Text="{CustomResource ChatYourSelfDescription2}"/>
                    <LineBreak/>
                    <Run Text="•"/>
                    <Run Text="{CustomResource ChatYourSelfDescription3}"/>
                    <LineBreak/>
                    <Run Text="•"/>
                    <Run Text="{CustomResource ChatYourSelfDescription4}"/>
                </TextBlock>
            </StackPanel>

            <!--<Border Visibility="{x:Bind (Visibility)ViewModel.IsEmpty, Mode=OneWay}" HorizontalAlignment="Center" VerticalAlignment="Center" CornerRadius="18">
                 <ProgressRing Width="36" Height="36" IsActive="{x:Bind ViewModel.IsEmpty, Mode=OneWay}" Foreground="White" Background="{StaticResource MessageServiceBackgroundBrush}" Style="{StaticResource SkypeProgressRingStyle}"/>
                 </Border>-->

            <StackPanel VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,6">
                <StackPanel x:Name="MentionsPanel" Visibility="Collapsed" RightTapped="Mentions_RightTapped">
                    <Border Background="{ThemeResource ChatUnreadBadgeBrush}"
                            MinWidth="20"
                            Height="20"
                            CornerRadius="10"
                            HorizontalAlignment="Center"
                            Margin="0,0,0,-12"
                            IsHitTestVisible="False"
                            Canvas.ZIndex="1">
                        <TextBlock x:Name="Mentions"
                                   Style="{StaticResource CaptionTextBlockStyle}"
                                   Foreground="{ThemeResource ChatUnreadLabelBrush}"
                                   TextAlignment="Center"
                                   Margin="4,2,4,0"/>
                    </Border>
                    <Grid Margin="12,6">
                        <Ellipse x:Name="ArrowMentionsShadow" Fill="{ThemeResource ApplicationPageBackgroundThemeBrush}" Width="36" Height="36"/>
                        <Border Background="{ThemeResource PageSubHeaderBackgroundBrush}"
                                CornerRadius="18"
                                Height="36"
                                Width="36">
                            <controls:GlyphButton
                                Command="{x:Bind ViewModel.NextMentionCommand}"
                                FontFamily="{ThemeResource ContentControlThemeFontFamily}"
                                FontSize="20"
                                Width="36"
                                Height="36"
                                Glyph="@"
                                Radius="24"
                                Padding="0,0,0,4"
                                AutomationProperties.Name="{CustomResource AccDescrMentionDown}"
                                ToolTipService.ToolTip="{CustomResource AccDescrMentionDown}"
                                Style="{StaticResource RoundGlyphButtonStyle}"/>
                        </Border>
                    </Grid>
                </StackPanel>

                <StackPanel x:Name="Arrow" SizeChanged="Arrow_SizeChanged" Visibility="Collapsed">
                    <Border Background="{ThemeResource ChatUnreadBadgeBrush}"
                            Visibility="{x:Bind ViewModel.UnreadCount, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"
                            MinWidth="20"
                            Height="20"
                            CornerRadius="10"
                            HorizontalAlignment="Center"
                            Margin="0,6,0,-12"
                            IsHitTestVisible="False"
                            Canvas.ZIndex="1">
                        <TextBlock x:Name="UnreadCount"
                                   Text="{x:Bind ViewModel.UnreadCount, Mode=OneWay}"
                                   Style="{StaticResource CaptionTextBlockStyle}"
                                   Foreground="{ThemeResource ChatUnreadLabelBrush}"
                                   TextAlignment="Center"
                                   Margin="4,2,4,0"/>
                    </Border>
                    <Grid Margin="12,6">
                        <Ellipse x:Name="ArrowShadow" Fill="{ThemeResource ApplicationPageBackgroundThemeBrush}" Width="36" Height="36"/>
                        <Border Background="{ThemeResource PageSubHeaderBackgroundBrush}"
                                CornerRadius="18"
                                Height="36"
                                Width="36">
                            <controls:GlyphButton
                                Command="{x:Bind ViewModel.PreviousSliceCommand}"
                                RightTapped="Arrow_RightTapped"
                                FontSize="16"
                                Width="36"
                                Height="36"
                                Glyph="&#xE74B;"
                                Radius="24"
                                AutomationProperties.Name="{CustomResource AccDescrPageDown}"
                                ToolTipService.ToolTip="{CustomResource AccDescrPageDown}"
                                Style="{StaticResource RoundGlyphButtonStyle}"/>
                        </Border>
                    </Grid>
                </StackPanel>
            </StackPanel>

            <Grid x:Name="InlinePanel"
                  SizeChanged="InlinePanel_SizeChanged"
                  VerticalAlignment="Bottom"
                  Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                  Visibility="{x:Bind ViewModel.Search, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=invert}"
                  Margin="12,0,12,-12"
                  CornerRadius="8,8,0,0">
                <controls:InlineBotResultsView
                    x:Name="ListInline"
                    Visibility="{x:Bind ViewModel.InlineBotResultsVisibility, Mode=OneWay}"
                    ItemClick="InlineBotResults_ItemClick"
                    VerticalAlignment="Bottom"/>
                <controls:OrientableListView
                    x:Name="ListAutocomplete"
                    ItemTemplateSelector="{StaticResource AutocompleteTemplate}"
                    ChoosingItemContainer="Autocomplete_ChoosingItemContainer"
                    ContainerContentChanging="Autocomplete_ContainerContentChanging"
                    AllowFocusOnInteraction="False"
                    IsItemClickEnabled="True"
                    ItemClick="Autocomplete_ItemClick"
                    VerticalAlignment="Bottom"
                    Style="{StaticResource ZoomableListViewStyle}"
                    Padding="0,0,0,12">
                    <GridView.ItemContainerStyle>
                        <Style TargetType="GridViewItem" BasedOn="{StaticResource ZoomableListViewItemStyle}">
                            <Setter Property="MinWidth" Value="0"/>
                            <Setter Property="Padding" Value="0"/>
                        </Style>
                    </GridView.ItemContainerStyle>
                    <GridView.ItemContainerTransitions>
                        <TransitionCollection/>
                    </GridView.ItemContainerTransitions>
                </controls:OrientableListView>
            </Grid>
        </Grid>

        <ScrollViewer x:Name="ReplyMarkupPanel"
                      MaxHeight="260"
                      VerticalScrollBarVisibility="Auto"
                      VerticalScrollMode="Auto"
                      HorizontalScrollBarVisibility="Disabled"
                      HorizontalScrollMode="Disabled"
                      Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                      Visibility="Collapsed"
                      Grid.Row="4">
            <controls:ReplyMarkupPanel x:Name="ReplyMarkup" AllowFocusOnInteraction="False" ButtonClick="ReplyMarkup_ButtonClick" Margin="4,0,4,0"/>
        </ScrollViewer>

        <Grid x:Name="KeyboardItems" Grid.Row="4">
            <controls:StickerPanel x:Name="StickersPanel" Visibility="Collapsed" Height="260" MaxHeight="360" MinHeight="260"/>
        </Grid>

        <!-- Input pane -->
        <!--<Border x:Name="Separator" Visibility="{x:Bind ConvertShadowVisibility(ViewModel.InlineBotResultsVisibility, ViewModel.StickerPack, ViewModel.Autocomplete), Mode=OneWay}" Grid.Row="3"/>-->
        <Border x:Name="Separator" Margin="12,0" Grid.Row="3"/>

        <ContentControl x:Name="TextArea"
                        IsTabStop="False"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Stretch"
                        Margin="12,0,12,8"
                        Grid.Row="3">
            <Grid x:Name="TextRoot"
                  Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                  MinHeight="{StaticResource TelegramToolBarHeight}"
                  SizeChanged="TextArea_SizeChanged"
                  CornerRadius="15">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Grid x:Name="ComposerHeader" Visibility="Collapsed" Grid.ColumnSpan="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <messages:MessageReference x:Name="ComposerHeaderReference" Click="Reply_Click" VerticalAlignment="Stretch" VerticalContentAlignment="Center" Margin="-10,0,0,0" BorderBrush="Transparent" Grid.Column="1"/>
                    <FontIcon x:Name="ComposerHeaderGlyph" Foreground="{ThemeResource MessageHeaderBorderBrush}"/>

                    <controls:ProgressBarRing x:Name="ComposerHeaderUpload" Background="Transparent" Foreground="{ThemeResource MessageHeaderBorderBrush}"/>

                    <controls:GlyphButton x:Name="ComposerHeaderCancel" Command="{x:Bind ViewModel.ClearReplyCommand}" Height="{StaticResource TelegramToolBarHeight}" AllowFocusOnInteraction="False" Glyph="&#xE10A;" Grid.Column="2"/>
                </Grid>

                <Border Grid.ColumnSpan="4" Grid.Row="2">
                    <Border
                        x:Name="TextBackground"
                        Background="{ThemeResource PageBackgroundDarkBrush}"
                        Visibility="Collapsed"/>
                </Border>

                <Border x:Name="TextFieldPanel" Grid.ColumnSpan="2" Grid.Row="1">
                    <chats:ChatTextBox
                        x:Name="TextField"
                        FontFamily="{ThemeResource EmojiThemeFontFamily}"
                        Background="Transparent"
                        Formatting="{x:Bind TextFormatting}"
                        Messages="{x:Bind Messages}"
                        Autocomplete="{x:Bind ListAutocomplete}"
                        AcceptsReturn="False"
                        BorderThickness="0"
                        Padding="48,4,0,6"
                        TextWrapping="Wrap"
                        InputScope="Chat"
                        VerticalAlignment="Bottom"
                        VerticalContentAlignment="Bottom"
                        PreventKeyboardDisplayOnProgrammaticFocus="True"
                        MinHeight="{StaticResource TelegramToolBarHeight}"
                        MaxHeight="192"
                        TextChanged="TextField_TextChanged"
                        Capture="TextField_Tapped"
                        Sending="TextField_Sending"
                        ShowFormatting="TextField_Formatting"
                        HideFormatting="TextField_Formatting"/>
                </Border>
                <Border x:Name="btnAttach" Grid.Row="1">
                    <controls:GlyphButton
                        x:Name="ButtonAttach"
                        Click="Attach_Click"
                        Glyph="&#xE917;"
                        FontFamily="{StaticResource TelegramThemeFontFamily}"
                        AllowFocusOnInteraction="False"
                        VerticalAlignment="Bottom"
                        AutomationProperties.Name="{CustomResource AccDescrAttachButton}"
                        ToolTipService.ToolTip="{CustomResource AccDescrAttachButton}"
                        Grid.Row="1">
                        <FlyoutBase.AttachedFlyout>
                            <MenuFlyout Placement="Top">
                                <MenuFlyoutSeparator x:Name="AttachRestriction">
                                    <MenuFlyoutSeparator.Template>
                                        <ControlTemplate TargetType="MenuFlyoutSeparator">
                                            <TextBlock
                                                Text="{TemplateBinding Tag}"
                                                Foreground="{ThemeResource SystemControlDisabledChromeDisabledLowBrush}"
                                                Style="{StaticResource CaptionTextBlockStyle}"
                                                Margin="12,4,12,8"/>
                                        </ControlTemplate>
                                    </MenuFlyoutSeparator.Template>
                                </MenuFlyoutSeparator>
                                <MenuFlyoutItem
                                    x:Name="AttachMedia"
                                    Text="{CustomResource ChatGallery}"
                                    Command="{x:Bind ViewModel.SendMediaCommand}">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xEB9F;"/>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutItem
                                    x:Name="AttachCamera"
                                    Text="{CustomResource ChatCamera}"
                                    Command="{x:Bind ViewModel.SendCameraCommand}">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE722;"/>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutItem
                                    x:Name="AttachDocument"
                                    Text="{CustomResource ChatDocument}"
                                    Command="{x:Bind ViewModel.SendDocumentCommand}">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE160;"/>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutItem
                                    x:Name="AttachLocation"
                                    Text="{CustomResource ChatLocation}"
                                    Command="{x:Bind ViewModel.SendLocationCommand}">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE1C4;"/>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutItem
                                    x:Name="AttachPoll"
                                    Text="{CustomResource Poll}"
                                    Command="{x:Bind ViewModel.SendPollCommand}">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE91F;" FontFamily="{StaticResource TelegramThemeFontFamily}"/>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutItem
                                    x:Name="AttachContact"
                                    Text="{CustomResource AttachContact}"
                                    Command="{x:Bind ViewModel.SendContactCommand}">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE77B;"/>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutItem
                                    x:Name="AttachCurrent"
                                    Text="{CustomResource Edit}"
                                    Command="{x:Bind ViewModel.EditCurrentCommand}">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE7A8;"/>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                            </MenuFlyout>
                        </FlyoutBase.AttachedFlyout>
                    </controls:GlyphButton>
                </Border>

                <Border HorizontalAlignment="Left" Margin="0,0,48,0" Grid.ColumnSpan="4" Grid.Row="1">
                    <StackPanel x:Name="ElapsedPanel" SizeChanged="ElapsedPanel_SizeChanged" Orientation="Horizontal">
                        <Ellipse Fill="Red" Width="12" Height="12" Margin="12,0,8,0"/>
                        <TextBlock x:Name="ElapsedLabel" Text="0:00,00" Margin="0,0,0,1" Width="64" VerticalAlignment="Center"/>
                    </StackPanel>
                </Border>

                <Border HorizontalAlignment="Right" Margin="0,0,84,0" Grid.ColumnSpan="4" Grid.Row="1">
                    <StackPanel x:Name="SlidePanel" SizeChanged="SlidePanel_SizeChanged" Orientation="Horizontal">
                        <FontIcon Foreground="{ThemeResource SystemControlForegroundBaseMediumBrush}" Glyph="&#xE00E;" FontSize="12" Margin="0,1,4,0"/>
                        <TextBlock Foreground="{ThemeResource SystemControlForegroundBaseMediumBrush}" Text="{CustomResource SlideToCancel}" VerticalAlignment="Center" Margin="0,0,0,0" Style="{StaticResource CaptionTextBlockStyle}"/>
                    </StackPanel>
                </Border>

                <HyperlinkButton x:Name="ButtonCancelRecording"
                                 Click="ButtonCancelRecording_Click"
                                 Content="{CustomResource Cancel}"
                                 HorizontalAlignment="Center"
                                 Visibility="Collapsed"
                                 Grid.ColumnSpan="4"
                                 Grid.Row="1"/>

                <Grid x:Name="ButtonsPanel" Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid x:Name="SecondaryButtonsPanel">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!-- Button to access scheduled messages -->
                        <Border x:Name="btnScheduled">
                            <controls:GlyphButton
                                x:Name="ButtonScheduled"
                                Glyph="&#xE81C;"
                                Command="{x:Bind ViewModel.ScheduledCommand}"
                                AutomationProperties.Name="{CustomResource ScheduledMessages}"
                                ToolTipService.ToolTip="{CustomResource ScheduledMessages}"                  
                                VerticalAlignment="Bottom"/>
                        </Border>

                        <!-- Button to toggle silent mode, channels only -->
                        <controls:AnimatedGlyphToggleButton
                            x:Name="ButtonSilent"
                            Glyph="&#xEA8F;"
                            CheckedGlyph="&#xE7ED;"
                            Command="{x:Bind ViewModel.ToggleSilentCommand}"
                            VerticalAlignment="Bottom"
                            Grid.Column="1"/>

                        <!-- Button to change self-destructing timer, secret chats only -->
                        <controls:GlyphButton
                            x:Name="ButtonTimer"
                            Glyph="&#xE916;"
                            Command="{x:Bind ViewModel.SetTimerCommand}"
                            VerticalAlignment="Bottom"
                            Grid.Column="1"/>

                        <!-- Button to use bot commands, bots/groups only -->
                        <Border x:Name="btnCommands" Grid.Column="2">
                            <controls:GlyphButton
                                x:Name="ButtonCommands"
                                Click="Commands_Click"
                                AllowFocusOnInteraction="False"
                                Glyph="&#xE613;"
                                Visibility="{x:Bind ViewModel.HasBotCommands, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                                FontFamily="{StaticResource TelegramThemeFontFamily}"
                                VerticalAlignment="Bottom"
                                AutomationProperties.Name="{CustomResource AccDescrBotCommands}"
                                ToolTipService.ToolTip="{CustomResource AccDescrBotCommands}"
                                Grid.Column="1"/>
                        </Border>

                        <!-- Button to use bot keyboard, bots/groups only -->
                        <Border x:Name="btnMarkup" Grid.Column="2">
                            <controls:AnimatedGlyphButton
                                x:Name="ButtonMarkup"
                                Click="Markup_Click"
                                AllowFocusOnInteraction="False"
                                Glyph="&#xE90F;"
                                Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                                FontFamily="{StaticResource TelegramThemeFontFamily}"
                                VerticalAlignment="Bottom"
                                AutomationProperties.Name="{CustomResource AccDescrBotKeyboard}"
                                ToolTipService.ToolTip="{CustomResource AccDescrBotKeyboard}"
                                Grid.Column="1"/>
                        </Border>
                    </Grid>

                    <!-- Button to use stickers keyboard, all -->
                    <chats:ChatStickerButton
                        x:Name="ButtonStickers"
                        Click="Stickers_Click"
                        AllowFocusOnInteraction="False"
                        Glyph="&#xF4AA;"
                        VerticalAlignment="Bottom"
                        AutomationProperties.Name="{CustomResource AccDescrEmojiButton}"
                        Grid.Column="1"/>
                    <!--ToolTipService.ToolTip="{CustomResource AccDescrEmojiButton}"-->

                    <Grid x:Name="ButtonRecord" VerticalAlignment="Bottom" Grid.Column="2" Canvas.ZIndex="1000">
                        <Ellipse x:Name="Ellipse" Fill="{ThemeResource SystemControlBackgroundAccentBrush}" Width="96" Height="96" Margin="-24" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <chats:ChatRecordButton
                            x:Name="btnVoiceMessage"
                            AllowFocusOnInteraction="False"
                            RecordingStarted="VoiceButton_RecordingStarted"
                            RecordingStopped="VoiceButton_RecordingStopped"
                            RecordingLocked="VoiceButton_RecordingLocked"
                            ManipulationDelta="VoiceButton_ManipulationDelta"
                            ManipulationMode="TranslateX,TranslateY"/>
                    </Grid>

                    <chats:ChatSendButton
                        x:Name="btnSendMessage"
                        ContextRequested="Send_ContextRequested"
                        VerticalAlignment="Bottom"
                        Click="btnSendMessage_Click"
                        Glyph="&#xE919;"
                        AllowFocusOnInteraction="False"
                        Grid.Column="2"
                        Canvas.ZIndex="1001"
                        AutomationProperties.Name="{CustomResource Send}"
                        ToolTipService.ToolTip="{CustomResource Send}"
                        Visibility="Collapsed"/>

                    <controls:GlyphButton
                        x:Name="btnEdit"
                        VerticalAlignment="Bottom"
                        Click="btnSendMessage_Click"
                        Glyph="&#xEC61;"
                        AllowFocusOnInteraction="False"
                        Foreground="{ThemeResource TelegramBackgroundAccentBrush}"
                        FontSize="24"
                        Grid.Column="2"
                        AutomationProperties.Name="{CustomResource Done}"
                        ToolTipService.ToolTip="{CustomResource Done}"
                        Visibility="Collapsed"/>
                </Grid>

                <Border Grid.Column="1" Grid.Row="2">
                    <chats:ChatTextFormatting
                        x:Name="TextFormatting"
                        TextBox="{x:Bind TextField}"
                        Visibility="Collapsed"/>
                </Border>
            </Grid>
        </ContentControl>

        <Grid x:Name="ChatFooter" Margin="12,0,12,8" CornerRadius="15" Grid.Row="3">
            <chats:ChatBottomButton
                x:Name="ButtonAction"
                Command="{x:Bind ViewModel.ActionCommand}"
                Height="{StaticResource TelegramToolBarHeight}">
                <Button.Content>
                    <TextBlock x:Name="LabelAction" TextWrapping="Wrap" TextAlignment="Center"/>
                </Button.Content>
            </chats:ChatBottomButton>
        </Grid>

        <chats:ChatSearchBar
            x:Name="SearchMask"
            Visibility="Collapsed"
            Grid.RowSpan="4"
            Canvas.ZIndex="3"/>

        <!--<controls:UndoView x:Name="Undo" VerticalAlignment="Bottom" Margin="0,0,0,-48" Grid.RowSpan="4"/>-->
    </Grid>
</local:HostedPage>
