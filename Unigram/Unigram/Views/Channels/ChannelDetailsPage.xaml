<Page
    x:Class="Unigram.Views.Channels.ChannelDetailsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Unigram.Views"
    xmlns:models="using:Telegram.Api.TL"
    xmlns:selectors="using:Unigram.Selectors"
    xmlns:controls="using:Unigram.Controls"
    xmlns:common="using:Unigram.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition>
                <SuppressNavigationTransitionInfo/>
            </NavigationThemeTransition>
        </TransitionCollection>
    </Page.Transitions>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <!--<controls:ButtonPageHeader
            Text="Info"
            Glyph="&#xE115;"
            Command="{x:Bind ViewModel.EditCommand}"
            CommandVisibility="{x:Bind (Visibility)ViewModel.IsEditEnabled, Mode=OneWay}"/>-->
        <controls:ButtonPageHeader
            Text="Info"
            Glyph="&#xE104;"
            Command="{x:Bind ViewModel.EditCommand}"
            CommandVisibility="{x:Bind (Visibility)ViewModel.IsEditEnabled, Mode=OneWay}"/>

        <controls:ScrollViewerBackground 
            Background="{ThemeResource TelegramBackgroundSubtitleBarBrush}"
            ScrollingHost="{x:Bind ScrollingHost}"
            VerticalAlignment="Top"
            Grid.Row="1"/>
        <ListView x:Name="ScrollingHost"
                  ItemsSource="{x:Bind ViewModel.Participants}"
                  ItemClick="ListView_ItemClick"
                  IsItemClickEnabled="True"
                  SelectionMode="None"
                  Grid.Row="1">
            <ListView.Header>
                <StackPanel>
                    <Grid Background="{ThemeResource TelegramBackgroundSubtitleBarBrush}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <controls:ProfilePicture x:Name="Picture" Click="Photo_Click" Source="{x:Bind ViewModel.Item.PhotoSelf, Mode=OneWay, Converter={StaticResource DefaultPhotoConverter}}" Height="64" Width="64" Margin="12,6" Grid.RowSpan="2"/>

                        <Grid VerticalAlignment="Bottom" HorizontalAlignment="Left" Grid.Column="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{x:Bind ViewModel.Item.DisplayName, Mode=OneWay}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Style="{StaticResource BaseTextBlockStyle}"/>
                            <Grid Margin="4,0,0,-2" Visibility="{x:Bind (Visibility)ViewModel.Item.IsVerified, Mode=OneWay}" Grid.Column="2">
                                <Path Width="10" Height="10" Stretch="Uniform" Data="F1M33,0L23,3 12.999,0 9,9 0,13 2.999,23 0,33 9,37 12.999,46 23,43 33,46 37,37 46,33 43,23 46,13 37,9z" Fill="{ThemeResource TelegramDialogVerifiedBackgroundBrush}" StrokeThickness="0" />
                                <Path Width="16" Height="16" Stretch="Uniform" Data="F1M33,0L23,3 12.999,0 9,9 0,13 2.999,23 0,33 9,37 12.999,46 23,43 33,46 37,37 46,33 43,23 46,13 37,9z M31.485,14.514L35.727,18.757 23.707,30.778 19.464,35.021 15.221,30.778 10.271,25.828 14.514,21.586 19.464,26.535z" Fill="{ThemeResource TelegramDialogVerifiedForegroundBrush}" StrokeThickness="0" />
                            </Grid>
                        </Grid>
                        <TextBlock Text="{x:Bind ViewModel.Item, Converter={StaticResource LastSeenConverter}}" Style="{StaticResource CaptionTextBlockStyle}" Foreground="{ThemeResource SystemControlDisabledChromeDisabledLowBrush}" VerticalAlignment="Top" Grid.Row="1" Grid.Column="1"/>
                    </Grid>

                    <StackPanel Visibility="{x:Bind ViewModel.Full.About, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}"
                                BorderBrush="{ThemeResource SystemControlForegroundBaseLowBrush}"
                                BorderThickness="0,0,0,1"
                                Margin="12,0,0,0">
                        <RichTextBlock common:MessageHelper.Text="{x:Bind ViewModel.Full.About, Mode=OneWay}"
                                       ContextRequested="About_ContextRequested"
                                       ContextMenuOpening="About_ContextMenuOpening"
                                       Padding="12,12,12,12"
                                       Margin="-12,0,0,0"
                                       Style="{StaticResource BodyRichTextBlockStyle}"/>
                    </StackPanel>

                    <controls:HyperButton Tag="Link"
                                          Command="{x:Bind ViewModel.UsernameCommand}"
                                          Content="{x:Bind ViewModel.Item.Username, Mode=OneWay, Converter={StaticResource MeUrlPrefixConverter}}"
                                          Visibility="{x:Bind ViewModel.Item.Username, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}"
                                          Style="{StaticResource SubtitleButtonStyle}"/>

                    <StackPanel Margin="0,24,0,0">
                        <ToggleSwitch Header="{CustomResource Notifications}"
                                      IsOn="{x:Bind ViewModel.IsMuted, Mode=OneWay, Converter={StaticResource BooleanNegationConverter}}"
                                      Style="{ThemeResource CheckButtonStyle}"
                                      Toggled="Notifications_Toggled"/>

                        <controls:BadgeButton Content="{CustomResource SharedMedia}"
                                              Command="{x:Bind ViewModel.MediaCommand}"
                                              Style="{StaticResource BadgeButtonStyle}"/>

                        <controls:HyperButton Content="{CustomResource AddMember}"
                                              Command="{x:Bind ViewModel.InviteCommand}"
                                              Visibility="{x:Bind ViewModel.IsInviteUsers, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                                              Style="{StaticResource HyperButtonStyle}"
                                              Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
                    </StackPanel>

                    <StackPanel Margin="0,24,0,18">
                        <controls:HyperButton Content="{CustomResource EventLog}"
                                              Command="{x:Bind ViewModel.AdminLogCommand}"
                                              Visibility="{x:Bind ViewModel.IsAdminLog, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                                              Style="{StaticResource HyperButtonStyle}"
                                              Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
                        <controls:BadgeButton Content="{CustomResource ChannelAdministrators}"
                                              Command="{x:Bind ViewModel.AdminsCommand}"
                                              Badge="{x:Bind ViewModel.Full.AdminsCount, Mode=OneWay}"
                                              Visibility="{x:Bind ConvertBooleans(ViewModel.Full.AdminsCount, ViewModel.IsAdminLog, x:True), Mode=OneWay, FallbackValue=Collapsed}"
                                              Style="{StaticResource BadgeButtonStyle}"/>
                        <controls:BadgeButton Content="{CustomResource ChannelRestrictedUsers}"
                                              Command="{x:Bind ViewModel.BannedCommand}"
                                              Badge="{x:Bind ViewModel.Full.BannedCount, Mode=OneWay}"
                                              Visibility="{x:Bind ConvertBooleans(ViewModel.Full.BannedCount, ViewModel.IsAdminLog, x:True), Mode=OneWay, FallbackValue=Collapsed}"
                                              Style="{StaticResource BadgeButtonStyle}"/>
                        <controls:BadgeButton Content="{CustomResource ChannelBlockedUsers}"
                                              Command="{x:Bind ViewModel.KickedCommand}"
                                              Badge="{x:Bind ViewModel.Full.KickedCount, Mode=OneWay}"
                                              Visibility="{x:Bind ConvertBooleans(ViewModel.Full.KickedCount, ViewModel.IsAdminLog, x:True), Mode=OneWay, FallbackValue=Collapsed}"
                                              Style="{StaticResource BadgeButtonStyle}"/>
                        <controls:BadgeButton Content="{CustomResource ChannelMembers}"
                                              Command="{x:Bind ViewModel.ParticipantsCommand}"
                                              Badge="{x:Bind ViewModel.Full.ParticipantsCount, Mode=OneWay}"
                                              Visibility="{x:Bind ConvertBooleans(ViewModel.Full.ParticipantsCount, ViewModel.IsAdminLog, ViewModel.Item.IsBroadcast), Mode=OneWay, FallbackValue=Collapsed}"
                                              Style="{StaticResource BadgeButtonStyle}"/>
                    </StackPanel>
                </StackPanel>
            </ListView.Header>
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="models:TLChannelParticipantBase">
                    <Grid Padding="0,6" Background="Transparent" ContextRequested="Participant_ContextRequested">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <controls:ProfilePicture x:Phase="3" Source="{x:Bind User.PhotoSelf, Mode=OneWay, Converter={StaticResource DefaultPhotoConverter}}" IsEnabled="False" Width="36" Height="36" Margin="0,0,12,0" Grid.RowSpan="2"/>

                        <TextBlock Text="{x:Bind User.FullName}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Grid.Column="1" VerticalAlignment="Bottom" Grid.Row="0"/>
                        <TextBlock Text="{x:Bind User, Converter={StaticResource LastSeenConverter}, ConverterParameter=list}"
                                   Style="{StaticResource CaptionTextBlockStyle}"
                                   Foreground="{ThemeResource SystemControlDisabledChromeDisabledLowBrush}"
                                   VerticalAlignment="Top"
                                   TextTrimming="CharacterEllipsis"
                                   TextWrapping="NoWrap"
                                   Grid.Column="1"
                                   Grid.Row="1"
                                   MaxLines="1"
                                   x:Phase="1"/>

                        <TextBlock Text="admin"
                                   Style="{StaticResource CaptionTextBlockStyle}"
                                   Foreground="{ThemeResource SystemControlDisabledChromeDisabledLowBrush}"
                                   Visibility="{x:Bind (Visibility)IsAdmin}"
                                   Grid.Column="2"
                                   Grid.RowSpan="2"/>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>
    </Grid>
</Page>
